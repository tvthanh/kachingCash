{"version":3,"sources":["kachingCore.js","utils.js","modalCtrl.js","apiService.js","authService.js","authToken.js","userService.js","errorHandler.js","loader.js","preventDefault.js","passwordMatch.js","panelTitle.js","header.js","panelNav.js","userNavBar.js","resetPassword.js","activateAccount.js"],"names":["console","log","angular","module","constant","kachingAppConfig","apiUrl","controller","$scope","$rootScope","$ocLazyLoad","$urlRouter","$modal","$window","authService","isHomePage","isLoggedIn","location","href","panelUrl","isPanelPage","load","wpTemplateUri","then","panelApp","sync","showSignupDialog","templateUrl","animation","placement","factory","fieldHasError","elScope","formName","fieldName","error","field","hasOwnProperty","$parent","$error","$invalid","cleanupUploaderQueue","uploader","videoItems","imageItems","forEach","getNotUploadedItems","item","index","alias","push","queueIndex","length","removeFromQueue","addUploaderTypeFilter","filter","name","Object","keys","acceptedTypes","filters","fn","file","uploaderItem","indexOf","type","urlRegex","ul","ipv4_re","ipv6_re","hostname_re","domain_re","tld_re","host_re","regex","RegExp","$alert","$state","utils","view","busy","formError","loginFormData","email","password","$hide","showForgotPasswordDialog","signinFormSubmit","login","user","errorHandler","userService","sending","submitted","success","data","firstName","lastName","company","showErrors","clearCustomErrors","form1","$setValidity","usertypeImgSrc","image","usertype","hasEmailError","response","_","findWhere","errorDetails","paramsMistake","mistakenParams","signupFormSubmit","$valid","registerUser","repsonse","status","processApiResponse","showLoginDialog","formSubmit","passwordResetRequest","newPassword","newPasswordRepeat","token","resetPassword","uid","passwordReset","$http","$cookies","$q","authToken","makeRequest","method","path","authRequired","deferred","defer","request","url","params","headers","Authorization","get","resolve","match","destroyCookies","reject","promise","remove","delete","getRequest","putRequest","postRequest","patchRequest","deleteRequest","put","post","patch","apiService","sessionDays","switchUserType","expires","Date","setDate","getDate","isAdvertiser","isDeveloper","getUsertype","requestAuthToken","save","getUser","logout","finally","saveToken","deleteToken","getToken","forceCookieCheck","id","first_name","last_name","country","toString","undefined","city","address","postalCode","postal_code","getBalance","updateUser","changePassword","currentPassword","new_password","current_password","groups","activateAccount","getCountries","countries","title","content","container","duration","show","directive","restrict","link","scope","element","attrs","ngClick","on","e","preventDefault","require","elem","ctrl","firstPassword","passwordMatch","add","$apply","v","val","$","$timeout","el","originalTitle","text","$on","stateTitle","$current","loggedIn","logoClick","homeUrl","isPanel","urls","campaigns","media","products","billing","apikeys","isHomepage","username","balance","account","funds","cards","credits_balance","transitionTo","urlError","kachingQueryParams","verificationError","verificationSuccess","verificationProcessing","logginProcessing"],"mappings":"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","file":"kachingCore.js","sourcesContent":["(function(){\n    \"use strict\";\n\n    console.log('kachingCore loaded');\n\n    angular.module('kachingCore', [\n        'underscore',\n        'ngSanitize',\n        'ngAnimate',\n        'ngCookies',\n        'ui.router',\n        'mgcrea.ngStrap',\n        'oc.lazyLoad',\n        'kachingTmpl'\n    ]);\n\n    angular.module('kachingCore')\n\n        .constant( 'apiUrl', kachingAppConfig.apiUrl )\n        .constant( 'sessionDays', 30 )\n\n        .controller('kachingCoreCtrl', [\n            '$scope',\n            '$rootScope',\n            '$ocLazyLoad',\n            '$urlRouter',\n            '$modal',\n            '$window',\n            'authService',\n        function(\n            $scope,\n            $rootScope,\n            $ocLazyLoad,\n            $urlRouter,\n            $modal,\n            $window,\n            authService\n        ) {\n\n            if ( kachingAppConfig.isHomePage === true && authService.isLoggedIn() ) {\n                $window.location.href = kachingAppConfig.panelUrl;\n            } else if ( kachingAppConfig.isPanelPage === true ) {\n                $scope.isPanelPage = true;\n                $ocLazyLoad.load( kachingAppConfig.wpTemplateUri + '/dist/js/panelApp.min.js').then(\n                    function( panelApp ) {\n                        $urlRouter.sync();\n                    }\n                );\n            }\n\n            $scope.showSignupDialog = function() {\n                $modal({\n                    templateUrl: 'kaching-core/components/signupModal/modalTmpl.html',\n                    controller: 'signupModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    placement: 'center'\n                });\n            };\n\n        }]);\n})();\n","(function(){\n    \"use strict\";\n\n    angular.module('kachingCore')\n        .factory('utils', [ function() {\n\n            var fieldHasError = function( elScope, formName, fieldName, error ) {\n\n                var field;\n\n                if ( elScope.hasOwnProperty(formName) && typeof elScope[formName] === 'object' ) {\n                    field = elScope[formName][fieldName];\n                } else if ( elScope.$parent.hasOwnProperty(formName) && typeof elScope.$parent[formName] === 'object' ) {\n                    field = elScope.$parent[formName][fieldName];\n                }\n\n                if ( typeof field === 'undefined' ) {\n                    return false;\n                }\n\n                if ( typeof error !== 'undefined' ) {\n                    return field.$error[error] ? true : false;\n                } else {\n                    return field.$invalid ? true : false;\n                }\n            };\n\n            // Allow only 1 image and 1 video in the upload queue\n            var cleanupUploaderQueue = function( uploader ) {\n                var videoItems = [], imageItems = [];\n                angular.forEach( uploader.getNotUploadedItems(), function( item, index ) {\n                    if ( item.alias === 'video' ) {\n                        videoItems.push({ queueIndex: index });\n                    } else {\n                        imageItems.push({ queueIndex: index });\n                    }\n                });\n                if ( videoItems.length > 1) {\n                    uploader.removeFromQueue( videoItems[0].queueIndex );\n                }\n                if ( imageItems.length > 1) {\n                    uploader.removeFromQueue( imageItems[0].queueIndex );\n                }\n            };\n\n            var addUploaderTypeFilter = function( uploader, alias, filter ) {\n                var name = Object.keys(filter)[0];\n                var acceptedTypes = filter[name];\n                uploader.filters.push({\n                    name: name,\n                    fn: function(file, uploaderItem) {\n                        if ( uploaderItem.alias !== alias ) {\n                            return true;\n                        }\n                        if ( acceptedTypes.indexOf( file.type ) === -1 ) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                });\n            };\n\n            // URL validation regex based on the Django URL validator used in the backend\n            //   Differences:\n            //     - scheme has been made optional\n            //     - there is no check for the dashes at the end of domain name and tld (due to lack of support for lookbehind in JS)\n            var urlRegex = function(){\n\n                var ul = '\\\\u00a1-\\\\uffff';  // unicode letters range (must be a unicode string, not a raw string)\n\n                // IP patterns\n                var ipv4_re = '(?:25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}';\n                var ipv6_re = '([0-9a-f:\\\\.]+)';  // (simple regex, validated later)\n\n                // Host patterns\n                var hostname_re = '[a-z' + ul + '0-9](?:[a-z' + ul + '0-9-]{0,61}[a-z' + ul + '0-9])?';\n\n                // Max length for domain name labels is 63 characters per RFC 1034 sec. 3.1\n                var domain_re = '(?:\\\\.(?!-)[a-z' + ul + '0-9-]{1,63})*';\n\n                // Original was (with lookbehind):\n                // domain_re = r'(?:\\.(?!-)[a-z' + ul + r'0-9-]{1,63}(?<!-))*'\n\n                var tld_re = '';\n                tld_re += '\\\\.';                               // dot\n                tld_re += '(?!-)';                             // can't start with a dash\n                tld_re += '(?:[a-z' + ul + '-]{2,63}';         // domain label\n                tld_re += '|xn--[a-z0-9]{1,59})';              // or punycode label\n                // tld_re += '(?<!-)';                            // can't end with a dash (lookbehind...)\n                tld_re += '\\\\.?';                              // may have a trailing dot\n\n                var host_re = '(' + hostname_re + domain_re + tld_re + '|localhost)';\n\n\n                var regex = '';\n                regex += '^(?:(?:[a-z0-9\\\\.\\\\-\\\\+]*):\\\\/\\\\/)?';                      // scheme. This is one big diffrence from the backend validation - scheme is optional\n                regex += '(?:\\\\S+(?::\\\\S*)?@)?';                                     // user:pass authentication\n                regex += '(?:' + ipv4_re + '|' + ipv6_re + '|' + host_re + ')';\n                regex += '(?::\\\\d{2,5})?';                                           // port\n                regex += '(?:[/?#][^\\\\s]*)?';                                        // resource path\n                regex += '$';\n\n                return RegExp( regex, 'i' );\n            };\n\n            return {\n                fieldHasError: fieldHasError,\n                cleanupUploaderQueue: cleanupUploaderQueue,\n                addUploaderTypeFilter: addUploaderTypeFilter,\n                urlRegex: urlRegex\n            };\n        }]);\n\n})();\n","(function(){\n    'use strict';\n\n    angular.module('kachingCore')\n        .controller( 'resetPasswordModalCtrl', [\n            '$scope',\n            'errorHandler',\n            '$modal',\n            'utils',\n            'userService',\n        function (\n            $scope,\n            errorHandler,\n            $modal,\n            utils,\n            userService\n        ) {\n\n            $scope.fieldHasError = utils.fieldHasError;\n\n            $scope.view = {\n                sending: false,\n                submitted: false,\n                success: false\n            };\n\n            $scope.data = {\n                newPassword: '',\n                newPasswordRepeat: '',\n                token: kachingAppConfig.resetPassword.token,\n                uid: kachingAppConfig.resetPassword.uid\n            };\n\n            $scope.showErrors = function() {\n                return $scope.view.submitted;\n            };\n\n            $scope.formSubmit = function() {\n                $scope.view.submitted = true;\n                if ( $scope.form1.$valid ) {\n\n                    $scope.view.sending = true;\n\n                    userService.passwordReset( $scope.data.newPassword, $scope.data.uid, $scope.data.token ).then(\n                        function(){\n                            $scope.view.sending = false;\n                            $scope.view.success = true;\n                        },\n                        function( response ){\n                            errorHandler.processApiResponse( response );\n                            $scope.$hide();\n                        }\n                    );\n                }\n            };\n\n            $scope.showLoginDialog = function() {\n                $scope.$hide();\n                $modal({\n                    templateUrl: 'kaching-core/components/loginModal/modalTmpl.html',\n                    controller: 'loginModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    placement: 'center'\n                });\n            };\n\n        }]);\n})();","(function(){\n    \"use strict\";\n\n    console.log('apiService loaded');\n\n    angular.module('kachingCore')\n        .factory('apiService', [\n            '$http',\n            '$cookies',\n            '$q',\n            '$window',\n            'apiUrl',\n            'authToken',\n        function(\n            $http,\n            $cookies,\n            $q,\n            $window,\n            apiUrl,\n            authToken\n        ) {\n\n            console.log('in apiService');\n\n            var makeRequest = function( method, path, data, authRequired ) {\n\n                console.log('in makeRequest()', method, path, data, authRequired);\n\n                var deferred = $q.defer();\n\n                var request = {\n                    method: method,\n                    url: apiUrl + path\n                };\n\n                if ( data ) {\n                    if ( method === 'GET' ) {\n                        request.params = data;\n                    } else {\n                        request.data = data;\n                    }\n                }\n\n                if ( authRequired ) {\n                    request.headers = {\n                        'Authorization': 'Token ' + authToken.get( true )\n                    };\n                }\n\n                $http( request ).then(\n                    function( response ) {\n                        console.log('makeRequest() success - response, status', response);\n                        deferred.resolve( response.data );\n                    },\n                    function( response ) {\n                        console.log('makeRequest() failure - response, status', response);\n                        if ( response.status === 403 && request.url.match(/\\/auth\\/logout\\/$/) === null ) {\n                            destroyCookies();\n                            $window.location.href = kachingAppConfig.panelUrl + '#expired';\n                        }\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var destroyCookies = function() {\n                $cookies.remove( 'usertype', { path: '/' } );\n                authToken.delete();\n            };\n\n            var getRequest = function( path, data, authRequired ) {\n                console.log('in get()');\n                data = ( typeof data !== 'object' ) ? false : data;\n                authRequired = ( authRequired === true ) ? true : false;\n                return makeRequest( 'GET', path, data, authRequired );\n            };\n\n            var putRequest = function( path, data, authRequired ) {\n                console.log('in put()');\n                data = ( typeof data !== 'object' ) ? false : data;\n                authRequired = ( authRequired === true ) ? true : false;\n                return makeRequest( 'PUT', path, data, authRequired );\n            };\n\n            var postRequest = function( path, data, authRequired ) {\n                console.log('in post()');\n                data = ( typeof data !== 'object' ) ? false : data;\n                authRequired = ( authRequired === true ) ? true : false;\n                return makeRequest( 'POST', path, data, authRequired );\n            };\n\n            var patchRequest = function( path, data, authRequired ) {\n                console.log('in patch()');\n                data = ( typeof data !== 'object' ) ? false : data;\n                authRequired = ( authRequired === true ) ? true : false;\n                return makeRequest( 'PATCH', path, data, authRequired );\n            };\n\n            var deleteRequest = function( path, data, authRequired ) {\n                console.log('in delete()');\n                data = ( typeof data !== 'object' ) ? false : data;\n                authRequired = ( authRequired === true ) ? true : false;\n                return makeRequest( 'DELETE', path, data, authRequired );\n            };\n\n            return {\n                get: getRequest,\n                put: putRequest,\n                post: postRequest,\n                patch: patchRequest,\n                delete: deleteRequest\n            };\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('kachingCore')\n        .factory('authService', [\n            '$q',\n            '$cookies',\n            'utils',\n            'apiService',\n            'authToken',\n            'userService',\n            'sessionDays',\n        function(\n            $q,\n            $cookies,\n            utils,\n            apiService,\n            authToken,\n            userService,\n            sessionDays\n        ) {\n\n            var switchUserType = function( type ) {\n\n                var expires = new Date();\n                expires.setDate( expires.getDate() + sessionDays );\n\n                if ( type === 'advertiser' ) {\n                    if ( isAdvertiser() ) {\n                        return false;\n                    }\n                    $cookies.put( 'usertype', 'advertiser', { path: '/', expires: expires } );\n                    return true;\n                } else if ( type === 'developer' ) {\n                    if ( isDeveloper() ) {\n                        return false;\n                    }\n                    $cookies.put( 'usertype', 'developer', { path: '/', expires: expires } );\n                    return true;\n                }\n            };\n\n            var parseUsertype = function( usertype ) {\n                usertype = parseInt( usertype );\n                if ( usertype === 1 ) {\n                    return 'advertiser';\n                } else if ( usertype === 2 ) {\n                    return 'developer';\n                } else {\n                    return false;\n                }\n            };\n\n            var isLoggedIn = function() {\n                return ( authToken.get( true ) !== false && typeof getUsertype() !== 'undefined' ) ? true : false;\n            };\n\n            var getUsertype = function() {\n                return $cookies.get('usertype');\n            };\n\n            var isAdvertiser = function() {\n                return getUsertype() === 'advertiser';\n            };\n\n            var isDeveloper = function() {\n                return getUsertype() === 'developer';\n            };\n\n            var requestAuthToken = function( email, password ) {\n\n                var deferred = $q.defer();\n\n                apiService.post( '/api-token-auth/', { email: email, password: password } ).then(\n                    function( response ) {\n                        deferred.resolve( response.token );\n                    },\n                    function( response ) {\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var login = function( email, password ) {\n\n                var deferred = $q.defer();\n\n                $cookies.remove( 'usertype', { path: '/' } );\n                authToken.delete();\n\n                requestAuthToken( email, password ).then(\n                    function( token ){\n\n                        var expires = new Date();\n                        expires.setDate( expires.getDate() + sessionDays );\n\n                        authToken.save( token, expires );\n\n                        userService.getUser().then(\n                            function( user ) {\n                                $cookies.put( 'usertype', 'advertiser', { path: '/', expires: expires } );\n                                deferred.resolve( user );\n                            },\n                            function() {\n                                deferred.reject();\n                            }\n                        );\n                    },\n                    function(){\n                        deferred.reject();\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var logout = function() {\n\n                var deferred = $q.defer();\n\n                apiService.post( '/auth/logout/', false, true ).finally(function() {\n                    $cookies.remove( 'usertype', { path: '/' } );\n                    authToken.delete();\n                    deferred.resolve();\n                });\n\n                return deferred.promise;\n            };\n\n            return {\n                switchUserType: switchUserType,\n                isLoggedIn: isLoggedIn,\n                getUsertype: getUsertype,\n                isAdvertiser: isAdvertiser,\n                isDeveloper: isDeveloper,\n                login: login,\n                logout: logout\n            };\n        }]);\n})();","(function(){\n    'use strict';\n\n    console.log('authToken loaded');\n\n    angular.module('kachingCore')\n        .factory('authToken', [ '$cookies', function( $cookies ) {\n\n            var authToken;\n\n            var saveToken = function( token, expires ) {\n                $cookies.put( 'token', token, { path: '/', expires: expires } );\n            };\n\n            var deleteToken = function() {\n                $cookies.remove( 'token', { path: '/' } );\n            };\n\n            var getToken = function( forceCookieCheck ) {\n\n                if ( authToken && !forceCookieCheck ) {\n                    return authToken;\n                }\n\n                var token = $cookies.get( 'token' );\n                if ( token ) {\n                    authToken = token;\n                    return authToken;\n                }\n\n                return false;\n            };\n\n            return {\n                save: saveToken,\n                delete: deleteToken,\n                get: getToken\n            };\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('kachingCore')\n        .factory('userService', [ '$q', 'apiService', function( $q, apiService ) {\n\n            var user;\n\n            var getUser = function() {\n\n                var deferred = $q.defer();\n\n                apiService.get( '/auth/me/', false, true ).then(\n                    function( response ) {\n\n                        console.log('getUser() success', response);\n\n                        user = {\n                            id:         response.id,\n                            email:      response.email,\n                            firstName:  response.first_name ? response.first_name : '',\n                            lastName:   response.last_name ? response.last_name : '',\n                            company:    response.company ? response.company : '',\n                            country:    response.country ? response.country.toString() : undefined,\n                            city:       response.city ? response.city : '',\n                            address:    response.address ? response.address : '',\n                            postalCode: response.postal_code ? response.postal_code : ''\n                        };\n\n                        deferred.resolve( user );\n                    },\n                    function( response ) {\n                        console.log('getUser() failure', response );\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var getBalance = function() {\n\n                var deferred = $q.defer();\n\n                apiService.get( '/auth/me/balance/', false, true ).then(\n                    function( response ) {\n                        console.log('getBalance() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('getBalance() failure', response );\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var updateUser = function( user ) {\n\n                var deferred = $q.defer();\n\n                var data = {\n                    first_name:  user.firstName,\n                    last_name:   user.lastName,\n                    email:       user.email,\n                    company:     user.company,\n                    country:     user.country,\n                    city:        user.city,\n                    address:     user.address,\n                    postal_code: user.postalCode\n                };\n\n                apiService.patch( '/auth/me/', data, true ).then(\n                    function( data ) {\n                        console.log('updateUser() success', data);\n                        deferred.resolve( data );\n                    },\n                    function( response ) {\n                        console.log('updateUser() failure', response );\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var changePassword = function( currentPassword, newPassword ) {\n\n                var deferred = $q.defer();\n\n                var data = {\n                    new_password: newPassword,\n                    current_password:  currentPassword\n                };\n\n                apiService.post( '/auth/password/', data, true ).then(\n                    function( data ) {\n                        console.log('changePassword() success', data);\n                        deferred.resolve( data );\n                    },\n                    function( response ) {\n                        console.log('changePassword() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var passwordResetRequest = function( email ) {\n\n                var deferred = $q.defer();\n\n                var data = { email: email };\n\n                apiService.post( '/auth/password/reset/', data, false ).then(\n                    function( data ) {\n                        console.log('passwordResetRequest() success', data);\n                        deferred.resolve( data );\n                    },\n                    function( response ) {\n                        console.log('passwordResetRequest() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var passwordReset = function( password, uid, token ) {\n\n                var deferred = $q.defer();\n\n                var data = {\n                    uid: uid,\n                    token: token,\n                    new_password: password\n                };\n\n                apiService.post( '/auth/password/reset/confirm/', data, false ).then(\n                    function( data ) {\n                        console.log('passwordReset() success', data);\n                        deferred.resolve( data );\n                    },\n                    function( response ) {\n                        console.log('passwordReset() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var registerUser = function( user ) {\n\n                var deferred = $q.defer();\n\n                var data = {\n                    first_name: user.firstName,\n                    last_name:  user.lastName,\n                    email:      user.email,\n                    company:    user.company,\n                    password:   user.password,\n                    groups:     [1,2]\n                };\n\n                apiService.post( '/auth/register/', data, false ).then(\n                    function( data ) {\n                        console.log('registerUser() success', data);\n                        deferred.resolve( data );\n                    },\n                    function( response ) {\n                        console.log('registerUser() failure', response );\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var activateAccount = function( uid, token ) {\n\n                var deferred = $q.defer();\n\n                var data = {\n                    uid: uid,\n                    token: token\n                };\n\n                apiService.post( '/auth/activate/', data, false ).then(\n                    function( response ) {\n                        console.log('activateAccount() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('activateAccount() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var getCountries = function() {\n\n                var deferred = $q.defer();\n\n                apiService.get( '/countries/', null, true ).then(\n                    function( response ) {\n                        var countries = [];\n                        angular.forEach( response, function( name, id ){\n                            countries.push( { id: id, name: name } );\n                        });\n                        deferred.resolve( countries );\n                    },\n                    function( response ) { deferred.reject( response ); }\n                );\n\n                return deferred.promise;\n            };\n\n            return {\n                getUser: getUser,\n                getBalance: getBalance,\n                updateUser: updateUser,\n                changePassword: changePassword,\n                passwordResetRequest: passwordResetRequest,\n                passwordReset: passwordReset,\n                registerUser: registerUser,\n                activateAccount: activateAccount,\n                getCountries: getCountries\n            };\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('kachingCore')\n        .factory('errorHandler', [ '$alert', function( $alert ) {\n\n            var processApiResponse = function( response ) {\n\n                if ( response.status !== 403 ) {\n\n                    $alert({\n                        title: 'ERROR!',\n                        content: 'An error has occured. Please try again later.',\n                        container: '#alerts-container',\n                        placement: 'top',\n                        duration: 3,\n                        type: 'danger',\n                        show: true\n                    });\n                }\n            };\n\n            return {\n                processApiResponse: processApiResponse\n            };\n        }]);\n})();","(function(){\n    \"use strict\";\n\n    angular.module('kachingCore')\n        .directive(\"loader\", function(){\n            return {\n                restrict: 'A',\n                templateUrl: 'kaching-core/directives/loader/loaderTmpl.html'\n            };\n        });\n\n})();","(function(){\n    'use strict';\n\n    angular.module('kachingCore')\n        .directive('preventDefault', function() {\n            return {\n                restrict: 'A',\n                link: function( scope, element, attrs ) {\n                    if( attrs.ngClick || attrs.href === '' || attrs.href === '#' ){\n                        element.on('click', function(e){\n                            e.preventDefault();\n                        });\n                    }\n                }\n            };\n        });\n\n})();","(function(){\n    'use strict';\n\n    angular.module('kachingCore')\n        .directive('passwordMatch', [function() {\n            return {\n                require: 'ngModel',\n                link: function(scope, elem, attrs, ctrl) {\n                    var firstPassword = '#' + attrs.passwordMatch;\n                    elem.add( firstPassword ).on( 'keyup', function() {\n                        scope.$apply( function() {\n                            var v = elem.val() === $(firstPassword).val();\n                            ctrl.$setValidity('pwmatch', v);\n                        });\n                    });\n                }\n            };\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('kachingCore')\n        .directive('panelTitle', [ \"$rootScope\", \"$timeout\", \"$state\", function( $rootScope, $timeout, $state ) {\n            return {\n                link: function( scope, el, attrs, ctrl ) {\n\n                    var originalTitle = el.text();\n\n                    $rootScope.$on(\"$stateChangeSuccess\", function() {\n                        var stateTitle = '';\n                        if ( typeof $state.$current.data === 'object' && typeof $state.$current.data.title !== 'undefined' ) {\n                            stateTitle = $state.$current.data.title + ' – ';\n                        }\n                        $timeout(function() {\n                            el.text( stateTitle + originalTitle );\n                        });\n                    });\n                }\n            };\n        }]);\n\n})();","(function(){\n    'use strict';\n\n    angular.module('kachingCore')\n        .directive('kachingHeader', [ '$window', 'authService', function( $window, authService ) {\n            return {\n                restrict: 'A',\n                controller: function( $scope ){\n\n                    $scope.loggedIn = authService.isLoggedIn();\n\n                    $scope.logoClick = function() {\n                        if ( authService.isLoggedIn() ) {\n                            $window.location.href = kachingAppConfig.homeUrl + 'panel/';\n                        } else {\n                            $window.location.href = kachingAppConfig.homeUrl;\n                        }\n                    };\n\n                }\n            };\n        }]);\n})();\n","(function(){\n    \"use strict\";\n\n    angular.module('kachingCore')\n        .directive(\"panelNav\", [ 'utils', 'authService', function( utils, authService ){\n            return {\n                restrict: 'A',\n                scope: {\n                    'loggedIn' : '='\n                },\n                templateUrl: 'kaching-core/directives/panelNav/panelNavTmpl.html',\n                controller: function( $scope ) {\n\n                    $scope.isPanel = kachingAppConfig.isPanelPage;\n\n                    $scope.urls = {\n                        campaigns: kachingAppConfig.panelUrl + '#/campaigns',\n                        media:     kachingAppConfig.panelUrl + '#/media',\n                        products:  kachingAppConfig.panelUrl + '#/products',\n                        billing:   kachingAppConfig.panelUrl + '#/billing',\n                        apikeys:   kachingAppConfig.panelUrl + '#/api-keys'\n                    };\n\n                    $scope.isAdvertiser = function() {\n                        return authService.isAdvertiser();\n                    };\n\n                    $scope.isDeveloper = function() {\n                        return authService.isDeveloper();\n                    };\n                }\n            };\n        }]);\n\n})();","(function(){\n    'use strict';\n\n    angular.module('kachingCore')\n        .directive('userNavBar', [\n            '$rootScope',\n            'userService',\n            'authService',\n            '$modal',\n            '$window',\n            '$state',\n        function(\n            $rootScope,\n            userService,\n            authService,\n            $modal,\n            $window,\n            $state\n        ) {\n            return {\n                restrict: 'A',\n                scope: {\n                    'loggedIn' : '=',\n                    'isHomepage' : '='\n                },\n                templateUrl: 'kaching-core/directives/userNavBar/userNavBarTmpl.html',\n                controller: function( $scope ) {\n\n                    $scope.user = {};\n                    $scope.username = '';\n                    $scope.balance = null;\n\n                    $scope.isPanel = kachingAppConfig.isPanelPage;\n\n                    $scope.urls = {\n                        account: kachingAppConfig.panelUrl + '#/account',\n                        funds:   kachingAppConfig.panelUrl + '#/add-funds',\n                        cards:   kachingAppConfig.panelUrl + '#/credit-cards'\n                    };\n\n                    if ( $scope.loggedIn ) {\n                        userService.getUser().then(\n                            function( user ){\n                                $scope.user = user;\n                                $scope.username = user.email;\n                            },\n                            function(){}\n                        );\n                        userService.getBalance().then(function( response ){\n                            $scope.balance = response.credits_balance;\n                        });\n                    }\n\n                    $rootScope.$on('accountBalanceChanged', function(){\n                        userService.getBalance().then(function( response ){\n                            $scope.balance = response.credits_balance;\n                        });\n                    });\n\n                    $scope.logout = function() {\n                        authService.logout().then(function() {\n                            $window.location.href = kachingAppConfig.homeUrl;\n                        });\n                    };\n\n                    $scope.isAdvertiser = function() {\n                        return authService.isAdvertiser();\n                    };\n\n                    $scope.isDeveloper = function() {\n                        return authService.isDeveloper();\n                    };\n\n                    $scope.switchUserType = function( type ) {\n\n                        if ( authService.switchUserType( type ) ) {\n                            if ( ! $scope.isPanel ) {\n                                $window.location.href = kachingAppConfig.panelUrl;\n                            } else {\n                                if ( type === 'advertiser' ) {\n                                    $state.transitionTo('campaigns');\n                                } else if ( type === 'developer' ) {\n                                    $state.transitionTo('apikeys');\n                                }\n                            }\n                        }\n                    };\n\n                    $scope.showLoginDialog = function() {\n                        $modal({\n                            templateUrl: 'kaching-core/components/loginModal/modalTmpl.html',\n                            controller: 'loginModalCtrl',\n                            animation: 'am-fade-and-scale',\n                            placement: 'center'\n                        });\n                    };\n\n                    $scope.showSignupDialog = function() {\n                        $modal({\n                            templateUrl: 'kaching-core/components/signupModal/modalTmpl.html',\n                            controller: 'signupModalCtrl',\n                            animation: 'am-fade-and-scale',\n                            placement: 'center'\n                        });\n                    };\n                }\n            };\n        }]);\n})();\n","(function(){\n    'use strict';\n\n    angular.module('kachingCore')\n        .directive('resetPassword', [\n            '$alert',\n            '$modal',\n            'utils',\n            'userService',\n        function (\n            $alert,\n            $modal,\n            utils,\n            userService\n        ) {\n            return {\n                restrict: 'A',\n                templateUrl: 'kaching-core/directives/resetPassword/resetPasswordTmpl.html',\n                controller: function( $scope ){\n\n                    $scope.fieldHasError = utils.fieldHasError;\n\n                    $scope.view = {\n                        urlError: false,\n                        sending: false,\n                        submitted: false,\n                        success: false\n                    };\n\n                    $scope.data = {\n                        newPassword: '',\n                        newPasswordRepeat: '',\n                        token: kachingQueryParams.token,\n                        uid: kachingQueryParams.uid\n                    };\n\n                    if ( typeof kachingQueryParams.uid === 'undefined' || typeof kachingQueryParams.token === 'undefined' ) {\n                        $scope.view.urlError = true;\n                    }\n\n                    $scope.showErrors = function() {\n                        return $scope.view.submitted;\n                    };\n\n                    $scope.formSubmit = function() {\n                        $scope.view.submitted = true;\n                        if ( $scope.form1.$valid ) {\n\n                            $scope.view.sending = true;\n\n                            userService.passwordReset( $scope.data.newPassword, $scope.data.uid, $scope.data.token ).then(\n                                function(){\n                                    $scope.view.sending = false;\n                                    $scope.view.success = true;\n                                },\n                                function( response ){\n                                    console.log('passwordReset response', response);\n                                    $scope.view.urlError = true;\n                                }\n                            );\n                        }\n                    };\n\n                    $scope.showLoginDialog = function() {\n                        $modal({\n                            templateUrl: 'kaching-core/components/loginModal/modalTmpl.html',\n                            controller: 'loginModalCtrl',\n                            animation: 'am-fade-and-scale',\n                            placement: 'center'\n                        });\n                    };\n\n                    $scope.showForgotPasswordDialog = function() {\n                        $modal({\n                            templateUrl: 'kaching-core/components/forgotPasswordModal/modalTmpl.html',\n                            controller: 'forgotPasswordModalCtrl',\n                            animation: 'am-fade-and-scale',\n                            placement: 'center'\n                        });\n                    };\n\n                }\n            };\n        }]);\n\n})();\n","(function(){\n    'use strict';\n\n    angular.module('kachingCore')\n        .directive('activateAccount', [\n            '$alert',\n            '$modal',\n            '$window',\n            'authService',\n            'userService',\n            'utils',\n        function (\n            $alert,\n            $modal,\n            $window,\n            authService,\n            userService,\n            utils\n        ) {\n            return {\n                restrict: 'A',\n                templateUrl: 'kaching-core/directives/activateAccount/activateAccountTmpl.html',\n                controller: function( $scope ){\n\n                    $scope.view = {\n                        verificationError: false,\n                        verificationSuccess: false,\n                        verificationProcessing: false,\n                        logginProcessing: false,\n                        formError: false\n                    };\n\n                    $scope.loginFormData = {\n                        email: '',\n                        password: ''\n                    };\n\n                    $scope.view.verificationProcessing = true;\n\n                    authService.logout().then(function() {\n\n                        if ( typeof kachingQueryParams.uid !== 'string' || typeof kachingQueryParams.token !== 'string' ) {\n\n                            $scope.view.verificationProcessing = false;\n                            $scope.view.verificationError = true;\n\n                        } else {\n\n                            userService.activateAccount( kachingQueryParams.uid, kachingQueryParams.token ).then(\n                                function() {\n                                    $scope.view.verificationProcessing = false;\n                                    $scope.view.verificationSuccess = true;\n                                },\n                                function() {\n                                    $scope.view.verificationProcessing = false;\n                                    $scope.view.verificationError = true;\n                                }\n                            );\n                        }\n\n                    });\n\n                    $scope.signinFormSubmit = function() {\n\n                        $scope.view.logginProcessing = true;\n                        $scope.view.formError = false;\n\n                        authService.login( $scope.loginFormData.email, $scope.loginFormData.password ).then(\n                            function( user ){\n                                $scope.view.logginProcessing = false;\n                                $window.location.href = kachingAppConfig.panelUrl;\n                            },\n                            function(){\n                                $scope.view.logginProcessing = false;\n                                $scope.view.formError = true;\n                            }\n                        );\n                    };\n                }\n            };\n        }]);\n})();\n"],"sourceRoot":"/source/"}