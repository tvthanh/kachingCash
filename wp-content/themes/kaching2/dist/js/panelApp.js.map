{"version":3,"sources":["panelApp.js","fileUploadDecorator.js","ifm-clipboard.js","headerCtrl.js","modalCtrl.js","expiredCtrl.js","campaignsCtrl.js","profileCtrl.js","creditCardsCtrl.js","addFundsCtrl.js","billingCtrl.js","apiKeysCtrl.js","mediaCtrl.js","mediaViewCtrl.js","mediaEditCtrl.js","productsCtrl.js","productViewCtrl.js","productEditCtrl.js","campaignEditorCtrl.js","editCampaignCtrl.js","step1Ctrl.js","step2Ctrl.js","step3Ctrl.js","step4Ctrl.js","step5Ctrl.js","step6Ctrl.js","permissionsService.js","campaignEditorService.js","campaignsService.js","clientsService.js","mediaService.js","productsService.js","applicationsService.js","billingService.js","siteNav.js","owlCarousel.js","campaignProduct.js","ifmUploaderPreviewImage.js","ifmUploaderPreviewVideo.js","ifmMin.js","ifmMax.js","ifmNumber.js","campaignEditDetails.js","campaignEditTargeting.js","campaignEditBudgeting.js","campaignEditMedia.js","campaignEditProducts.js","campaignStatus.js","transactionStatus.js","transactionType.js","budgetType.js","trustUrl.js"],"names":["angular","module","constant","kachingAppConfig","apiUrl","advertiser","developer","config","$stateProvider","$urlRouterProvider","statePermissions","controllersPath","globalHeaderView","controller","templateUrl","state","url","data","title","views","header@","main@","campaignEditorMain","run","$rootScope","$location","$state","authService","permissionsService","isAdvertiser","transitionTo","isDeveloper","$on","event","unfoundState","fromState","fromParams","toState","toParams","name","isLoggedIn","userHasAccess","preventDefault","$provide","decorator","$delegate","directive","link","compile","scope","element","attrs","overClass","ifmOverClass","apply","this","arguments","on","addClass","removeClass","$tooltip","restrict","clipboardSuccess","clipboardError","tooltipTitle","tooltipPlacement","tooltipAnimation","el","myTooltip","placement","animation","trigger","hide","clipboard","Clipboard","e","show","$apply","$scope","$window","loggedIn","logoSrc","wpTemplateUri","logoClick","go","location","href","homeUrl","console","log","errorHandler","$sce","campaignsService","campaignId","videogularApi","view","busy","campaign","media","products","videogular","sources","getCampaign","then","length","setVideo","response","processApiResponse","$hide","hasMedia","_","isEmpty","hasProducts","onPlayerReady","API","src","trustAsResourceUrl","video","type","$alert","modalOptions","delete","callbacks","stopCampaign","mediaService","itemsPerPage","currentPage","mediaCount","maxSize","searchPhrase","searchInput","orderByOptions","value","label","orderBy","selectItem","selectMedia","submit","search","getMedia","changeOrder","changePage","toggleItem","item","selected","init","argsObj","params","limit","offset","ordering","count","items","productsService","productsCount","selectProduct","getProducts","authToken","utils","FileUploader","uploader","method","headers","Authorization","get","fieldHasError","uploading","submitted","mediaCreated","videoUploadStarted","videoUploadProgress","videoUploadComplete","imageUploadStarted","imageUploadProgress","imageUploadComplete","videoFile","imageFile","mediaName","mediaId","errors","image","addUploaderTypeFilter","videoFilter","imageFilter","onAfterAddingFile","newItem","cleanupUploaderQueue","alias","_file","imageSizeHelper","size","imageSizeValid","width","height","onBeforeUploadItem","onCompleteItem","fileItem","status","onProgressItem","progress","onCompleteAll","mode","closeModal","showErrors","videoHasError","imageHasError","viewMedia","saveMedia","form1","$valid","createMedia","id","uploadAll","isFunction","urlRegex","uploadStarted","uploadProgress","uploadComplete","productCreated","externalProducts","productId","undefined","price","description","external","formData","match","image_url","external_id","push","onSuccessItem","date_added","is_active","viewProduct","saveProduct","createProductFromExternal","searchExternalProducts","externalProductsSearchInput","resetExternalProducts","addExternalProduct","product","medium_image","price_min","asin","index","userService","sending","currentPassword","newPassword","newPasswordRepeat","changePassword","content","container","duration","current_password","$setValidity","app","applicationsService","loading","categoriesError","appName","categories","selectedCategories","getCategories","setSelectedCategories","forEach","category","clearCustomErrors","key_name","hasNameError","error","findWhere","errorDetails","paramsMistake","mistakenParams","formSubmit","addApp","billingService","braintreeLoading","braintreeReady","nonceReceived","savingCard","cardSaved","getClientToken","clientToken","btIntegration","braintree","setup","onReady","integration","onPaymentMethodReceived","teardown","payment_method_nonce","nonce","addCard","cardAdded","card","app_categories","updateApp","formError","loginFormData","email","password","signinFormSubmit","login","user","usertype","$modal","initialLoadComplete","filtersActive","campaignStatuses","code","statusFilterModel","campaignsCount","campaigns","filters","daterange","dates","startDate","endDate","min","moment","format","initFilters","getCampaigns","client","media_title","start_date","end_date","reloadCampaigns","deleteCampaign","startCampaign","processingError","logicProcessing","processingErrors","showCampaignDetails","resolve","showDeleteCampaignDialog","options","showStopCampaignDialog","templateDirUri","updateFilters","$watch","newValue","oldValue","toggleFilters","clearFilters","$q","countries","deferred1","defer","deferred2","promisses","promise","getUser","reject","getCountries","all","showPasswordChangeDialog","backdrop","saveProfile","updateUser","cards","getCards","deleteCard","payment_method_id","setMainCard","showDeleteCardDialog","showNewCardDialog","checkoutSuccess","checkoutFailure","paymentDeclined","mainCardError","showBillingDetailsForm","masked_number","expiration_date","firstName","lastName","company","country","city","address","postalCode","amountsList","creditsCustomAmount","checkoutCredits","checkoutTotal","creditValue","deferred3","deferred4","getMainCard","getBalance","cash_to_credits_conversion_ratio","hasBillingDetails","resetData","resetCheckoutStatus","changeBillingDetails","selectCreditsPreset","amount","selectCreditsCustom","checkoutCancel","checkoutCconfirm","buyCredits","$broadcast","error_code","$filter","transactionsCount","transactions","datepickerLabel","userHasBillingDetails","getTransactions","reloadTransactions","results","getInvoicePdf","transactionId","modal","$promise","utc","hour","minute","second","appsCount","apps","getApps","api_key","reloadApps","deleteApp","showDeleteAppDialog","showNewAppDialog","showAppEditDialog","showAppKeyDialog","reloadMedia","nextPage","concat","deleteMedia","showNewMediaDialog","showDeleteMediaDialog","$stateParams","mediaItem","getMediaItem","mediaLoaded","newVideoAdded","newImageAdded","display","hasVideo","updateMedia","$http","deletedCount","reloadProducts","deleteProduct","splice","showNewProductDialog","newProduct","showDeleteProductDialog","getProduct","success","updateProduct","campaignEditorService","editor","logData","currentStep","states","step1","step2","step3","step4","step5","step6","currentTab","switchTab","tab","isCurrentTab","previousState","dataGet","stepGet","nextStep","stepSet","dataSet","save","logControllerData","copy","ageRanges","allCategories","allLocations","locations","gender","male","female","os","ios","android","ageRange","targetingData","getTargeting","saveTargeting","validationErrors","previousStep","resetError","errorName","$timeout","hasBudget","showCharts","budgetType","bidAmount","budgetAmount","estViews","daily","percentage","max","total","estDailyViewsChart","labels","colours","animationEasing","showTooltips","segmentShowStroke","percentageInnerCutout","estTotalViewsChart","mapBudgetType","types","indexOf","budgetingData","updateEstimatedViews","changedBid","updateCharts","getEstimatedViews","cost_per_view","saveCampaignBudget","busyMedia","playerReady","videoSet","Object","getOwnPropertyNames","stop","showMediaLibrary","selectedMedia","recommendedProducts","carouselOptions","nav","dots","navText","navRewind","loop","skipStep","selectRecommendedProduct","selectedProduct","unshift","showProductsLibrary","removeProduct","finish","setPrepared","factory","stateName","getUsertype","contains","clientsService","flags","valid","budget","targeting","campaignLoaded","flag","val","step","prop","saveStep1","saveStep2","saveStep3","saveStep4","saveStep5","deferred","saveCampagin","campaignData","mediaData","media_description","updateProducts","saveProducts","apiService","requestParams","changeCampaignStatus","put","post","patch","productsData","getTargetingLocations","selectedLocations","parseInt","getTargetingCategories","getAgeRanges","age_range","selectedAgeRange","settings","range","cpv","getCampaignBudget","budgetId","getClients","saveClient","clients","reader","FileReader","readAsDataURL","onload","Image","target","result","encodeURIComponent","page","per","Accept","JSON","parse","prodDeferred","appId","publisher","default","client_token","paymentMethodId","credits","request","responseType","blob","Blob","document","createElement","window","URL","createObjectURL","download","click","replace","mainMenuTmpl","transclude","initCarousel","defaultOptions","customOptions","$eval","$","attr","key","owlCarousel","$last","showLabels","onRemove","remove","$parse","helper","support","isFile","isObject","File","isImage","file","slice","lastIndexOf","ctrl","ifmUploaderPreviewImage","css","ifmUploaderPreviewVideo","require","minVal","parseFloat","ifmMin","$validators","modelValue","viewValue","$isEmpty","isNaN","maxVal","ifmMax","ifmNumber","isFinite","saveForm","cancelEdit","loadingMedia","mediaTitle","mediaDesc","filter","statusCode","statusMap","recordingUrl"],"mappings":"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","file":"panelApp.js","sourcesContent":["(function() {\n    \"use strict\";\n\n    angular.module('panelApp', [\n            'underscore',\n            'ngSanitize',\n            'ngCookies',\n            'ngAnimate',\n            'ngTouch',\n            'ui.router',\n            'ui.bootstrap',\n            'mgcrea.ngStrap',\n            'daterangepicker',\n            'com.2fdevs.videogular',\n            'infinite-scroll',\n            'angularFileUpload',\n            'chart.js'\n        ])\n        .constant('apiUrl', kachingAppConfig.apiUrl)\n        .constant('sessionDays', 30)\n        .constant('statePermissions', {\n            advertiser: [\n                'expired',\n                'account',\n                'cards',\n                'funds',\n                'billing',\n                'campaigns',\n                'campaigns.edit',\n                'campaigns.new',\n                'campaigns.new.step1',\n                'campaigns.new.step2',\n                'campaigns.new.step3',\n                'campaigns.new.step4',\n                'campaigns.new.step5',\n                'campaigns.new.step6',\n                'media',\n                'media.view',\n                'media.edit',\n                'products',\n                'products.view',\n                'products.edit'\n            ],\n            developer: [\n                'expired',\n                'account',\n                'apikeys'\n            ]\n        });\n\n    angular.module('panelApp').config([\n        '$stateProvider',\n        '$urlRouterProvider',\n        'statePermissions',\n        function(\n            $stateProvider,\n            $urlRouterProvider,\n            statePermissions\n        ) {\n\n            var controllersPath = 'panel-module/controllers/';\n\n            var globalHeaderView = {\n                controller: 'headerCtrl',\n                templateUrl: 'panel-module/components/header/headerTmpl.html'\n            };\n\n            $stateProvider\n                // Session expired\n                .state('expired', {\n                    url: '/expired',\n                    data: { title: 'Session Expired' },\n                    views: {\n                        'header@': globalHeaderView,\n                        'main@': {\n                            controller: 'expiredCtrl',\n                            templateUrl: controllersPath + 'expired/expiredTmpl.html'\n                        }\n                    }\n                })\n                // Account settings\n                .state('account', {\n                    url: '/account',\n                    data: { title: 'Account Settings' },\n                    views: {\n                        'header@': globalHeaderView,\n                        'main@': {\n                            controller: 'profileCtrl',\n                            templateUrl: controllersPath + 'profile/profileTmpl.html'\n                        }\n                    }\n                })\n                // Credit cards\n                .state('cards', {\n                    url: '/credit-cards',\n                    data: { title: 'Credit Cards' },\n                    views: {\n                        'header@': globalHeaderView,\n                        'main@': {\n                            controller: 'creditCardsCtrl',\n                            templateUrl: controllersPath + 'creditCards/creditCardsTmpl.html'\n                        }\n                    }\n                })\n                // Add funds\n                .state('funds', {\n                    url: '/add-funds',\n                    data: { title: 'Add Funds' },\n                    views: {\n                        'header@': globalHeaderView,\n                        'main@': {\n                            controller: 'addFundsCtrl',\n                            templateUrl: controllersPath + 'addFunds/addFundsTmpl.html'\n                        }\n                    }\n                })\n                // Billing\n                .state('billing', {\n                    url: '/billing',\n                    data: { title: 'Billing' },\n                    views: {\n                        'header@': globalHeaderView,\n                        'main@': {\n                            controller: 'billingCtrl',\n                            templateUrl: controllersPath + 'billing/billingTmpl.html'\n                        }\n                    }\n                })\n\n                ////////////\n                // Campaigns\n                ////////////\n                .state('campaigns', {\n                    url: '/campaigns',\n                    data: { title: 'Campaigns' },\n                    views: {\n                        'header@': globalHeaderView,\n                        'main@': {\n                            controller: 'campaignsCtrl',\n                            templateUrl: controllersPath + 'campaigns/campaignsTmpl.html'\n                        }\n                    }\n                })\n                .state('campaigns.edit', {\n                    url: '/edit/:campaignId',\n                    data: { title: 'Edit Campaign' },\n                    views: {\n                        'main@': {\n                            controller: 'editCampaignCtrl',\n                            templateUrl: controllersPath + 'campaignEditor/editCampaignTmpl.html'\n                        }\n                    }\n                })\n                .state('campaigns.new', {\n                    url: '/new-campaign',\n                    data: { title: 'New Campaign' },\n                    views: {\n                        'main@': {\n                            controller: 'campaignEditorCtrl',\n                            templateUrl: controllersPath + 'campaignEditor/campaignEditorTmpl.html'\n                        }\n                    }\n                })\n                .state('campaigns.new.step1', {\n                    views: {\n                        'campaignEditorMain': {\n                            controller: 'campaignEditorStep1Ctrl',\n                            templateUrl: controllersPath + 'campaignEditor/steps/step1Tmpl.html'\n                        }\n                    }\n                })\n                .state('campaigns.new.step2', {\n                    views: {\n                        'campaignEditorMain': {\n                            controller: 'campaignEditorStep2Ctrl',\n                            templateUrl: controllersPath + 'campaignEditor/steps/step2Tmpl.html'\n                        }\n                    }\n                })\n                .state('campaigns.new.step3', {\n                    views: {\n                        'campaignEditorMain': {\n                            controller: 'campaignEditorStep3Ctrl',\n                            templateUrl: controllersPath + 'campaignEditor/steps/step3Tmpl.html'\n                        }\n                    }\n                })\n                .state('campaigns.new.step4', {\n                    views: {\n                        'campaignEditorMain': {\n                            controller: 'campaignEditorStep4Ctrl',\n                            templateUrl: controllersPath + 'campaignEditor/steps/step4Tmpl.html'\n                        }\n                    }\n                })\n                .state('campaigns.new.step5', {\n                    views: {\n                        'campaignEditorMain': {\n                            controller: 'campaignEditorStep5Ctrl',\n                            templateUrl: controllersPath + 'campaignEditor/steps/step5Tmpl.html'\n                        }\n                    }\n                })\n                .state('campaigns.new.step6', {\n                    views: {\n                        'campaignEditorMain': {\n                            controller: 'campaignEditorStep6Ctrl',\n                            templateUrl: controllersPath + 'campaignEditor/steps/step6Tmpl.html'\n                        }\n                    }\n                })\n\n                /////////\n                // Media\n                /////////\n                .state('media', {\n                    url: '/media',\n                    data: { title: 'Media' },\n                    views: {\n                        'header@': globalHeaderView,\n                        'main@': {\n                            controller: 'mediaCtrl',\n                            templateUrl: controllersPath + 'media/mediaTmpl.html'\n                        }\n                    }\n                })\n                .state('media.view', {\n                    url: '/view/:mediaId',\n                    data: { title: 'View Media' },\n                    views: {\n                        'main@': {\n                            controller: 'mediaViewCtrl',\n                            templateUrl: controllersPath + 'mediaView/mediaViewTmpl.html'\n                        }\n                    }\n                })\n                .state('media.edit', {\n                    url: '/edit/:mediaId',\n                    data: { title: 'Edit Media' },\n                    views: {\n                        'main@': {\n                            controller: 'mediaEditCtrl',\n                            templateUrl: controllersPath + 'mediaEdit/mediaEditTmpl.html'\n                        }\n                    }\n                })\n\n                ///////////\n                // Products\n                ///////////\n                .state('products', {\n                    url: '/products',\n                    data: { title: 'Products' },\n                    views: {\n                        'header@': globalHeaderView,\n                        'main@': {\n                            controller: 'productsCtrl',\n                            templateUrl: controllersPath + 'products/productsTmpl.html'\n                        }\n                    }\n                })\n                .state('products.view', {\n                    url: '/view/:productId',\n                    data: { title: 'View Product' },\n                    views: {\n                        'main@': {\n                            controller: 'productViewCtrl',\n                            templateUrl: controllersPath + 'productView/productViewTmpl.html'\n                        }\n                    }\n                })\n                .state('products.edit', {\n                    url: '/edit/:productId',\n                    data: { title: 'Edit Product' },\n                    views: {\n                        'main@': {\n                            controller: 'productEditCtrl',\n                            templateUrl: controllersPath + 'productEdit/productEditTmpl.html'\n                        }\n                    }\n                })\n\n                ////////////////\n                // API keys page\n                ////////////////\n                .state('apikeys', {\n                    url: '/api-keys',\n                    data: { title: 'API Keys' },\n                    views: {\n                        'header@': globalHeaderView,\n                        'main@': {\n                            controller: 'apiKeysCtrl',\n                            templateUrl: controllersPath + 'apiKeys/apiKeysTmpl.html'\n                        }\n                    }\n                });\n\n        }\n    ]);\n\n    angular.module('panelApp').run([\n        '$rootScope',\n        '$location',\n        '$state',\n        'authService',\n        'permissionsService',\n        function(\n            $rootScope,\n            $location,\n            $state,\n            authService,\n            permissionsService\n        ) {\n\n            // Handle unknown URLs\n            // This is a replacement for the \"$urlRouterProvider.otherwise\" block in module config\n            if (authService.isAdvertiser()) {\n                $state.transitionTo('campaigns');\n            } else if (authService.isDeveloper()) {\n                $state.transitionTo('apikeys');\n            }\n\n            $rootScope.$on('stateNotFound', function(event, unfoundState, fromState, fromParams) {\n                if (authService.isAdvertiser()) {\n                    $state.transitionTo('campaigns');\n                } else if (authService.isDeveloper()) {\n                    $state.transitionTo('apikeys');\n                }\n            });\n\n            $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState) {\n\n                if (toState.name === 'expired') {\n                    return;\n                }\n\n                if (!authService.isLoggedIn()) {\n                    $state.transitionTo('expired');\n                    event.preventDefault();\n                    return;\n                }\n\n                if (!permissionsService.userHasAccess(toState.name)) {\n                    if (authService.isAdvertiser()) {\n                        $state.transitionTo('campaigns');\n                    } else if (authService.isDeveloper()) {\n                        $state.transitionTo('apikeys');\n                    }\n                    event.preventDefault();\n                    return;\n                }\n            });\n\n        }\n    ]);\n\n})();\n","//\n// A patch for the ngFileUpload module.\n// It's a replacement for the nvFileOver directive, which has multiple bugs.\n// Usage - simply add the 'ifm-over-class' attribute to the nv-file-drop element:\n// <div nv-file-drop uploader=\"uploader\" ifm-over-class=\"fileover\"></div>\n//\n\n(function () {\n    'use strict';\n    angular.module('panelApp')\n        .config(function ($provide) {\n            $provide.decorator('nvFileDropDirective', function ($delegate) {\n                var directive = $delegate[0],\n                    link = directive.link;\n\n                directive.compile = function () {\n                    return function (scope, element, attrs) {\n                        var overClass = attrs.ifmOverClass || 'fileover';\n                        link.apply(this, arguments);\n                        element.on('dragover', function () {\n                            element.addClass(overClass);\n                        });\n                        element.on('dragleave', function () {\n                            element.removeClass(overClass);\n                        });\n                        element.on('drop', function () {\n                            element.removeClass(overClass);\n                        });\n                    };\n                };\n\n                return $delegate;\n            });\n        });\n})();","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .directive('ifmClipboard', [ '$tooltip', function( $tooltip ) {\n            return {\n                restrict: 'A',\n                scope: {\n                    clipboardSuccess: '&',\n                    clipboardError: '&',\n                    tooltipTitle: '@',\n                    tooltipPlacement: '@',\n                    tooltipAnimation: '@'\n                },\n                link: function( scope, el ) {\n\n                    var tooltipTitle   = ( typeof scope.tooltipTitle === 'undefined') ? 'Copied' : scope.tooltipTitle;\n                    var tooltipPlacement = ( typeof scope.tooltipPlacement === 'undefined') ? 'top' : scope.tooltipPlacement;\n                    var tooltipAnimation = ( typeof scope.tooltipAnimation === 'undefined') ? 'am-fade-and-scale' : scope.tooltipAnimation;\n\n                    var myTooltip = $tooltip( el, { title: tooltipTitle, placement: tooltipPlacement, animation: tooltipAnimation, trigger: 'manual' } );\n\n                    el.on('mouseout',function(){\n                        myTooltip.hide();\n                    });\n\n                    var clipboard = new Clipboard(el[0]);\n\n                    clipboard.on('success', function(e) {\n                        myTooltip.show();\n                        scope.$apply(function () {\n                            scope.clipboardSuccess({\n                                e: e\n                            });\n                        });\n                    });\n\n                    clipboard.on('error', function(e) {\n                        scope.$apply(function () {\n                            scope.clipboardError({\n                                e: e\n                            });\n                        });\n                    });\n\n                }\n            };\n        }]);\n})();","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'headerCtrl', [\n            '$scope',\n            '$state',\n            'authService',\n            '$window',\n        function (\n            $scope,\n            $state,\n            authService,\n            $window\n        ) {\n\n            $scope.loggedIn = authService.isLoggedIn();\n\n            $scope.logoSrc = kachingAppConfig.wpTemplateUri + '/assets/images/ic_kaching.png';\n\n            $scope.logoClick = function() {\n                if ( authService.isAdvertiser() ) {\n                    $state.go('campaigns');\n                } else if ( authService.isDeveloper() ) {\n                    $state.go('apikeys');\n                } else {\n                    $window.location.href = kachingAppConfig.homeUrl;\n                }\n            };\n\n        }]);\n\n})();\n","(function(){\n    'use strict';\n\n    angular.module('panelApp')\n        .controller( 'appEditModalCtrl', [\n            '$scope',\n            'app',\n            'utils',\n            'modalOptions',\n            'errorHandler',\n            'applicationsService',\n        function (\n            $scope,\n            app,\n            utils,\n            modalOptions,\n            errorHandler,\n            applicationsService\n        ) {\n\n            $scope.fieldHasError = utils.fieldHasError;\n\n            $scope.view = {\n                loading: true,\n                sending: false,\n                showErrors: false,\n                categoriesError: false\n            };\n\n            $scope.data = {\n                appName: app.name,\n                categories: [],\n                selectedCategories: app.app_categories\n            };\n\n            var init = function() {\n\n                $scope.view.loading = true;\n\n                applicationsService.getCategories( app.app_categories ).then(\n                    function( response ) {\n                        $scope.data.categories = response;\n                        $scope.setSelectedCategories();\n                        $scope.view.loading = false;\n                    },\n                    function() {\n                        errorHandler.processApiResponse( response );\n                        $scope.$hide();\n                    }\n                );\n            };\n\n            $scope.setSelectedCategories = function() {\n\n                $scope.data.selectedCategories = [];\n\n                angular.forEach( $scope.data.categories, function( category ){\n                    if ( category.selected ) {\n                        $scope.data.selectedCategories.push( category.id );\n                    }\n                });\n\n                $scope.view.categoriesError = ( $scope.data.selectedCategories.length === 0 ) ? true : false;\n            };\n\n            $scope.clearCustomErrors = function() {\n                $scope.form1.key_name.$setValidity( 'nameUnique', true );\n            };\n\n            var hasNameError = function( response ) {\n                var error = _.findWhere( response.data.errorDetails.paramsMistake.mistakenParams, {name:'name'} );\n                return ( typeof error !== 'undefined' ) ? true : false;\n            };\n\n            $scope.formSubmit = function() {\n\n                $scope.view.sending = true;\n\n                if ( $scope.form1.$valid && $scope.view.categoriesError === false ) {\n\n                    applicationsService.updateApp( app.id, $scope.data.appName, $scope.data.selectedCategories ).then(\n                        function( app ){\n                            modalOptions.submit( app );\n                            $scope.$hide();\n                        },\n                        function( response ){\n\n                            if ( response.status === 400 && hasNameError( response ) ) {\n                                $scope.form1.key_name.$setValidity('nameUnique', false);\n                                console.log(\">>>> name error\");\n                                $scope.view.sending = false;\n                                $scope.view.showErrors = true;\n                            } else {\n                                errorHandler.processApiResponse( response );\n                                $scope.$hide();\n                            }\n                        }\n                    );\n                } else {\n                    $scope.view.sending = false;\n                    $scope.view.showErrors = true;\n                }\n            };\n\n            init();\n        }]);\n})();\n","(function(){\n    \"use strict\";\n\n    console.log('expiredCtrl loaded');\n\n    angular.module('panelApp')\n        .controller( 'expiredCtrl', [ '$scope', '$state', 'authService', function ( $scope, $state, authService ) {\n\n            console.log('in expiredCtrl');\n\n            $scope.view = {\n                busy: false,\n                formError: false\n            };\n\n            $scope.loginFormData = {\n                email: '',\n                password: ''\n            };\n\n            $scope.signinFormSubmit = function() {\n\n                console.log('in signinFormSubmit()', $scope.loginFormData.email, $scope.loginFormData.password);\n\n                $scope.view.busy = true;\n                $scope.view.formError = false;\n\n                authService.login( $scope.loginFormData.email, $scope.loginFormData.password ).then(\n                    function( user ){\n                        $scope.view.busy = false;\n                        if ( user.usertype === 1 ) {\n                            $state.go('campaigns');\n                        } else {\n                            $state.go('apikeys');\n                        }\n                    },\n                    function(){\n                        $scope.view.busy = false;\n                        $scope.view.formError = true;\n                    }\n                );\n\n            };\n        }]);\n\n})();\n","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'campaignsCtrl', [\n            '$scope',\n            '$alert',\n            '$modal',\n            'errorHandler',\n            'campaignsService',\n        function (\n            $scope,\n            $alert,\n            $modal,\n            errorHandler,\n            campaignsService\n        ) {\n\n            var itemsPerPage = 10;\n\n            $scope.view = {\n                initialLoadComplete: false,\n                itemsPerPage: itemsPerPage,\n                currentPage: 1,\n                maxSize: 10,\n                filtersActive: false,\n                campaignStatuses: [\n                    {code: -1, label: 'Any status'},\n                    {code: 0, label: 'Incomplete'},\n                    {code: 1, label: 'Billing'},\n                    {code: 2, label: 'Prepared'},\n                    {code: 3, label: 'Live'},\n                    {code: 4, label: 'Completed'},\n                    {code: 5, label: 'Stopped'}\n                ]\n            };\n\n            $scope.view.statusFilterModel = $scope.view.campaignStatuses[0];\n\n            $scope.data = {\n                campaignsCount: 0,\n                campaigns: []\n            };\n\n            $scope.filters = {};\n\n            $scope.daterange = {\n                dates: {\n                    startDate: null,\n                    endDate:   null\n                },\n                min: moment().format('YYYY-MM-DD')\n            };\n\n            var init = function() {\n                initFilters();\n                getCampaigns();\n            };\n\n            var initFilters = function() {\n                $scope.filters = {\n                    name: '',\n                    client: '',\n                    media_title: '',\n                    start_date: '',\n                    end_date: '',\n                    status: undefined\n                };\n            };\n\n            $scope.changePage = function() {\n                getCampaigns();\n            };\n\n            $scope.reloadCampaigns = function() {\n                $scope.view.currentPage = 1;\n                getCampaigns();\n            };\n\n            var getCampaigns = function( argsObj ) {\n\n                var params = {\n                    limit: itemsPerPage,\n                    offset: itemsPerPage * ($scope.view.currentPage - 1)\n                };\n\n                if ( $scope.filters.name.length > 0 ) {\n                    params.name = $scope.filters.name;\n                }\n                if ( $scope.filters.client.length > 0 ) {\n                    params.client = $scope.filters.client;\n                }\n                if ( $scope.filters.media_title.length > 0 ) {\n                    params.media_title = $scope.filters.media_title;\n                }\n                if ( $scope.filters.start_date.length >0 ) {\n                    params.start_date = $scope.filters.start_date;\n                }\n                if ( $scope.filters.end_date.length >0 ) {\n                    params.end_date = $scope.filters.end_date;\n                }\n                if ( typeof $scope.filters.status !== 'undefined' ) {\n                    params.status = $scope.filters.status;\n                }\n\n                campaignsService.getCampaigns( params ).then(\n                    function( campaigns ) {\n                        $scope.data.campaignsCount = campaigns.count;\n                        $scope.data.campaigns = campaigns.items;\n                        $scope.view.initialLoadComplete = true;\n                    },\n                    function( response ) {\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n            };\n\n            var deleteCampaign = function( campaign ) {\n                var name = campaign.name;\n                campaignsService.deleteCampaign( campaign.id ).then(\n                    function() {\n                        $alert({\n                            title: 'Campagin deleted.',\n                            content: 'Campaign \"' + name + '\" has been deleted.',\n                            container: '#alerts-container',\n                            placement: 'top',\n                            duration: 3,\n                            type: 'success',\n                            show: true\n                        });\n                        getCampaigns();\n                    },\n                    function( response ) {\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n            };\n\n            $scope.startCampaign = function( campaign ) {\n                var name = campaign.name;\n                campaignsService.startCampaign( campaign.id ).then(\n                    function() {\n\n                        $alert({\n                            title: 'Campagin started.',\n                            content: 'Campaign \"' + name + '\" is now live.',\n                            container: '#alerts-container',\n                            placement: 'top',\n                            duration: 3,\n                            type: 'success',\n                            show: true\n                        });\n\n                        getCampaigns();\n\n                    },\n                    function( response ) {\n\n                        var processingError = _.findWhere( response.data.errorDetails.logicProcessing.processingErrors, { code: 3 } );\n\n                        if ( typeof processingError !== 'undefined' ) {\n                            $alert({\n                                title: 'Incorrect campaign settings.',\n                                content: 'Please review your campaign settings then start the campaign',\n                                container: '#alerts-container',\n                                placement: 'top',\n                                duration: 3,\n                                type: 'danger',\n                                show: true\n                            });\n                        } else {\n                            errorHandler.processApiResponse( response );\n                        }\n                    }\n                );\n            };\n\n            var stopCampaign = function( campaign ) {\n                var name = campaign.name;\n                campaignsService.stopCampaign( campaign.id ).then(\n                    function() {\n                        $alert({\n                            title: 'Campagin stopped.',\n                            content: 'Campaign \"' + name + '\" has been stopped.',\n                            container: '#alerts-container',\n                            placement: 'top',\n                            duration: 3,\n                            type: 'success',\n                            show: true\n                        });\n                        getCampaigns();\n                    },\n                    function( response ) {\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n            };\n\n            $scope.showCampaignDetails = function( campaignId ) {\n                $modal({\n                    templateUrl: 'panel-module/components/campaignDetailsModal/modalTmpl.html',\n                    controller: 'campaignDetailsModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    resolve: {\n                        campaignId: function () {\n                            return campaignId;\n                        }\n                    }\n                });\n            };\n\n            $scope.showDeleteCampaignDialog = function( campaign ) {\n                var options = {\n                    delete: function( campaign ) {\n                        console.log('delete camapgin', campaign);\n                        deleteCampaign( campaign );\n                    }\n                };\n                $modal({\n                    templateUrl: 'panel-module/components/campaignDeleteModal/modalTmpl.html',\n                    controller: 'campaignDeleteModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    placement: 'center',\n                    resolve: {\n                        modalOptions: function() {\n                            return options;\n                        },\n                        campaign: function () {\n                            return campaign;\n                        }\n                    }\n                });\n            };\n\n            $scope.showStopCampaignDialog = function( campaign ) {\n                var callbacks = {\n                    stopCampaign: function( campaign ) {\n                        console.log('stop camapgin', campaign);\n                        stopCampaign( campaign );\n                    }\n                };\n                $modal({\n                    templateUrl: templateDirUri + '/assets/js/panel-module/components/campaignStopModal/modalTmpl.html',\n                    controller: 'campaignStopModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    placement: 'center',\n                    resolve: {\n                        callbacks: function() {\n                            return callbacks;\n                        },\n                        campaign: function () {\n                            return campaign;\n                        }\n                    }\n                });\n            };\n\n            $scope.updateFilters = function() {\n                $scope.filters.status = ( $scope.view.statusFilterModel.code === -1 ) ? undefined : $scope.view.statusFilterModel.code;\n                $scope.reloadCampaigns();\n            };\n\n            $scope.$watch('daterange.dates.startDate', function(newValue, oldValue) {\n                if ( newValue === null ) {\n                    return;\n                }\n                $scope.filters.start_date = moment( $scope.daterange.dates.startDate ).format('YYYY-MM-DD');\n                $scope.filters.end_date = moment( $scope.daterange.dates.endDate ).format('YYYY-MM-DD');\n                $scope.updateFilters();\n            });\n\n            $scope.toggleFilters = function() {\n                if ( $scope.view.filtersActive ) {\n                    $scope.clearFilters();\n                } else {\n                    $scope.view.filtersActive = true;\n                }\n            };\n\n            $scope.clearFilters = function() {\n                $scope.view.filtersActive = false;\n                initFilters();\n                $scope.reloadCampaigns();\n            };\n\n            init();\n        }]);\n})();\n","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'profileCtrl', [\n            '$scope',\n            '$alert',\n            '$modal',\n            '$q',\n            'utils',\n            'errorHandler',\n            'userService',\n        function (\n            $scope,\n            $alert,\n            $modal,\n            $q,\n            utils,\n            errorHandler,\n            userService\n        ) {\n\n            $scope.fieldHasError = utils.fieldHasError;\n\n            $scope.view = {\n                loading: true,\n                sending: false,\n                submitted: false\n            };\n\n            $scope.data = {\n                user: {},\n                countries: []\n            };\n\n            var init = function() {\n\n                var deferred1 = $q.defer();\n                var deferred2 = $q.defer();\n\n                var promisses = [\n                    deferred1.promise,\n                    deferred2.promise\n                ];\n\n                userService.getUser().then(\n                    function( user ) {\n                        $scope.data.user = user;\n                        deferred1.resolve( user );\n                    },\n                    function( response ) {\n                        deferred1.reject( response );\n                    }\n                );\n\n                userService.getCountries().then(\n                    function( countries ) {\n                        console.log('countries',countries);\n                        $scope.data.countries = countries;\n                        deferred2.resolve( countries );\n                    },\n                    function( response ) {\n                        deferred2.reject( response );\n                    }\n                );\n\n                $q.all( promisses ).then(\n                    function() {\n                        $scope.view.loading = false;\n                    },\n                    function( response ) {\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n            };\n\n            $scope.showErrors = function() {\n                return $scope.view.submitted;\n            };\n\n            $scope.showPasswordChangeDialog = function() {\n                $modal({\n                    templateUrl: 'panel-module/components/passwordChangeModal/modalTmpl.html',\n                    controller: 'passwordChangeModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    placement: 'center',\n                    backdrop: 'static'\n                });\n            };\n\n            $scope.saveProfile = function() {\n                $scope.view.submitted = true;\n                if ( $scope.form1.$valid ) {\n                    $scope.view.sending = true;\n                    userService.updateUser( $scope.data.user ).then(\n                        function(){\n                            $scope.view.sending = false;\n                            $alert({\n                                title: 'Account settings saved.',\n                                content: '',\n                                container: '#alerts-container',\n                                placement: 'top',\n                                duration: 3,\n                                type: 'success',\n                                show: true\n                            });\n                        },\n                        function( response ){\n                            errorHandler.processApiResponse( response );\n                        }\n                    );\n                }\n            };\n\n            init();\n        }]);\n})();\n","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'creditCardsCtrl', [\n            '$scope',\n            '$alert',\n            '$modal',\n            'errorHandler',\n            'billingService',\n        function (\n            $scope,\n            $alert,\n            $modal,\n            errorHandler,\n            billingService\n        ) {\n\n            var itemsPerPage = 10;\n\n            $scope.view = {\n                busy: true\n            };\n\n            $scope.data = {\n                cards: []\n            };\n\n            var init = function() {\n                $scope.view.busy = true;\n                getCards();\n            };\n\n            var getCards = function() {\n                billingService.getCards().then(\n                    function( cards ) {\n                        $scope.data.cards = cards;\n                        $scope.view.busy = false;\n                    },\n                    function( response ) {\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n            };\n\n            var deleteCard = function( card ) {\n                billingService.deleteCard( card.payment_method_id ).then(\n                    function() {\n                        $alert({\n                            title: 'Your credit card has been deleted.',\n                            content: '',\n                            container: '#alerts-container',\n                            placement: 'top',\n                            duration: 3,\n                            type: 'success',\n                            show: true\n                        });\n                        getCards();\n                    },\n                    function( response ) {\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n            };\n\n            $scope.setMainCard = function( card ) {\n                billingService.setMainCard( card.payment_method_id ).then(\n                    function( cards ) {\n                        getCards();\n                    },\n                    function( response ) {\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n            };\n\n            $scope.showDeleteCardDialog = function( card ) {\n                var callbacks = {\n                    delete: function( card ) {\n                        console.log('delete card', card);\n                        deleteCard( card );\n                    }\n                };\n                $modal({\n                    templateUrl: 'panel-module/components/cardDeleteModal/modalTmpl.html',\n                    controller: 'cardDeleteModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    placement: 'center',\n                    resolve: {\n                        callbacks: function() {\n                            return callbacks;\n                        },\n                        card: function () {\n                            return card;\n                        }\n                    }\n                });\n            };\n\n            $scope.showNewCardDialog = function() {\n                var callbacks = {\n                    cardAdded: function( card ) {\n                        console.log(\"new card\",card);\n                        getCards();\n                    }\n                };\n                $modal({\n                    templateUrl: 'panel-module/components/newCardModal/modalTmpl.html',\n                    controller: 'newCardModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    placement: 'center',\n                    resolve: {\n                        callbacks: function() {\n                            return callbacks;\n                        }\n                    }\n                });\n            };\n\n            init();\n        }]);\n})();\n","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'addFundsCtrl', [\n            '$q',\n            'utils',\n            '$scope',\n            '$rootScope',\n            'errorHandler',\n            '$modal',\n            'billingService',\n            'userService',\n        function (\n            $q,\n            utils,\n            $scope,\n            $rootScope,\n            errorHandler,\n            $modal,\n            billingService,\n            userService\n        ) {\n\n            $scope.fieldHasError = utils.fieldHasError;\n\n            $scope.view = {\n                loading: true,\n                sending: false,\n                submitted: false,\n                checkoutSuccess: false,\n                checkoutFailure: false,\n                paymentDeclined: false,\n                mainCardError: false,\n                showBillingDetailsForm: false\n            };\n\n            $scope.data = {\n                card: {\n                    masked_number: '',\n                    expiration_date: null\n                },\n                countries: [],\n                user: {\n                    firstName:  '',\n                    lastName: '',\n                    company: '',\n                    country: undefined,\n                    city: '',\n                    address: '',\n                    postalCode: ''\n                },\n                amountsList: [ 500, 250, 100, 50 ],\n                creditsCustomAmount: null,\n                checkoutCredits: 0,\n                checkoutTotal: 0,\n                creditValue: null\n            };\n\n            var init = function() {\n\n                $scope.view.loading = true;\n\n                var deferred1 = $q.defer();\n                var deferred2 = $q.defer();\n                var deferred3 = $q.defer();\n                var deferred4 = $q.defer();\n\n                var promisses = [\n                    deferred1.promise,\n                    deferred2.promise,\n                    deferred3.promise,\n                    deferred4.promise\n                ];\n\n                billingService.getMainCard().then(\n                    function( card ) {\n                        $scope.data.card = card;\n                        deferred1.resolve( card );\n                    },\n                    function( response ) {\n                        $scope.view.mainCardError = true;\n                        deferred1.reject( response );\n                    }\n                );\n\n                userService.getBalance().then(\n                    function( response ){\n                        $scope.data.creditValue = ( 1 / response.cash_to_credits_conversion_ratio );\n                        deferred2.resolve( $scope.data.creditValue );\n                    },\n                    function( response ){\n                        deferred2.reject( response );\n                    }\n                );\n\n                userService.getUser().then(\n                    function( user ) {\n                        $scope.data.user = {\n                            firstName:  user.firstName,\n                            lastName:   user.lastName,\n                            company:    user.company,\n                            country:    user.country,\n                            city:       user.city,\n                            address:    user.address,\n                            postalCode: user.postalCode\n                        };\n                        deferred3.resolve( user );\n                    },\n                    function( response ) {\n                        deferred3.reject( response );\n                    }\n                );\n\n                userService.getCountries().then(\n                    function( countries ) {\n                        $scope.data.countries = countries;\n                        deferred4.resolve( countries );\n                    },\n                    function( response ) {\n                        deferred4.reject( response );\n                    }\n                );\n\n                $q.all( promisses ).then(\n                    function() {\n                        if ( ! hasBillingDetails() ) {\n                            $scope.view.showBillingDetailsForm = true;\n                        }\n                        $scope.view.loading = false;\n                    },\n                    function( response ) {\n                        if ( $scope.view.mainCardError === true ) {\n                            $scope.view.loading = false;\n                        } else {\n                            errorHandler.processApiResponse( response );\n                        }\n                    }\n                );\n\n            };\n\n            var hasBillingDetails = function() {\n                if ( $scope.data.user.firstName === '' ) { return false; }\n                if ( $scope.data.user.lastName === '' ) { return false; }\n                if ( $scope.data.user.company === '' ) { return false; }\n                if ( $scope.data.user.country === undefined ) { return false; }\n                if ( $scope.data.user.city === '' ) { return false; }\n                if ( $scope.data.user.address === '' ) { return false; }\n                if ( $scope.data.user.postalCode === '' ) { return false; }\n                return true;\n            };\n\n            var resetData = function() {\n                $scope.data.creditsCustomAmount = null;\n                $scope.data.checkoutCredits = 0;\n                $scope.data.checkoutTotal = 0;\n            };\n\n            var resetCheckoutStatus = function() {\n                $scope.view.checkoutSuccess = false;\n                $scope.view.checkoutFailure = false;\n            };\n\n            $scope.$watch( function(){ return $scope.data.checkoutCredits; }, function(){\n                $scope.data.checkoutTotal = $scope.data.checkoutCredits * $scope.data.creditValue;\n                if ( $scope.data.checkoutTotal > 0 ) {\n                    resetCheckoutStatus();\n                }\n            });\n\n            $scope.showErrors = function() {\n                return $scope.view.submitted;\n            };\n\n            $scope.changeBillingDetails = function() {\n                $scope.view.showBillingDetailsForm = true;\n            };\n\n            $scope.selectCreditsPreset = function(amount) {\n                $scope.data.checkoutCredits = amount;\n                $scope.data.creditsCustomAmount = null;\n            };\n\n            $scope.selectCreditsCustom = function(amount) {\n                $scope.data.checkoutCredits = amount;\n            };\n\n            $scope.checkoutCancel = function() {\n                resetData();\n            };\n\n            $scope.checkoutCconfirm = function() {\n\n                if ( $scope.view.showBillingDetailsForm && ! $scope.form1.$valid ) {\n\n                    $scope.view.submitted = true;\n\n                } else {\n\n                    $scope.view.sending = true;\n                    $scope.view.showBillingDetailsForm = false;\n\n                    userService.updateUser( $scope.data.user ).then(\n                        function(){\n                            billingService.buyCredits( $scope.data.card.payment_method_id, $scope.data.checkoutCredits ).then(\n                                function( response ){\n                                    $scope.view.sending = false;\n                                    $scope.view.checkoutSuccess = true;\n                                    $rootScope.$broadcast('accountBalanceChanged');\n                                    resetData();\n                                },\n                                function( response ){\n                                    $scope.view.sending = false;\n                                    if ( response.status === 400 && typeof response.data.error_code !== 'undefined' ) {\n                                        if ( response.data.error_code === 1 ) {\n                                            $scope.view.checkoutFailure = true;\n                                        } else if ( response.data.error_code === 2 ) {\n                                            $scope.view.paymentDeclined = true;\n                                        }\n                                    } else {\n                                        errorHandler.processApiResponse( response );\n                                    }\n                                    resetData();\n                                }\n                            );\n                        },\n                        function( response ){\n                            $scope.view.sending = false;\n                            errorHandler.processApiResponse( response );\n                        }\n                    );\n\n                }\n            };\n\n            init();\n        }]);\n})();\n","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'billingCtrl', [\n            '$scope',\n            '$modal',\n            '$filter',\n            'errorHandler',\n            'billingService',\n            'userService',\n        function (\n            $scope,\n            $modal,\n            $filter,\n            errorHandler,\n            billingService,\n            userService\n        ) {\n\n            var itemsPerPage = 10;\n\n            $scope.view = {\n                initialLoadComplete: false,\n                itemsPerPage: itemsPerPage,\n                currentPage: 1,\n                maxSize: 10\n            };\n\n            $scope.data = {\n                transactionsCount: 0,\n                transactions: [],\n                user: {\n                    hasBillingDetails: false\n                }\n            };\n\n            $scope.filters = {};\n\n            $scope.daterange = {\n                dates: {\n                    startDate: null,\n                    endDate:   null\n                },\n                datepickerLabel: 'Select date range'\n            };\n\n            var init = function() {\n\n                userService.getUser().then(\n                    function( user ) {\n\n                        $scope.data.user.firstName  = user.firstName;\n                        $scope.data.user.lastName   = user.lastName;\n                        $scope.data.user.company    = user.company;\n                        $scope.data.user.country    = user.country;\n                        $scope.data.user.city       = user.city;\n                        $scope.data.user.address    = user.address;\n                        $scope.data.user.postalCode = user.postalCode;\n                        $scope.data.user.hasBillingDetails = userHasBillingDetails();\n\n                        getTransactions();\n                    },\n                    function( response ) {\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n            };\n\n            var userHasBillingDetails = function() {\n                if ( $scope.data.user.firstName === '' ) { return false; }\n                if ( $scope.data.user.lastName === '' ) { return false; }\n                if ( $scope.data.user.company === '' ) { return false; }\n                if ( $scope.data.user.country === undefined ) { return false; }\n                if ( $scope.data.user.city === '' ) { return false; }\n                if ( $scope.data.user.address === '' ) { return false; }\n                if ( $scope.data.user.postalCode === '' ) { return false; }\n                return true;\n            };\n\n            $scope.changePage = function() {\n                getTransactions();\n            };\n\n            $scope.reloadTransactions = function() {\n                $scope.view.currentPage = 1;\n                getTransactions();\n            };\n\n            var getTransactions = function() {\n\n                var params = {\n                    limit: itemsPerPage,\n                    offset: itemsPerPage * ($scope.view.currentPage - 1)\n                };\n\n                if ( $scope.filters.start_date ) {\n                    params.start_date = $scope.filters.start_date;\n                }\n                if ( $scope.filters.end_date ) {\n                    params.end_date = $scope.filters.end_date;\n                }\n\n                billingService.getTransactions( params ).then(\n                    function( transactions ) {\n                        $scope.data.transactionsCount = transactions.count;\n                        $scope.data.transactions = transactions.results;\n                        $scope.view.initialLoadComplete = true;\n                    },\n                    function( response ) {\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n            };\n\n            $scope.updateFilters = function() {\n                $scope.reloadTransactions();\n            };\n\n            $scope.getInvoicePdf = function( transactionId ) {\n\n                var modal = $modal({\n                    templateUrl: '/panel-module/components/invoiceDownloadModal/modalTmpl.html',\n                    animation: 'am-fade-and-scale',\n                    placement: 'center'\n                });\n\n                billingService.getInvoicePdf( transactionId ).then(\n                    function( response ){\n                        modal.$promise.then(modal.hide);\n                    },\n                    function( response ){\n                        errorHandler.processApiResponse( response );\n                        modal.$promise.then(modal.hide);\n                    }\n                );\n            };\n\n            $scope.$watch('daterange.dates.startDate', function(newValue, oldValue) {\n                if ( newValue === null ) {\n                    return;\n                }\n                $scope.filters.start_date = moment.utc( $scope.daterange.dates.startDate ).hour(0).minute(0).second(0).format('YYYY-MM-DD');\n                $scope.filters.end_date = moment.utc( $scope.daterange.dates.endDate ).hour(23).minute(59).second(59).format('YYYY-MM-DD');\n                $scope.daterange.datepickerLabel =  $filter('date')( $scope.filters.start_date, 'yyyy-MM-dd' ) + ' - ' + $filter('date')( $scope.filters.end_date, 'yyyy-MM-dd' );\n                $scope.updateFilters();\n            });\n\n            init();\n        }]);\n})();\n","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'apiKeysCtrl', [\n            '$scope',\n            '$alert',\n            '$modal',\n            'errorHandler',\n            'applicationsService',\n        function (\n            $scope,\n            $alert,\n            $modal,\n            errorHandler,\n            applicationsService\n        ) {\n\n            var itemsPerPage = 10;\n\n            $scope.view = {\n                busy: true,\n                currentPage: 1,\n                maxSize: 10,\n                itemsPerPage: itemsPerPage,\n                filtersActive: false,\n                initialLoadComplete: false\n            };\n\n            $scope.data = {\n                appsCount: 0,\n                apps: []\n            };\n\n            $scope.filters = {};\n\n            var init = function() {\n                initFilters();\n                getApps();\n            };\n\n            var initFilters = function() {\n                $scope.filters = {\n                    name: '',\n                    api_key: ''\n                };\n            };\n\n            $scope.changePage = function() {\n                getApps();\n            };\n\n            $scope.reloadApps = function() {\n                $scope.view.currentPage = 1;\n                getApps();\n            };\n\n            var getApps = function( argsObj ) {\n\n                var params = {\n                    limit: itemsPerPage,\n                    offset: itemsPerPage * ($scope.view.currentPage - 1)\n                };\n\n                if ( $scope.filters.name.length > 0 ) {\n                    params.name = $scope.filters.name;\n                }\n                if ( $scope.filters.api_key.length > 0 ) {\n                    params.api_key = $scope.filters.api_key;\n                }\n\n                $scope.view.busy = true;\n                applicationsService.getApps( params ).then(\n                    function( apps ) {\n                        $scope.data.appsCount = apps.count;\n                        $scope.data.apps = apps.items;\n                        $scope.view.busy = false;\n                        $scope.view.initialLoadComplete = true;\n                    },\n                    function( response ) {\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n            };\n\n            var deleteApp = function( app ) {\n                var name = app.name;\n                applicationsService.deleteApp( app.id ).then(\n                    function() {\n                        $alert({\n                            title: 'Application deleted.',\n                            content: 'Application \"' + name + '\" has been deleted.',\n                            container: '#alerts-container',\n                            placement: 'top',\n                            duration: 3,\n                            type: 'success',\n                            show: true\n                        });\n                        getApps();\n                    },\n                    function( response ) {\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n            };\n\n            $scope.showDeleteAppDialog = function( app ) {\n                var options = {\n                    delete: function( app ) {\n                        console.log('delete app', app);\n                        deleteApp( app );\n                    }\n                };\n                $modal({\n                    templateUrl: 'panel-module/components/appDeleteModal/modalTmpl.html',\n                    controller: 'appDeleteModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    placement: 'center',\n                    resolve: {\n                        modalOptions: function() {\n                            return options;\n                        },\n                        app: function () {\n                            return app;\n                        }\n                    }\n                });\n            };\n\n            $scope.showNewAppDialog = function() {\n                var options = {\n                    submit: function( app ) {\n                        $alert({\n                            title: 'Application added.',\n                            content: 'Application \"' + app.name + '\" has been added.',\n                            container: '#alerts-container',\n                            placement: 'top',\n                            duration: 3,\n                            type: 'success',\n                            show: true\n                        });\n                        $scope.reloadApps();\n                    }\n                };\n                $modal({\n                    templateUrl: 'panel-module/components/newAppModal/modalTmpl.html',\n                    controller: 'newAppModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    placement: 'center',\n                    resolve: {\n                        modalOptions: function() {\n                            return options;\n                        }\n                    }\n                });\n            };\n\n            $scope.showAppEditDialog = function( app ) {\n                var options = {\n                    submit: function( app ) {\n                        $alert({\n                            title: 'Application updated.',\n                            content: '',\n                            container: '#alerts-container',\n                            placement: 'top',\n                            duration: 3,\n                            type: 'success',\n                            show: true\n                        });\n                        $scope.reloadApps();\n                    }\n                };\n                $modal({\n                    templateUrl: 'panel-module/components/appEditModal/modalTmpl.html',\n                    controller: 'appEditModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    placement: 'center',\n                    resolve: {\n                        modalOptions: function() {\n                            return options;\n                        },\n                        app: function () {\n                            return app;\n                        }\n                    }\n                });\n            };\n\n            $scope.showAppKeyDialog = function( app ) {\n                $modal({\n                    templateUrl: 'panel-module/components/appKeyModal/modalTmpl.html',\n                    controller: 'appKeyModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    placement: 'center',\n                    resolve: {\n                        app: function () {\n                            return app;\n                        }\n                    }\n                });\n            };\n\n            $scope.updateFilters = function() {\n                $scope.reloadApps();\n            };\n\n            $scope.toggleFilters = function() {\n                if ( $scope.view.filtersActive ) {\n                    $scope.clearFilters();\n                } else {\n                    $scope.view.filtersActive = true;\n                }\n            };\n\n            $scope.clearFilters = function() {\n                $scope.view.filtersActive = false;\n                initFilters();\n                $scope.reloadApps();\n            };\n\n            init();\n        }]);\n})();\n","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'mediaCtrl', [\n            '$scope',\n            '$alert',\n            '$modal',\n            'errorHandler',\n            'mediaService',\n        function (\n            $scope,\n            $alert,\n            $modal,\n            errorHandler,\n            mediaService\n        ) {\n\n            var itemsPerPage = 9;\n\n            $scope.view = {\n                busy: true,\n                currentPage: 1,\n                media: [],\n                maxSize: 10,\n                searchPhrase: '',\n                searchInput: '',\n                orderByOptions: [\n                    {\n                        value: 'name',\n                        label: 'Order by title'\n                    },\n                    {\n                        value: '-date_added',\n                        label: 'Newest first'\n                    }\n                ],\n                orderBy: '-date_added',\n                itemsPerPage: itemsPerPage,\n                selectItem: false\n            };\n\n            $scope.data = {\n                mediaCount: 0,\n                media: []\n            };\n\n            var init = function() {\n                getMedia();\n            };\n\n            $scope.reloadMedia = function() {\n                $scope.view.currentPage = 1;\n                getMedia();\n            };\n\n            $scope.changeOrder = function() {\n                $scope.view.currentPage = 1;\n                getMedia();\n            };\n\n            $scope.search = function() {\n                $scope.view.currentPage = 1;\n                $scope.view.searchPhrase = $scope.view.searchInput;\n                getMedia();\n            };\n\n            $scope.nextPage = function() {\n                //console.log(\"SCROLL\",$scope.data.media.length, $scope.data.mediaCount, $scope.view.currentPage)\n                if ( $scope.view.busy || $scope.data.media.length === $scope.data.mediaCount ) {\n                    return;\n                }\n                $scope.view.currentPage++;\n                getMedia();\n            };\n\n            var getMedia = function( argsObj ) {\n\n                var params = {\n                    limit: itemsPerPage,\n                    offset: itemsPerPage * ($scope.view.currentPage - 1),\n                    ordering: $scope.view.orderBy\n                };\n\n                if ( $scope.view.searchPhrase.length > 0 ) {\n                    params.name = $scope.view.searchPhrase;\n                }\n\n                $scope.view.busy = true;\n                mediaService.getMedia( params ).then(\n                    function( media ) {\n                        $scope.data.mediaCount = media.count;\n                        if ( $scope.view.currentPage === 1 ) {\n                            $scope.data.media = media.items;\n                        } else {\n                            $scope.data.media = $scope.data.media.concat( media.items );\n                        }\n                        $scope.view.busy = false;\n                    },\n                    function( response ) {\n                        $scope.view.busy = false;\n                        errorHandler.processApiResponse( response );\n                        $scope.$hide();\n                    }\n                );\n            };\n\n            var deleteMedia = function( media ) {\n                var name = media.name;\n                mediaService.deleteMedia( media.id ).then(\n                    function() {\n                        $alert({\n                            title: 'Media deleted.',\n                            content: 'Media collection \"' + name + '\" has been deleted.',\n                            container: '#alerts-container',\n                            placement: 'top',\n                            duration: 3,\n                            type: 'success',\n                            show: true\n                        });\n                        $scope.reloadMedia();\n                    },\n                    function( response ) {\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n            };\n\n            $scope.showNewMediaDialog = function() {\n                var options = {\n                    submit: function( mediaId ) {\n                        console.log(\"mediaId\",mediaId);\n                        $scope.reloadMedia();\n                    }\n                };\n                $modal({\n                    templateUrl: 'panel-module/components/newMediaModal/modalTmpl.html',\n                    controller: 'newMediaModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    backdrop: 'static',\n                    resolve: {\n                        modalOptions: function() {\n                            return options;\n                        }\n                    }\n                });\n            };\n\n            $scope.showDeleteMediaDialog = function( media ) {\n                var options = {\n                    delete: function( media ) {\n                        console.log('delete media', media);\n                        deleteMedia( media );\n                    }\n                };\n                $modal({\n                    templateUrl: 'panel-module/components/mediaDeleteModal/modalTmpl.html',\n                    controller: 'mediaDeleteModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    placement: 'center',\n                    resolve: {\n                        modalOptions: function() {\n                            return options;\n                        },\n                        media: function () {\n                            return media;\n                        }\n                    }\n                });\n            };\n\n            init();\n        }]);\n})();\n\n","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'mediaViewCtrl', [\n            '$scope',\n            '$state',\n            '$stateParams',\n            '$alert',\n            '$modal',\n            '$sce',\n            'errorHandler',\n            'mediaService',\n        function (\n            $scope,\n            $state,\n            $stateParams,\n            $alert,\n            $modal,\n            $sce,\n            errorHandler,\n            mediaService\n        ) {\n\n            $scope.view = {\n                busy: false\n            };\n\n            $scope.data = {\n                mediaId: $stateParams.mediaId,\n                mediaItem: {}\n            };\n\n            $scope.videogular = { sources: [] };\n\n            var init = function() {\n                $scope.view.busy = true;\n                mediaService.getMediaItem( $scope.data.mediaId ).then(\n                    function( mediaItem ) {\n                        $scope.data.mediaItem = mediaItem;\n                        $scope.setVideo();\n                        $scope.view.mediaLoaded = true;\n                        $scope.view.busy = false;\n                    },\n                    function( response ) {\n                        $scope.view.busy = false;\n                        errorHandler.processApiResponse( response );\n                        $scope.$hide();\n                    }\n                );\n            };\n\n            var deleteMedia = function( media ) {\n                var name = media.name;\n                mediaService.deleteMedia( media.id ).then(\n                    function() {\n                        $alert({\n                            title: 'Media deleted.',\n                            content: 'Media collection \"' + name + '\" has been deleted.',\n                            container: '#alerts-container',\n                            placement: 'top',\n                            duration: 3,\n                            type: 'success',\n                            show: true\n                        });\n                        $state.go('media');\n                    },\n                    function( response ) {\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n            };\n\n            $scope.setVideo = function() {\n                $scope.videogular.sources = [\n                    {src: $sce.trustAsResourceUrl($scope.data.mediaItem.video), type: \"video/mp4\"}\n                ];\n            };\n\n            $scope.showDeleteMediaDialog = function( media ) {\n                var options = {\n                    delete: function( media ) {\n                        console.log('delete media', media);\n                        deleteMedia( media );\n                    }\n                };\n                $modal({\n                    templateUrl: 'panel-module/components/mediaDeleteModal/modalTmpl.html',\n                    controller: 'mediaDeleteModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    placement: 'center',\n                    resolve: {\n                        modalOptions: function() {\n                            return options;\n                        },\n                        media: function () {\n                            return media;\n                        }\n                    }\n                });\n            };\n\n            init();\n        }]);\n\n})();\n","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'mediaEditCtrl', [\n            '$scope',\n            '$state',\n            '$stateParams',\n            '$alert',\n            'errorHandler',\n            'apiUrl',\n            'authToken',\n            'utils',\n            'mediaService',\n            'FileUploader',\n        function (\n            $scope,\n            $state,\n            $stateParams,\n            $alert,\n            errorHandler,\n            apiUrl,\n            authToken,\n            utils,\n            mediaService,\n            FileUploader\n        ) {\n\n            var uploader = $scope.uploader = new FileUploader({\n                url: apiUrl + '/media/',\n                method: 'PATCH',\n                headers: {\n                    'Authorization': 'Token ' + authToken.get()\n                }\n            });\n\n            $scope.fieldHasError = utils.fieldHasError;\n\n            $scope.view = {\n                busy: false,\n                uploading: false,\n                submitted: false,\n                mediaCreated: false,\n\n                videoUploadStarted: false,\n                videoUploadProgress: 0,\n                videoUploadComplete: false,\n\n                imageUploadStarted: false,\n                imageUploadProgress: 0,\n                imageUploadComplete: false\n            };\n\n            $scope.data = {\n                mediaId: $stateParams.mediaId,\n                mediaItem: {},\n                videoFile: '',\n                imageFile: '',\n                newVideoAdded: false,\n                newImageAdded: false\n            };\n\n            $scope.errors = {\n                video: {},\n                image: {}\n            };\n\n            var init = function() {\n\n                utils.addUploaderTypeFilter( uploader, 'video', {\n                    videoFilter: ['video/mp4', 'video/ogg', 'video/webm', 'video/mov', 'video/avi', 'video/quicktime']\n                });\n                utils.addUploaderTypeFilter( uploader, 'display', {\n                    imageFilter: ['image/png', 'image/jpg', 'image/jpeg']\n                });\n\n                $scope.view.busy = true;\n                mediaService.getMediaItem( $scope.data.mediaId ).then(\n                    function( mediaItem ) {\n                        $scope.data.mediaItem = mediaItem;\n                        $scope.data.imageFile = mediaItem.display;\n                        $scope.view.hasVideo = true;\n                        $scope.view.mediaLoaded = true;\n                        $scope.view.busy = false;\n                    },\n                    function( response ) {\n                        $scope.view.busy = false;\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n            };\n\n\n            uploader.onAfterAddingFile = function( newItem ) {\n\n                utils.cleanupUploaderQueue( uploader );\n\n                if ( newItem.alias === 'video' ) {\n                    $scope.data.videoFile = newItem._file;\n                    $scope.data.newVideoAdded = true;\n                }\n                if ( newItem.alias === 'display' ) {\n                    $scope.data.imageFile = newItem._file;\n                    $scope.data.newImageAdded = true;\n\n                    mediaService.imageSizeHelper( newItem._file ).then(function( size ){\n                        if ( ! mediaService.imageSizeValid( size.width, size.height ) ) {\n                            $scope.errors.image.size = true;\n                        } else {\n                            delete $scope.errors.image.size;\n                        }\n                    });\n                }\n            };\n\n            uploader.onBeforeUploadItem = function(item) {\n                if ( item.alias === 'video' ) {\n                    $scope.view.videoUploadStarted = true;\n                }\n                if ( item.alias === 'display' ) {\n                    $scope.view.imageUploadStarted = true;\n                }\n                item.url = apiUrl + '/media/'+ $scope.data.mediaId +'/';\n            };\n\n            uploader.onCompleteItem = function( fileItem, response, status, headers ) {\n                if ( fileItem.alias === 'video' ) {\n                    $scope.view.videoUploadComplete = true;\n                }\n                if ( fileItem.alias === 'display' ) {\n                    $scope.view.imageUploadComplete = true;\n                }\n            };\n\n            uploader.onProgressItem = function(fileItem, progress) {\n                if ( fileItem.alias === 'video' ) {\n                    $scope.view.videoUploadProgress = progress;\n                }\n                if ( fileItem.alias === 'display' ) {\n                    $scope.view.imageUploadProgress = progress;\n                }\n            };\n\n            uploader.onCompleteAll = function() {\n                $scope.view.mediaCreated = true;\n                $alert({\n                    title: 'Media saved.',\n                    content: '',\n                    container: '#alerts-container',\n                    placement: 'top',\n                    duration: 3,\n                    type: 'success',\n                    show: true\n                });\n                $state.go('media');\n            };\n\n            $scope.showErrors = function() {\n                return $scope.view.submitted;\n            };\n            $scope.videoHasError = function() {\n                return ( $scope.data.newVideoAdded && typeof $scope.data.videoFile !== 'object' );\n            };\n            $scope.imageHasError = function() {\n                if ( $scope.data.newImageAdded && ( typeof $scope.data.imageFile !== 'object' || $scope.errors.image.size ) ) {\n                    return true;\n                } else {\n                    return false;\n                }\n            };\n\n            $scope.saveMedia = function() {\n                $scope.view.submitted = true;\n                if ( $scope.form1.$valid && !$scope.imageHasError() && !$scope.videoHasError() ) {\n                    $scope.view.uploading = true;\n                    mediaService.updateMedia( $scope.data.mediaItem ).then(\n                        function(){\n                            if ( $scope.data.newVideoAdded || $scope.data.newImageAdded ) {\n                                uploader.uploadAll();\n                            } else {\n                                $alert({\n                                    title: 'Media saved.',\n                                    content: '',\n                                    container: '#alerts-container',\n                                    placement: 'top',\n                                    duration: 3,\n                                    type: 'success',\n                                    show: true\n                                });\n                                $state.go('media');\n                            }\n                        },\n                        function(){\n                            // Show error message\n                            // $scope.$hide();\n                        }\n                    );\n                }\n            };\n\n            init();\n        }]);\n\n})();\n\n","(function() {\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller('productsCtrl', [\n            '$scope',\n            '$alert',\n            '$modal',\n            '$http',\n            'apiUrl',\n            'authToken',\n            'errorHandler',\n            'productsService',\n        function(\n            $scope,\n            $alert,\n            $modal,\n            $http,\n            apiUrl,\n            authToken,\n            errorHandler,\n            productsService\n        ) {\n\n            var itemsPerPage = 12;\n\n            $scope.view = {\n                busy: true,\n                currentPage: 1,\n                media: [],\n                maxSize: 10,\n                searchPhrase: '',\n                searchInput: '',\n                orderByOptions: [{\n                    'value': 'title',\n                    'label': 'Order by title'\n                }, {\n                    'value': '-date_added',\n                    'label': 'Newest first'\n                }],\n                orderBy: '-date_added',\n                itemsPerPage: itemsPerPage,\n                selectItem: false\n            };\n\n            $scope.data = {\n                deletedCount: 0,\n                productsCount: 0,\n                products: []\n            };\n\n            var init = function() {\n                getProducts();\n            };\n\n            $scope.reloadProducts = function() {\n                $scope.view.currentPage = 1;\n                getProducts();\n            };\n\n            $scope.search = function() {\n                $scope.view.currentPage = 1;\n                $scope.view.searchPhrase = $scope.view.searchInput;\n                getProducts();\n            };\n\n            $scope.nextPage = function() {\n                if ( $scope.view.busy || $scope.data.products.length === $scope.data.productsCount ) {\n                    return;\n                }\n                $scope.view.currentPage++;\n                getProducts();\n            };\n\n            var getProducts = function(argsObj) {\n\n                var params = {\n                    limit: itemsPerPage,\n                    offset: ( itemsPerPage * ($scope.view.currentPage - 1) ) - $scope.data.deletedCount,\n                    ordering: $scope.view.orderBy\n                };\n\n                if ($scope.view.searchPhrase.length > 0) {\n                    params.title = $scope.view.searchPhrase;\n                }\n\n                $scope.view.busy = true;\n                productsService.getProducts(params).then(\n                    function(products) {\n                        $scope.data.productsCount = products.count;\n                        if ($scope.view.currentPage === 1) {\n                            $scope.data.products = products.items;\n                        } else {\n                            $scope.data.products = $scope.data.products.concat(products.items);\n                        }\n                        $scope.view.busy = false;\n                    },\n                    function( response ) {\n                        $scope.view.busy = false;\n                        errorHandler.processApiResponse( response );\n                        $scope.$hide();\n                    }\n                );\n            };\n\n            var deleteProduct = function( product, index ) {\n                var title = product.title;\n\n                productsService.deleteProduct(product.id).then(\n                    function() {\n                        $alert({\n                            title: 'Product deleted.',\n                            content: '\"' + title + '\" has been deleted.',\n                            container: '#alerts-container',\n                            placement: 'top',\n                            duration: 3,\n                            type: 'success',\n                            show: true\n                        });\n                        $scope.data.products.splice( index, 1 );\n                        $scope.data.productsCount--;\n                        $scope.data.deletedCount++;\n                    },\n                    function( response ) {\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n            };\n\n            $scope.showNewProductDialog = function() {\n                var options = {\n                    submit: function(newProduct) {\n                        console.log(\"newProduct\", newProduct);\n                        $scope.reloadProducts();\n                    }\n                };\n                $modal({\n                    templateUrl: 'panel-module/components/newProductModal/modalTmpl.html',\n                    controller: 'newProductModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    backdrop: 'static',\n                    resolve: {\n                        modalOptions: function() {\n                            return options;\n                        }\n                    }\n                });\n            };\n\n            $scope.showDeleteProductDialog = function( product, index ) {\n                var options = {\n                    delete: function( product, index ) {\n                        deleteProduct( product, index );\n                    }\n                };\n                $modal({\n                    templateUrl: 'panel-module/components/productDeleteModal/modalTmpl.html',\n                    controller: 'productDeleteModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    placement: 'center',\n                    resolve: {\n                        modalOptions: function() {\n                            return options;\n                        },\n                        product: function() {\n                            return product;\n                        },\n                        index: function() {\n                            return index;\n                        }\n                    }\n                });\n            };\n\n            init();\n        }\n    ]);\n})();\n","(function() {\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller('productViewCtrl', [\n            '$scope',\n            '$state',\n            '$stateParams',\n            '$alert',\n            '$modal',\n            'errorHandler',\n            'productsService',\n        function(\n            $scope,\n            $state,\n            $stateParams,\n            $alert,\n            $modal,\n            errorHandler,\n            productsService\n        ) {\n\n            $scope.view = {\n                busy: false\n            };\n\n            $scope.data = {\n                productId: $stateParams.productId,\n                product: {}\n            };\n\n            var init = function() {\n                $scope.view.busy = true;\n                productsService.getProduct($scope.data.productId).then(\n                    function(product) {\n                        console.log(product);\n                        $scope.data.product = product;\n                        $scope.view.busy = false;\n                    },\n                    function( response ) {\n                        $scope.view.busy = false;\n                        errorHandler.processApiResponse( response );\n                        $scope.$hide();\n                    }\n                );\n            };\n\n            var deleteProduct = function(product) {\n                var title = product.title;\n                productsService.deleteProduct(product.id).then(\n                    function() {\n                        $alert({\n                            title: 'Product deleted.',\n                            content: '\"' + title + '\" has been deleted.',\n                            container: '#alerts-container',\n                            placement: 'top',\n                            duration: 3,\n                            type: 'success',\n                            show: true\n                        });\n                        $state.go('products');\n                    },\n                    function( response ) {\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n            };\n\n            $scope.showDeleteProductDialog = function(product) {\n                var options = {\n                    delete: function(product) {\n                        deleteProduct(product);\n                    }\n                };\n                $modal({\n                    templateUrl: 'panel-module/components/productDeleteModal/modalTmpl.html',\n                    controller: 'productDeleteModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    placement: 'center',\n                    resolve: {\n                        modalOptions: function() {\n                            return options;\n                        },\n                        product: function() {\n                            return product;\n                        }\n                    }\n                });\n            };\n\n            init();\n        }\n    ]);\n\n})();\n","(function() {\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller('productEditCtrl', [\n            '$scope',\n            '$state',\n            '$stateParams',\n            '$alert',\n            'apiUrl',\n            'utils',\n            'authToken',\n            'errorHandler',\n            'FileUploader',\n            'productsService',\n            function(\n                $scope,\n                $state,\n                $stateParams,\n                $alert,\n                apiUrl,\n                utils,\n                authToken,\n                errorHandler,\n                FileUploader,\n                productsService\n            ) {\n\n                var uploader = $scope.uploader = new FileUploader({\n                    method: 'PATCH',\n                    headers: {\n                        'Authorization': 'Token ' + authToken.get()\n                    }\n                });\n\n                $scope.fieldHasError = utils.fieldHasError;\n                $scope.urlRegex = utils.urlRegex();\n\n                $scope.view = {\n                    busy: false,\n                    submitted: false,\n                    uploading: false,\n                    uploadStarted: false,\n                    uploadProgress: 0,\n                    uploadComplete: false\n                };\n\n                $scope.data = {\n                    productId: $stateParams.productId,\n                    product: {},\n                    imageFile: '',\n                    newImageAdded: false\n                };\n\n                var init = function() {\n\n                    utils.addUploaderTypeFilter(uploader, 'image', {\n                        imageFilter: ['image/png', 'image/jpg', 'image/jpeg']\n                    });\n\n                    $scope.view.busy = true;\n                    productsService.getProduct($scope.data.productId).then(\n                        function(product) {\n                            $scope.data.product = product;\n                            $scope.data.imageFile = product.image || product.image_url;\n                            $scope.view.busy = false;\n                        },\n                        function( response ) {\n                            $scope.view.busy = false;\n                            errorHandler.processApiResponse( response );\n                            $scope.$hide();\n                        }\n                    );\n                };\n\n                var success = function() {\n                    $alert({\n                        title: 'Product saved.',\n                        content: '',\n                        container: '#alerts-container',\n                        placement: 'top',\n                        duration: 3,\n                        type: 'success',\n                        show: true\n                    });\n                    $state.go('products');\n                };\n\n                uploader.onAfterAddingFile = function(item) {\n                    utils.cleanupUploaderQueue(uploader);\n                    $scope.data.imageFile = item._file;\n                    $scope.data.newImageAdded = true;\n                };\n\n                uploader.onBeforeUploadItem = function(item) {\n                    $scope.view.uploading = true;\n                    $scope.view.uploadStarted = true;\n                    item.url = apiUrl + '/products/' + $scope.data.productId + '/';\n                };\n\n                uploader.onProgressItem = function(fileItem, progress) {\n                    $scope.view.uploadProgress = progress;\n                };\n\n                uploader.onSuccessItem = function(item, response, status, headers) {\n                    $scope.view.uploadComplete = true;\n                    success();\n                };\n\n                $scope.showErrors = function() {\n                    return $scope.view.submitted;\n                };\n\n                $scope.imageHasError = function() {\n                    return ($scope.data.newImageAdded && typeof $scope.data.imageFile !== 'object');\n                };\n\n                $scope.saveProduct = function() {\n                    $scope.view.submitted = true;\n                    if ($scope.form1.$valid) {\n                        $scope.view.uploading = true;\n                        productsService.updateProduct($scope.data.product).then(\n                            function() {\n                                if ($scope.data.newImageAdded) {\n                                    uploader.uploadAll();\n                                } else {\n                                    success();\n                                }\n                            },\n                            function() {}\n                        );\n                    }\n                };\n\n                init();\n            }\n        ]);\n\n})();\n","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'campaignEditorCtrl', [\n            '$scope',\n            '$state',\n            '$stateParams',\n            'campaignEditorService',\n        function (\n            $scope,\n            $state,\n            $stateParams,\n            campaignEditorService\n        ) {\n\n            var editor = campaignEditorService;\n\n            $scope.logData = function() {\n                editor.logData();\n            };\n\n            editor.init( $stateParams.campaignId );\n            $scope.currentStep = editor.currentStep;\n\n            $scope.states = {\n                step1: 'campaigns.' + editor.mode() + '.step1',\n                step2: 'campaigns.' + editor.mode() + '.step2',\n                step3: 'campaigns.' + editor.mode() + '.step3',\n                step4: 'campaigns.' + editor.mode() + '.step4',\n                step5: 'campaigns.' + editor.mode() + '.step5',\n                step6: 'campaigns.' + editor.mode() + '.step6'\n            };\n\n            $state.go( $scope.states.step1 );\n        }]);\n})();","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'editCampaignCtrl', [\n            '$scope',\n            '$state',\n            '$stateParams',\n            'campaignEditorService',\n            'campaignsService',\n            'errorHandler',\n            '$alert',\n        function (\n            $scope,\n            $state,\n            $stateParams,\n            campaignEditorService,\n            campaignsService,\n            errorHandler,\n            $alert\n        ) {\n\n            var editor = campaignEditorService;\n\n            editor.init( $stateParams.campaignId );\n\n            $scope.view = {\n                currentTab: 'details'\n            };\n\n            $scope.data = {\n                campaign: {}\n            };\n\n            campaignsService.getCampaign( $stateParams.campaignId ).then(\n                function( campaign ) {\n                    if ( campaign.status === 3 ) {\n                        $state.go('campaigns');\n                    }\n                    $scope.data.campaign = campaign;\n                },\n                function( response ) {\n                    errorHandler.processApiResponse( response );\n                }\n            );\n\n            $scope.switchTab = function( tab ) {\n                $scope.view.currentTab = tab;\n            };\n\n            $scope.isCurrentTab = function( tab ) {\n                return $scope.view.currentTab === tab;\n            };\n\n        }]);\n})();","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'campaignEditorStep1Ctrl', [\n            '$scope',\n            '$state',\n            '$stateParams',\n            'errorHandler',\n            'campaignEditorService',\n            'utils',\n        function (\n            $scope,\n            $state,\n            $stateParams,\n            errorHandler,\n            campaignEditorService,\n            utils\n        ) {\n\n            var editor = campaignEditorService;\n            $scope.fieldHasError = utils.fieldHasError;\n\n            $scope.view = {\n                busy: true\n            };\n\n            $scope.campaign = {};\n\n            $scope.daterange = {\n                dates: {\n                    startDate: null,\n                    endDate:   null\n                },\n                min: moment().format('YYYY-MM-DD'),\n                display: 'Select date range'\n            };\n\n            var init = function() {\n\n                editor.currentStep('step1');\n                editor.previousState( 'campaigns.' + editor.mode() + '.step1' );\n\n                $scope.campaign = editor.dataGet('campaign');\n\n                if ( typeof $scope.campaign.start_date !== 'undefined' && typeof $scope.campaign.end_date !== 'undefined' ) {\n                    $scope.daterange.dates.startDate = moment.utc( $scope.campaign.start_date );\n                    $scope.daterange.dates.endDate   = moment.utc( $scope.campaign.end_date );\n                    $scope.daterange.display = $scope.daterange.dates.startDate.format('YYYY-MM-DD') + ' - ' + $scope.daterange.dates.endDate.format('YYYY-MM-DD');\n                }\n\n                $scope.view.busy = false;\n\n            };\n\n            $scope.$watch( function(){ return $scope.daterange.dates; }, function(newValue, oldValue) {\n                if ( newValue === undefined || newValue.startDate === null || newValue.endDate === null ) {\n                    return;\n                }\n                $scope.daterange.display = newValue.startDate.format('YYYY-MM-DD') + ' - ' + newValue.endDate.format('YYYY-MM-DD');\n            });\n\n            $scope.showErrors = function() {\n                return editor.stepGet('step1', 'submitted');\n            };\n\n            $scope.nextStep = function() {\n\n                editor.stepSet('step1', 'submitted', true);\n\n                if ( $scope.form1.$valid ) {\n\n                    editor.stepSet('step1', 'valid', true);\n\n                    $scope.campaign.start_date = moment( $scope.daterange.dates.startDate ).format('YYYY-MM-DD') + 'T00:00:00.000Z';\n                    $scope.campaign.end_date = moment( $scope.daterange.dates.endDate ).format('YYYY-MM-DD') + 'T23:59:59.999Z';\n                    editor.dataSet('campaign', $scope.campaign);\n\n                    editor.save('step1').then(\n                        function(){\n                            $state.go( 'campaigns.' + editor.mode() + '.step2' );\n                        },\n                        function( response ){\n                            errorHandler.processApiResponse( response );\n                        }\n                    );\n\n                } else {\n                    editor.stepSet('step1', 'valid', false);\n                }\n            };\n\n            $scope.logControllerData = function() {\n                console.log('campaignEditorStep1Ctrl - campaign', angular.copy( $scope.campaign ) );\n            };\n\n            init();\n\n        }]);\n})();\n","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'campaignEditorStep2Ctrl', [\n            '$scope',\n            '$state',\n            '$sce',\n            'utils',\n            '$modal',\n            'errorHandler',\n            'campaignsService',\n            'campaignEditorService',\n        function (\n            $scope,\n            $state,\n            $sce,\n            utils,\n            $modal,\n            errorHandler,\n            campaignsService,\n            campaignEditorService\n        ) {\n\n            var editor = campaignEditorService;\n            $scope.fieldHasError = utils.fieldHasError;\n\n            $scope.view = {\n                busy: false,\n                showErrors: false,\n                errors: {},\n                ageRanges: []\n            };\n\n            $scope.data = {\n                allCategories: true,\n                allLocations: true,\n                categories: [],\n                locations: [],\n                gender: {\n                    male: true,\n                    female: true\n                },\n                os: {\n                    ios: true,\n                    android: true\n                },\n                ageRange: undefined\n            };\n\n            var init = function() {\n\n                if ( ! editor.stepGet('step1', 'valid') ) {\n                    $state.go( editor.previousState() );\n                }\n\n                editor.currentStep('step2');\n                editor.previousState( 'campaigns.' + editor.mode() + '.step2' );\n\n                var targetingData = editor.dataGet('targeting');\n                if (  ! _.isEmpty( targetingData ) ) {\n\n                    $scope.data = targetingData;\n\n                } else {\n\n                    $scope.view.busy = true;\n\n                    campaignsService.getTargeting().then(\n                        function( response ) {\n                            $scope.data.allCategories  = response.allCategories;\n                            $scope.data.allLocations   = response.allLocations;\n                            $scope.data.categories     = response.categories;\n                            $scope.data.locations      = response.locations;\n                            $scope.data.gender         = response.gender;\n                            $scope.data.os             = response.os;\n                            $scope.data.ageRange       = response.ageRange;\n                            $scope.view.ageRanges      = response.ageRanges;\n                            $scope.view.busy = false;\n                        },\n                        function( response ) {\n                            errorHandler.processApiResponse( response );\n                        }\n                    );\n                }\n\n            };\n\n            $scope.nextStep = function() {\n\n                $scope.view.busy = true;\n                editor.stepSet('step2', 'submitted', true);\n\n                campaignsService.saveTargeting( editor.dataGet( 'campaignId' ), $scope.data ).then(\n                    function( response ) {\n                        editor.stepSet('step2', 'valid', true);\n                        editor.dataSet('targeting', $scope.data);\n                        $state.go( 'campaigns.' + editor.mode() + '.step3' );\n                    },\n                    function( response ) {\n                        $scope.view.busy = false;\n                        editor.stepSet('step2', 'valid', false);\n                        if ( typeof response === 'object' && ! _.isEmpty( response.validationErrors ) ) {\n                            $scope.view.showErrors = true;\n                            $scope.view.errors = response.validationErrors;\n                        } else {\n                            errorHandler.processApiResponse( response );\n                        }\n                    }\n                );\n            };\n\n            $scope.previousStep = function() {\n                $state.go( 'campaigns.' + editor.mode() + '.step1' );\n            };\n\n            $scope.resetError = function( errorName ) {\n                if ( typeof $scope.view.errors[errorName] !== 'undefined' ) {\n                    delete $scope.view.errors[errorName];\n                }\n            };\n\n            init();\n\n        }]);\n})();\n","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'campaignEditorStep3Ctrl', [\n            '$scope',\n            '$state',\n            'utils',\n            'errorHandler',\n            'campaignsService',\n            'campaignEditorService',\n            '$timeout',\n        function (\n            $scope,\n            $state,\n            utils,\n            errorHandler,\n            campaignsService,\n            campaignEditorService,\n            $timeout\n        ) {\n\n            var editor = campaignEditorService;\n            $scope.fieldHasError = utils.fieldHasError;\n\n            $scope.hasBudget = false;\n\n            $scope.view = {\n                busy: false,\n                showCharts: false\n            };\n\n            $scope.data = {\n                budgetType: 'ongoing',\n                bidAmount: undefined,\n                budgetAmount: undefined\n            };\n\n            $scope.estViews = {\n                daily: { percentage: 0, min: 0, max: 0 },\n                total: { percentage: 0, min: 0, max: 0 }\n            };\n\n            $scope.estDailyViewsChart = {\n                data: [ $scope.estViews.daily.percentage, 100 - $scope.estViews.daily.percentage ],\n                labels: ['', ''],\n                colours: [ '#f9cd3f', '#dae2e5' ],\n                options: {\n                    animationEasing: 'easeOutQuart',\n                    showTooltips: false,\n                    segmentShowStroke: false,\n                    percentageInnerCutout: 85\n                }\n            };\n\n            $scope.estTotalViewsChart = {\n                data: [ $scope.estViews.total.percentage, 100 - $scope.estViews.total.percentage ],\n                labels: ['', ''],\n                colours: [ '#343b45', '#dae2e5' ],\n                options: {\n                    animationEasing: 'easeOutQuart',\n                    showTooltips: false,\n                    segmentShowStroke: false,\n                    percentageInnerCutout: 85\n                }\n            };\n\n            var mapBudgetType = function( type ) {\n                var types = [ 'ongoing', 'fixed', 'daily' ];\n                if ( typeof type === 'number' ) {\n                    return types[ type - 1 ];\n                } else if ( typeof type === 'string' ) {\n                    type = types.indexOf( type );\n                    return type + 1;\n                }\n            };\n\n            var init = function() {\n\n                if (\n                    ! editor.stepGet('step1', 'valid') ||\n                    ! editor.stepGet('step2', 'valid')\n                ) {\n                    $state.go( editor.previousState() );\n                }\n\n                editor.currentStep('step3');\n                editor.previousState( 'campaigns.' + editor.mode() + '.step3' );\n\n                var budgetingData = editor.dataGet('budgeting');\n\n                if (  ! _.isEmpty( budgetingData ) ) {\n\n                    $scope.data = budgetingData;\n                    $scope.hasBudget = true;\n\n                    $timeout(function(){\n                        updateEstimatedViews();\n                    }, 300 );\n\n                } else {\n\n                    $timeout(function(){\n                        updateEstimatedViews();\n                    }, 300 );\n                }\n            };\n\n            $scope.changedBid = function() {\n                updateEstimatedViews();\n            };\n\n            var updateEstimatedViews = function() {\n                if ( typeof $scope.data.bidAmount === 'undefined' ) {\n                    $scope.estViews = {\n                        daily: { percentage: 0, min: 0, max: 0 },\n                        total: { percentage: 0, min: 0, max: 0 }\n                    };\n                    updateCharts();\n                    $scope.view.showCharts = true;\n                } else {\n                    campaignsService.getEstimatedViews( editor.dataGet('campaignId'), $scope.data.bidAmount ).then(\n                        function( response ) {\n                            $scope.estViews = response;\n                            updateCharts();\n                            $scope.view.showCharts = true;\n                        },\n                        function( response ) {\n                            errorHandler.processApiResponse( response );\n                        }\n                    );\n                }\n            };\n\n            var updateCharts = function() {\n                $scope.estDailyViewsChart.data = [ $scope.estViews.daily.percentage, 100 - $scope.estViews.daily.percentage ];\n                $scope.estTotalViewsChart.data = [ $scope.estViews.total.percentage, 100 - $scope.estViews.total.percentage ];\n            };\n\n            $scope.showErrors = function() {\n                return editor.stepGet('step3', 'submitted');\n            };\n\n            $scope.previousStep = function() {\n                $state.go( 'campaigns.' + editor.mode() + '.step2' );\n            };\n\n            $scope.nextStep = function() {\n\n                editor.stepSet('step3', 'submitted', true);\n\n                if ( $scope.form1.$valid ) {\n\n                    $scope.view.busy = true;\n\n                    var data = {\n                        cost_per_view: $scope.data.bidAmount,\n                        amount: $scope.data.budgetAmount,\n                        type: mapBudgetType( $scope.data.budgetType )\n                    };\n\n                    if ( $scope.data.budgetType === 'ongoing' ) {\n                        data.amount = 0;\n                    }\n\n                    campaignsService.saveCampaignBudget( editor.dataGet( 'campaignId' ), data, $scope.hasBudget ).then(\n                        function( response ) {\n                            editor.stepSet('step3', 'valid', true);\n                            editor.dataSet('budgeting', $scope.data);\n                            $state.go( 'campaigns.' + editor.mode() + '.step4' );\n                        },\n                        function( response ) {\n                            errorHandler.processApiResponse( response );\n                        }\n                    );\n                }\n            };\n\n            init();\n\n        }]);\n})();\n","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'campaignEditorStep4Ctrl', [\n            '$scope',\n            '$state',\n            '$sce',\n            'utils',\n            '$modal',\n            'errorHandler',\n            'mediaService',\n            'campaignEditorService',\n        function (\n            $scope,\n            $state,\n            $sce,\n            utils,\n            $modal,\n            errorHandler,\n            mediaService,\n            campaignEditorService\n        ) {\n\n            var editor = campaignEditorService;\n\n            $scope.fieldHasError = utils.fieldHasError;\n            $scope.videogular = { sources: [] };\n            $scope.videogularApi = null;\n\n            var init = function() {\n\n                if (\n                    ! editor.stepGet('step1', 'valid') ||\n                    ! editor.stepGet('step2', 'valid') ||\n                    ! editor.stepGet('step3', 'valid')\n                ) {\n                    $state.go( editor.previousState() );\n                }\n\n                editor.currentStep('step4');\n                editor.previousState( 'campaigns.' + editor.mode() + '.step4' );\n\n                $scope.media = editor.dataGet('media');\n\n                $scope.view = {\n                    busy: false,\n                    busyMedia: false,\n                    mediaLoaded: false,\n                    playerReady: false,\n                    videoSet: false\n                };\n\n                if ( hasVideo() ) {\n                    $scope.view.mediaLoaded = true;\n                    if ( $scope.view.playerReady ) {\n                        $scope.setVideo();\n                    }\n                }\n            };\n\n            var hasVideo = function() {\n                if ( typeof $scope.media.video === 'string' ) {\n                    return true;\n                } else {\n                    return false;\n                }\n            };\n\n            $scope.hasMedia = function() {\n                if ( Object.getOwnPropertyNames( $scope.media ).length === 0 ) {\n                    return false;\n                } else {\n                    return true;\n                }\n            };\n\n            $scope.onPlayerReady = function( API ) {\n                $scope.videogularApi = API;\n                if ( hasVideo() && !$scope.view.videoSet ) {\n                    $scope.setVideo();\n                }\n            };\n\n            $scope.setVideo = function() {\n                $scope.videogularApi.stop();\n                $scope.videogular.sources = [\n                    {src: $sce.trustAsResourceUrl($scope.media.video), type: \"video/mp4\"}\n                ];\n                $scope.view.videoSet = true;\n            };\n\n            $scope.showMediaLibrary = function() {\n                var options = {\n                    submit: function( selectedMedia ) {\n                        $scope.getMedia( selectedMedia.id );\n                    }\n                };\n                $modal({\n                    templateUrl: 'panel-module/components/mediaLibraryModal/modalTmpl.html',\n                    controller: 'mediaLibraryModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    resolve: {\n                        modalOptions: function() {\n                            return options;\n                        }\n                    }\n                });\n            };\n\n            $scope.showNewMediaDialog = function() {\n                var options = {\n                    mode: 'campaignEditor',\n                    submit: function( mediaId ) {\n                        console.log(\"mediaId\",mediaId);\n                        $scope.getMedia( mediaId );\n                    }\n                };\n                $modal({\n                    templateUrl: 'panel-module/components/newMediaModal/modalTmpl.html',\n                    controller: 'newMediaModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    backdrop: 'static',\n                    resolve: {\n                        modalOptions: function() {\n                            return options;\n                        }\n                    }\n                });\n            };\n\n            $scope.getMedia = function( mediaId ) {\n                $scope.view.busyMedia = true;\n                mediaService.getMediaItem( mediaId ).then(\n                    function( mediaItem ) {\n                        $scope.media = mediaItem;\n                        $scope.view.busyMedia = false;\n                        $scope.setVideo();\n                        $scope.view.mediaLoaded = true;\n                    },\n                    function() {\n                        $scope.view.busyMedia = false;\n                    }\n                );\n            };\n\n            $scope.showErrors = function() {\n                return editor.stepGet('step4', 'submitted');\n            };\n\n            $scope.previousStep = function() {\n                $state.go( 'campaigns.' + editor.mode() + '.step3' );\n            };\n\n            $scope.nextStep = function() {\n\n                editor.stepSet('step4', 'submitted', true);\n\n                if ( $scope.form1.$valid ) {\n\n                    editor.stepSet('step4', 'valid', true);\n                    editor.dataSet('media', $scope.media);\n\n                    editor.save('step4').then(\n                        function(){\n                            $state.go( 'campaigns.' + editor.mode() + '.step5' );\n                        },\n                        function( response ){\n                            errorHandler.processApiResponse( response );\n                        }\n                    );\n\n                } else {\n                    editor.stepSet('step4', 'valid', false);\n                }\n            };\n\n            $scope.logControllerData = function() {\n                console.log('campaignEditorStep1Ctrl - media', angular.copy( $scope.media ) );\n            };\n\n            init();\n\n        }]);\n})();\n","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'campaignEditorStep5Ctrl', [\n            '$scope',\n            '$state',\n            'utils',\n            '$modal',\n            'errorHandler',\n            'campaignsService',\n            'campaignEditorService',\n            'productsService',\n        function (\n            $scope,\n            $state,\n            utils,\n            $modal,\n            errorHandler,\n            campaignsService,\n            campaignEditorService,\n            productsService\n        ) {\n\n            var editor = campaignEditorService;\n\n            $scope.fieldHasError = utils.fieldHasError;\n            $scope.urlRegex = utils.urlRegex();\n\n            $scope.products = [];\n            $scope.recommendedProducts = [];\n\n            $scope.carouselOptions = {\n                nav: true,\n                dots: false,\n                navText: ['<span class=\"glyphicon glyphicon-chevron-left\"></span>','<span class=\"glyphicon glyphicon-chevron-right\"></span>'],\n                navRewind: false,\n                loop: false,\n                items: 4\n            };\n\n            var init = function() {\n\n                if (\n                    ! editor.stepGet('step1', 'valid') ||\n                    ! editor.stepGet('step2', 'valid') ||\n                    ! editor.stepGet('step3', 'valid') ||\n                    ! editor.stepGet('step4', 'valid')\n                ) {\n                    $state.go( editor.previousState() );\n                }\n\n                editor.currentStep('step5');\n                editor.previousState( 'campaigns.' + editor.mode() + '.step5' );\n\n                $scope.products = editor.dataGet('products');\n\n                productsService.getProducts({ limit: 16, offset: 0, ordering: '-last_used_date' }).then(\n                    function( products ) {\n                        $scope.recommendedProducts = products.items;\n                    }\n                );\n\n                $scope.view = {\n                    busy: false,\n                    submitted: false\n                };\n            };\n\n            $scope.hasProducts = function() {\n                return ! _.isEmpty( $scope.products );\n            };\n\n            $scope.showErrors = function() {\n                return editor.stepGet('step5', 'submitted');\n            };\n\n            $scope.skipStep = function() {\n                editor.stepSet('step5', 'submitted', true);\n                editor.stepSet('step5', 'valid', true);\n                $state.go( 'campaigns.' + editor.mode() + '.step6' );\n            };\n\n            $scope.previousStep = function() {\n                $state.go( 'campaigns.' + editor.mode() + '.step4' );\n            };\n\n            $scope.nextStep = function() {\n\n                editor.stepSet('step5', 'submitted', true);\n\n                if ( $scope.form1.$valid ) {\n\n                    editor.stepSet('step5', 'valid', true);\n                    editor.dataSet('products', $scope.products);\n\n                    editor.save('step5').then(\n                        function(){\n                            $state.go( 'campaigns.' + editor.mode() + '.step6' );\n                        },\n                        function( response ){\n                            errorHandler.processApiResponse( response );\n                        }\n                    );\n\n                } else {\n                    editor.stepSet('step5', 'valid', false);\n                }\n            };\n\n            $scope.selectRecommendedProduct = function( selectedProduct ) {\n\n                // var index = _.findIndex( $scope.recommendedProducts, function( product ) { return  product.id == selectedProduct.id });\n                // console.log('index', index);\n                // $scope.recommendedProducts.splice( index, 1 )\n\n                $scope.products.unshift( selectedProduct );\n            };\n\n            $scope.showProductsLibrary = function() {\n                var options = {\n                    submit: function( selectedProduct ) {\n                        $scope.products.unshift( selectedProduct );\n                    }\n                };\n                $modal({\n                    templateUrl: '/panel-module/components/producstLibraryModal/modalTmpl.html',\n                    controller: 'producstLibraryModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    resolve: {\n                        modalOptions: function() {\n                            return options;\n                        }\n                    }\n                });\n            };\n\n            $scope.showNewProductDialog = function() {\n                var options = {\n                    mode: 'campaignEditor',\n                    submit: function( newProduct ) {\n                        console.log(\"newProduct\",newProduct);\n                        $scope.products.unshift( newProduct );\n                    }\n                };\n                $modal({\n                    templateUrl: '/panel-module/components/newProductModal/modalTmpl.html',\n                    controller: 'newProductModalCtrl',\n                    animation: 'am-fade-and-scale',\n                    backdrop: 'static',\n                    resolve: {\n                        modalOptions: function() {\n                            return options;\n                        }\n                    }\n                });\n            };\n\n            $scope.removeProduct = function( index ) {\n                $scope.products.splice(index, 1);\n                return;\n            };\n\n            $scope.logControllerData = function() {\n                console.log('campaignEditorStep1Ctrl - products', angular.copy( $scope.products ) );\n                return;\n            };\n\n            init();\n        }]);\n})();","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .controller( 'campaignEditorStep6Ctrl', [\n            '$scope',\n            '$state',\n            '$sce',\n            'utils',\n            '$modal',\n            'campaignsService',\n            'campaignEditorService',\n            'errorHandler',\n        function (\n            $scope,\n            $state,\n            $sce,\n            utils,\n            $modal,\n            campaignsService,\n            campaignEditorService,\n            errorHandler\n        ) {\n\n            var editor = campaignEditorService;\n\n            $scope.videogularApi = null;\n\n            $scope.campaign = {};\n            $scope.media = {};\n            $scope.products = [];\n            $scope.videogular = { sources: [] };\n\n            $scope.view = {\n                loading: true,\n                playerReady: false,\n                videoSet: false\n            };\n\n            var init = function() {\n\n                if (\n                    ! editor.stepGet('step1', 'valid') ||\n                    ! editor.stepGet('step2', 'valid') ||\n                    ! editor.stepGet('step3', 'valid') ||\n                    ! editor.stepGet('step4', 'valid') ||\n                    ! editor.stepGet('step5', 'valid')\n                ) {\n                    $state.go( editor.previousState() );\n                }\n\n                editor.currentStep('step6');\n                editor.previousState( 'campaigns.' + editor.mode() + '.step6' );\n\n                $scope.campaignId = editor.dataGet( 'campaignId' );\n\n                $scope.view.loading = true;\n\n                campaignsService.getCampaign( $scope.campaignId ).then(\n                    function( campaign ){\n\n                        $scope.campaign = campaign;\n\n                        if ( campaign.media.length > 0 && typeof campaign.media[0] === 'object' ) {\n                            $scope.media = campaign.media[0];\n                        }\n\n                        if ( campaign.products.length > 0 ) {\n                            $scope.products = campaign.products;\n                        }\n\n                        $scope.view.loading = false;\n                    },\n                    function( response ) {\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n\n            };\n\n            $scope.onPlayerReady = function( API ) {\n                $scope.videogularApi = API;\n                $scope.view.playerReady = true;\n                $scope.setVideo();\n            };\n\n            $scope.setVideo = function() {\n                $scope.videogularApi.stop();\n                $scope.videogular.sources = [\n                    {src: $sce.trustAsResourceUrl($scope.media.video), type: \"video/mp4\"}\n                ];\n                $scope.view.videoSet = true;\n            };\n\n            $scope.previousStep = function() {\n                $state.go( 'campaigns.' + editor.mode() + '.step5' );\n            };\n\n            $scope.finish = function() {\n                campaignsService.setPrepared( $scope.campaignId ).then(\n                    function( response ) {\n                        $state.go('campaigns');\n                    },\n                    function( response ) {\n                        errorHandler.processApiResponse( response );\n                    }\n                );\n            };\n\n            $scope.hasProducts = function() {\n                return ( $scope.products.length > 0 ) ? true : false;\n            };\n\n            $scope.logControllerData = function() {\n                console.log('campaignEditorStep1Ctrl - media', angular.copy( $scope.campaign ), angular.copy( $scope.media ), angular.copy( $scope.products ) );\n            };\n\n            init();\n        }]);\n})();","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .factory('permissionsService', [\n            'statePermissions',\n            'authService',\n        function(\n            statePermissions,\n            authService\n        ) {\n\n            var userHasAccess = function( stateName ) {\n                var usertype = authService.getUsertype();\n                return _.contains( statePermissions[usertype], stateName );\n            };\n\n            return {\n                userHasAccess: userHasAccess\n            };\n        }]);\n\n})();\n","(function(){\n    'use strict';\n\n    angular.module('panelApp')\n        .factory('campaignEditorService', [\n                '$q',\n                'campaignsService',\n                'clientsService',\n                'productsService',\n            function(\n                $q,\n                campaignsService,\n                clientsService,\n                productsService\n        ) {\n\n            var view = {};\n            var data = {};\n            var flags = {};\n\n            var init = function( campaignId ) {\n\n                view = {\n                    currentStep: 'step1',\n                    previousState: 'campaigns.new.step1',\n                    'step1': {\n                        valid: false,\n                        submitted: false\n                    },\n                    'step2': {\n                        valid: false,\n                        submitted: false\n                    },\n                    'step3': {\n                        valid: false,\n                        submitted: false\n                    },\n                    'step4': {\n                        valid: false,\n                        submitted: false\n                    },\n                    'step5': {\n                        valid: false,\n                        submitted: false\n                    },\n                    'step6': {\n                        valid: false,\n                        submitted: false\n                    }\n                };\n\n                data = {\n                    campaignId: undefined,\n                    campaign: {\n                        name: undefined,\n                        start_date: undefined,\n                        end_date: undefined,\n                        budget: undefined\n                    },\n                    targeting: {},\n                    media: {},\n                    products: []\n                };\n\n                flags = {\n                    mode: 'new',\n                    campaignLoaded: false\n                };\n\n                if ( typeof campaignId !== 'undefined' ) {\n                    flag( 'mode', 'edit' );\n                    dataSet( 'campaignId', campaignId );\n                }\n            };\n\n            var mode = function() {\n                return flags.mode;\n            };\n\n            var flag = function( name, val ) {\n                if ( typeof val !== 'undefined' ) {\n                    flags[name] = val;\n                } else {\n                    if ( typeof flags[name] !== 'undefined' ) {\n                        return flags[name];\n                    } else {\n                        return false;\n                    }\n                }\n            };\n\n            var currentStep = function( step ) {\n                if ( typeof step === 'string' ) {\n                    view.currentStep = step;\n                } else {\n                    return view.currentStep;\n                }\n            };\n\n            var previousState = function( state ) {\n                if ( typeof state === 'string' ) {\n                    view.previousState = state;\n                } else {\n                    return view.previousState;\n                }\n            };\n\n            var stepGet = function( step, prop ) {\n                if ( typeof step !== 'string' ) {\n                    return false;\n                }\n                if ( typeof prop === 'string' ) {\n                    return angular.copy( view[step][prop] );\n                }\n                return angular.copy( view[step] );\n            };\n\n            var stepSet = function( step, prop, val ) {\n                if ( typeof step !== 'string' || typeof prop !== 'string' || typeof val === 'undefined' ) {\n                    return false;\n                }\n                view[step][prop] = val;\n                return stepGet( step );\n            };\n\n            var dataGet = function( prop ) {\n                if ( typeof prop !== 'undefined' ) {\n                    if ( typeof data[prop] !== 'undefined' ) {\n                        return angular.copy( data[prop] );\n                    } else {\n                        return false;\n                    }\n                }\n                return angular.copy( data );\n            };\n\n            var dataSet = function( prop, val ) {\n                if ( typeof prop !== 'string' || typeof val === 'undefined' ) {\n                    return false;\n                }\n                data[prop] = val;\n                return dataGet();\n            };\n\n            var save = function( step ) {\n                if ( step === 'step1' ) {\n                    return saveStep1();\n                } else if ( step === 'step2' ) {\n                    return saveStep2();\n                } else if ( step === 'step3' ) {\n                    return saveStep3();\n                } else if ( step === 'step4' ) {\n                    return saveStep4();\n                } else if ( step === 'step5' ) {\n                    return saveStep5();\n                }\n            };\n\n            var saveStep1 = function() {\n\n                var deferred = $q.defer();\n\n                var campaign = dataGet( 'campaign' );\n\n                saveCampagin( deferred );\n\n                return deferred.promise;\n            };\n\n            var saveCampagin = function( deferred ) {\n\n                var campaign = dataGet( 'campaign' );\n\n                var campaignData = {\n                    name: campaign.name,\n                    start_date: campaign.start_date,\n                    end_date: campaign.end_date,\n                    budget: campaign.budget\n                };\n\n                if ( dataGet( 'campaignId' ) ) {\n                    campaignData.id = dataGet( 'campaignId' );\n                }\n\n                campaignsService.saveCampagin( campaignData ).then(\n                    function( campaign ) {\n                        dataSet( 'campaignId', campaign.id );\n                        deferred.resolve( dataGet('campaign') );\n                    },\n                    function( response ) {\n                        deferred.reject( response );\n                    }\n                );\n            };\n\n            var saveStep2 = function() {\n\n                var deferred = $q.defer();\n\n                saveCampagin( deferred );\n\n                return deferred.promise;\n            };\n\n            var saveStep3 = function() {\n\n                var deferred = $q.defer();\n\n                saveCampagin( deferred );\n\n                return deferred.promise;\n            };\n\n            var saveStep4 = function() {\n\n                var deferred = $q.defer();\n\n                var media = dataGet( 'media' );\n\n                var mediaData = {\n                    campaignId: dataGet( 'campaignId' ),\n                    media: media.id,\n                    media_title:  media.media_title,\n                    media_description:  media.media_description\n                };\n\n                campaignsService.saveMedia( mediaData ).then(\n                    function() {\n                        //dataSet( 'campaignId', campaign.id );\n                        deferred.resolve();\n                    },\n                    function( response ) {\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var saveStep5 = function() {\n\n                var deferred = $q.defer();\n\n                var campaignId = dataGet( 'campaignId' );\n                var products = dataGet( 'products' );\n\n                productsService.updateProducts( products ).then(\n                    function() {\n                        campaignsService.saveProducts( campaignId, products ).then(\n                            function( campaign ) {\n                                deferred.resolve( campaign );\n                            },\n                            function( response ) {\n                                deferred.reject( response );\n                            }\n                        );\n                    },\n                    function( response ) {\n                        deferred.reject( response );\n                    }\n                );\n\n\n                return deferred.promise;\n            };\n\n            var logData = function(){\n                console.log('campaignEditorService - data', angular.copy( data ) );\n            };\n\n            return {\n                init: init,\n                flag: flag,\n                mode: mode,\n                save: save,\n                currentStep: currentStep,\n                previousState: previousState,\n                stepGet: stepGet,\n                stepSet: stepSet,\n                dataGet: dataGet,\n                dataSet: dataSet,\n                logData: logData\n            };\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('panelApp')\n        .factory('campaignsService', [ '$q', 'apiService', function( $q, apiService ) {\n\n            var getCampaigns = function( params ) {\n\n                var deferred = $q.defer();\n\n                var requestParams = {\n                    limit: 10,\n                    offset: 0,\n                    ordering: '-id'\n                };\n\n                if ( typeof params === 'object' ) {\n                    if ( 'limit' in params ) {\n                        requestParams.limit = params.limit;\n                    }\n                    if ( 'offset' in params ) {\n                        requestParams.offset = params.offset;\n                    }\n                    if ( 'ordering' in params ) {\n                        requestParams.ordering = params.ordering;\n                    }\n                    if ( 'name' in params ) {\n                        requestParams.name = params.name;\n                    }\n                    if ( 'client' in params ) {\n                        requestParams.client = params.client;\n                    }\n                    if ( 'media_title' in params ) {\n                        requestParams.media_title = params.media_title;\n                    }\n                    if ( 'start_date' in params ) {\n                        requestParams.start_date = params.start_date;\n                    }\n                    if ( 'end_date' in params ) {\n                        requestParams.end_date = params.end_date;\n                    }\n                    if ( 'status' in params ) {\n                        requestParams.status = params.status;\n                    }\n                }\n\n                apiService.get( '/campaigns/', requestParams, true ).then(\n                    function( response ) {\n                        console.log('getCampaigns() success', response);\n                        deferred.resolve({\n                            count: response.count,\n                            items: response.results\n                        });\n                    },\n                    function( response ) {\n                        console.log('getCampaigns() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var getCampaign = function( campaignId ) {\n\n                var deferred = $q.defer();\n\n                apiService.get( '/campaigns/' + campaignId + '/', false, true ).then(\n                    function( response ) {\n                        console.log('getCampaign() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('getCampaign() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var deleteCampaign = function( campaignId ) {\n\n                var deferred = $q.defer();\n\n                apiService.delete( '/campaigns/' + campaignId + '/', false, true ).then(\n                    function( response ) {\n                        console.log('deleteCampaign() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('deleteCampaign() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var stopCampaign = function( campaignId ) {\n                return changeCampaignStatus( campaignId, 5 );\n            };\n\n            var startCampaign = function( campaignId ) {\n                return changeCampaignStatus( campaignId, 3 );\n            };\n\n            var setPrepared = function( campaignId ) {\n                return changeCampaignStatus( campaignId, 2 );\n            };\n\n            var changeCampaignStatus = function( campaignId, status ) {\n\n                var deferred = $q.defer();\n\n                var data = { status: status };\n\n                apiService.put( '/campaigns/' + campaignId + '/status/', data, true ).then(\n                    function( response ) {\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var saveCampagin = function( campaign ) {\n\n                var deferred = $q.defer();\n\n                if ( typeof campaign.id === 'undefined' ) {\n                    apiService.post( '/campaigns/', campaign, true ).then(\n                        function( response ) {\n                            console.log('saveCampaign() success', response);\n                            deferred.resolve( response );\n                        },\n                        function( response ) {\n                            console.log('saveCampaign() failure', response);\n                            deferred.reject( response );\n                        }\n                    );\n                } else {\n                    apiService.patch( '/campaigns/' + campaign.id + '/', campaign, true ).then(\n                        function( response ) {\n                            console.log('saveCampaign() success', response);\n                            deferred.resolve( response );\n                        },\n                        function( response ) {\n                            console.log('saveCampaign() failure', response);\n                            deferred.reject( response );\n                        }\n                    );\n                }\n\n\n                return deferred.promise;\n            };\n\n            var saveMedia = function( data ) {\n\n                var deferred = $q.defer();\n\n                var campaignId = data.campaignId;\n                delete data.campaignId;\n\n                apiService.patch( '/campaigns/' + campaignId + '/media/', data, true ).then(\n                    function( response ) {\n                        console.log('saveMedia() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('saveMedia() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var saveProducts = function( campaignId, products ) {\n\n                var deferred = $q.defer();\n\n                var productsData = {\n                    products: []\n                };\n\n                angular.forEach( products, function( product ){\n                    productsData.products.push( product.id );\n                });\n\n                apiService.patch( '/campaigns/' + campaignId + '/products/', productsData, true ).then(\n                    function( response ) {\n                        console.log('saveProducts() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('saveProducts() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var getTargetingLocations = function( selectedLocations ) {\n\n                var deferred = $q.defer();\n\n                apiService.get( '/countries/', null, true ).then(\n                    function( response ) {\n\n                        var allLocations = true;\n                        var locations = [];\n\n                        angular.forEach( response, function( name, id ){\n\n                            id = parseInt( id );\n                            var item = { id: id, name: name, selected: true };\n\n                            if ( typeof selectedLocations !== 'undefined'  && selectedLocations.indexOf( id ) === -1 ) {\n                                item.selected = false;\n                                allLocations = false;\n                            }\n\n                            locations.push( item );\n                        });\n\n                        deferred.resolve({\n                            allLocations: allLocations,\n                            locations: locations\n                        });\n                    },\n                    function( response ) { deferred.reject( response ); }\n                );\n\n                return deferred.promise;\n            };\n\n            var getTargetingCategories = function( selectedCategories ) {\n\n                var deferred = $q.defer();\n\n                apiService.get( '/campaigns/categories/', null, true ).then(\n                    function( response ) {\n\n                        var allCategories = true;\n                        var categories = [];\n\n                        angular.forEach( response, function( name, id ){\n\n                            id = parseInt( id );\n                            var item = { id: id, name: name, selected: true };\n\n                            if ( typeof selectedCategories !== 'undefined' && selectedCategories.indexOf( id ) === -1 ) {\n                                item.selected = false;\n                                allCategories = false;\n                            }\n\n                            categories.push( item );\n                        });\n\n                        deferred.resolve({\n                            allCategories: allCategories,\n                            categories: categories\n                        });\n                    },\n                    function( response ) { deferred.reject( response ); }\n                );\n\n                return deferred.promise;\n            };\n\n            var getAgeRanges = function() {\n                return [\n                    { value: 0, label: 'Any' },\n                    { value: 2130, label: '21 - 30' },\n                    { value: 3145, label: '31 - 45' },\n                    { value: 4660, label: '46 - 60' },\n                    { value: 6180, label: '61 - 80' }\n                ];\n            };\n\n            var getTargeting = function( campaignId ) {\n\n                var deferred  = $q.defer();\n                var deferred1 = $q.defer();\n                var deferred2 = $q.defer();\n\n                var promisses = [\n                    deferred1.promise,\n                    deferred2.promise\n                ];\n\n                var data = {\n                    gender: {},\n                    os: {}\n                };\n\n                if ( typeof campaignId === 'undefined' ) {\n\n                    getTargetingCategories().then(\n                        function( response ) {\n                            data.allCategories = response.allCategories;\n                            data.categories    = response.categories;\n                            deferred1.resolve();\n                        },\n                        function( response ) { deferred1.reject( response ); }\n                    );\n\n                    getTargetingLocations().then(\n                        function( response ) {\n                            data.allLocations = response.allLocations;\n                            data.locations    = response.locations;\n                            deferred2.resolve();\n                        },\n                        function( response ) { deferred2.reject( response ); }\n                    );\n\n                    $q.all( promisses ).then(\n                        function() {\n                            data.gender = { male: true, female: true };\n                            data.os = { android: true, ios: true };\n                            data.ageRanges = getAgeRanges();\n                            data.ageRange = data.ageRanges[0];\n                            deferred.resolve( data );\n                        },\n                        function( response ) { deferred.reject( response ); }\n                    );\n\n                } else {\n\n                    apiService.get( '/campaigns/' + campaignId + '/targeting_options/', false, true ).then(\n                        function( targetingData ) {\n\n                            getTargetingCategories( targetingData.app_categories ).then(\n                                function( response ) {\n                                    data.allCategories = response.allCategories;\n                                    data.categories    = response.categories;\n                                    deferred1.resolve();\n                                },\n                                function( response ) { deferred1.reject( response ); }\n                            );\n\n                            getTargetingLocations( targetingData.location ).then(\n                                function( response ) {\n                                    data.allLocations = response.allLocations;\n                                    data.locations    = response.locations;\n                                    deferred2.resolve();\n                                },\n                                function( response ) { deferred2.reject( response ); }\n                            );\n\n                            $q.all( promisses ).then(\n                                function() {\n\n                                    // gender: 'F', 'M', 'A' (M+F)\n                                    data.gender.male   = ( targetingData.gender === 'M' || targetingData.gender === 'A' ) ? true : false;\n                                    data.gender.female = ( targetingData.gender === 'F' || targetingData.gender === 'A' ) ? true : false;\n\n                                    // os: 0 - any, 1 - android, 2 - ios\n                                    data.os.android = ( targetingData.os === 1 || targetingData.os === 0 ) ? true : false;\n                                    data.os.ios     = ( targetingData.os === 2 || targetingData.os === 0 ) ? true : false;\n\n                                    // Age ranges\n                                    data.ageRanges = getAgeRanges();\n\n                                    if ( targetingData.age_range.length > 1 ) {\n                                        data.ageRange = data.ageRanges[0];\n                                    } else {\n                                        var selectedAgeRange = targetingData.age_range[0];\n                                        data.ageRange = _.findWhere( data.ageRanges, { value: selectedAgeRange } );\n                                    }\n\n                                    deferred.resolve( data );\n                                },\n                                function( response ) { deferred.reject( response ); }\n                            );\n                        },\n                        function( response ) { deferred.reject( response ); }\n                    );\n                }\n\n\n                return deferred.promise;\n            };\n\n            var saveTargeting = function( campaignId, settings ) {\n\n                var deferred = $q.defer();\n                var data = {};\n                var error = {\n                    validationErrors: {}\n                };\n\n                // Operating system\n                if ( settings.os.android === true && settings.os.ios === true ) {\n                    data.os = 0;\n                } else if ( settings.os.android === true ) {\n                    data.os = 1;\n                } else if ( settings.os.ios === true ) {\n                    data.os = 2;\n                } else {\n                    error.validationErrors.os = true;\n                }\n\n                // Gender\n                if ( settings.gender.male === true && settings.gender.female === true ) {\n                    data.gender = 'A';\n                } else if ( settings.gender.male === true ) {\n                    data.gender = 'M';\n                } else if ( settings.gender.female === true ) {\n                    data.gender = 'F';\n                } else {\n                    error.validationErrors.gender = true;\n                }\n\n                // Age range\n                if ( settings.ageRange.value === 0 ) {\n                    data.age_range = [];\n                    angular.forEach( getAgeRanges(), function( range ){\n                        if ( range.value !== 0 ) {\n                            data.age_range.push( range.value );\n                        }\n                    });\n                } else {\n                    data.age_range = [ settings.ageRange.value ];\n                }\n\n                // Locations\n                data.location = [];\n                angular.forEach( settings.locations, function( location ){\n                    if ( settings.allLocations === true || location.selected === true ) {\n                        data.location.push( location.id );\n                    }\n                });\n                if ( data.location.length === 0 ) {\n                    error.validationErrors.locations = true;\n                }\n\n                // Categories\n                data.app_categories = [];\n                angular.forEach( settings.categories, function( category ){\n                    if ( settings.allCategories === true || category.selected === true ) {\n                        data.app_categories.push( category.id );\n                    }\n                });\n                if ( data.app_categories.length === 0 ) {\n                    error.validationErrors.categories = true;\n                }\n\n                if ( _.isEmpty( error.validationErrors ) ) {\n                    // Save data in the backend\n                    apiService.put( '/campaigns/' + campaignId + '/targeting_options/', data, true ).then(\n                        function( response ) { deferred.resolve( response ); },\n                        function( response ) { deferred.reject( response ); }\n                    );\n                } else {\n                    deferred.reject( error );\n                }\n\n                return deferred.promise;\n            };\n\n            var getEstimatedViews = function( campaignId, cpv ) {\n\n                var deferred = $q.defer();\n                var requestParams = {};\n\n                if ( typeof cpv !== 'undefined' ) {\n                    requestParams.cpv = cpv;\n                }\n\n                apiService.get( '/campaigns/' + campaignId + '/estimated_views/', requestParams, true ).then(\n                    function( response ) {\n                        console.log('getEstimatedViews() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('getEstimatedViews() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var getCampaignBudget = function( campaignId ) {\n\n                var deferred = $q.defer();\n\n                apiService.get( '/campaigns/' + campaignId + '/budget/', null, true ).then(\n                    function( response ) {\n                        console.log('getCampaignBudget() success', response);\n                        // deferred.resolve( response );\n                        // Temporary workaround until the endpoint is fixed (shouldn't have pagination)\n                        deferred.resolve( response.results[0] );\n                    },\n                    function( response ) {\n                        console.log('getCampaignBudget() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var saveCampaignBudget = function( campaignId, data, hasBudget, budgetId ) {\n\n                var deferred = $q.defer();\n\n                if ( hasBudget ) {\n                    apiService.put( '/campaigns/' + campaignId + '/budget/' + budgetId + '/', data, true ).then(\n                        function( response ) {\n                            console.log('saveCampaignBudget() success', response);\n                            deferred.resolve( response );\n                        },\n                        function( response ) {\n                            console.log('saveCampaignBudget() failure', response);\n                            deferred.reject( response );\n                        }\n                    );\n                } else {\n                    apiService.post( '/campaigns/' + campaignId + '/budget/', data, true ).then(\n                        function( response ) {\n                            console.log('saveCampaignBudget() success', response);\n                            deferred.resolve( response );\n                        },\n                        function( response ) {\n                            console.log('saveCampaignBudget() failure', response);\n                            deferred.reject( response );\n                        }\n                    );\n                }\n\n                return deferred.promise;\n            };\n\n            var campaignHasBudget = function( campaignId ) {\n\n                var deferred = $q.defer();\n\n                apiService.get( '/campaigns/' + campaignId + '/budget/', null, true ).then(\n                    function( response ) {\n                        console.log('campaignHasBudget() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('getCampaignBudget() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            return {\n                getCampaigns: getCampaigns,\n                getCampaign: getCampaign,\n                saveCampagin: saveCampagin,\n                deleteCampaign: deleteCampaign,\n                saveProducts: saveProducts,\n                saveMedia: saveMedia,\n                stopCampaign: stopCampaign,\n                startCampaign: startCampaign,\n                setPrepared: setPrepared,\n                saveTargeting: saveTargeting,\n                getTargeting: getTargeting,\n                getEstimatedViews: getEstimatedViews,\n                getCampaignBudget: getCampaignBudget,\n                saveCampaignBudget: saveCampaignBudget\n            };\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('panelApp')\n        .factory('clientsService', [ '$q', 'apiService', function( $q, apiService ) {\n\n            var getClients = function() {\n\n                var deferred = $q.defer();\n\n                apiService.get( '/clients/', false, true ).then(\n                    function( response ) {\n                        console.log('getClients() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('getClients() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var saveClient = function( name ) {\n\n                var deferred = $q.defer();\n\n                var data = { name: name };\n\n                apiService.post( '/clients/', data, true ).then(\n                    function( client ) {\n                        console.log('saveClient() success', client);\n                        getClients().then(\n                            function( clients ) {\n                                deferred.resolve( client, clients );\n                            },\n                            function( response ) {\n                                deferred.reject( response );\n                            }\n                        );\n                    },\n                    function( response ) {\n                        console.log('saveClient() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            return {\n                getClients: getClients,\n                saveClient: saveClient\n            };\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('panelApp')\n        .factory('mediaService', [ '$q', 'apiService', function( $q, apiService ) {\n\n            var getMedia = function( params ) {\n\n                var deferred = $q.defer();\n\n                var requestParams = {\n                    limit: 6,\n                    offset: 0,\n                    ordering: 'name'\n                };\n\n                if ( typeof params === 'object' ) {\n                    if ( 'limit' in params ) {\n                        requestParams.limit = params.limit;\n                    }\n                    if ( 'offset' in params ) {\n                        requestParams.offset = params.offset;\n                    }\n                    if ( 'ordering' in params ) {\n                        requestParams.ordering = params.ordering;\n                    }\n                    if ( 'name' in params ) {\n                        requestParams.name = params.name;\n                    }\n                }\n\n                apiService.get( '/media/', requestParams, true ).then(\n                    function( response ) {\n                        console.log('getMedia() success', response);\n                        deferred.resolve({\n                            count: response.count,\n                            items: response.results\n                        });\n                    },\n                    function( response ) {\n                        console.log('getMedia() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var getMediaItem = function( mediaId ) {\n\n                var deferred = $q.defer();\n\n                apiService.get( '/media/'+mediaId+'/', false, true ).then(\n                    function( response ) {\n                        console.log('getMediaItem() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('getMediaItem() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var deleteMedia = function( mediaId ) {\n\n                var deferred = $q.defer();\n\n                apiService.delete( '/media/'+mediaId+'/', false, true ).then(\n                    function( response ) {\n                        console.log('deleteMedia() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('deleteMedia() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var createMedia = function( mediaName ) {\n\n                var deferred = $q.defer();\n\n                var data = { name: mediaName };\n\n                apiService.post( '/media/', data, true ).then(\n                    function( response ) {\n                        console.log('getMediaItem() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('getMediaItem() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var updateMedia = function( mediaItem ) {\n\n                var deferred = $q.defer();\n\n                var data = {\n                    name: mediaItem.name\n                };\n\n                apiService.patch( '/media/' + mediaItem.id + '/', data, true ).then(\n                    function( response ) {\n                        console.log('updateMedia() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('updateMedia() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var imageSizeHelper = function( imageFile ) {\n\n                var deferred = $q.defer();\n\n                var reader = new FileReader();\n                reader.readAsDataURL( imageFile );\n                reader.onload = function (e) {\n                    var image = new Image();\n                    image.src = e.target.result;\n                    image.onload = function () {\n                        deferred.resolve({\n                            width: this.width,\n                            height: this.height\n                        });\n                    };\n                };\n\n                return deferred.promise;\n            };\n\n            var imageSizeValid = function( width, height ) {\n                if ( width !== 1280 ) {\n                    return false;\n                }\n                if ( height !== 1200 ) {\n                    return false;\n                }\n                return true;\n            };\n\n            return {\n                getMedia: getMedia,\n                getMediaItem: getMediaItem,\n                deleteMedia: deleteMedia,\n                createMedia: createMedia,\n                updateMedia: updateMedia,\n                imageSizeHelper: imageSizeHelper,\n                imageSizeValid: imageSizeValid\n            };\n        }]);\n})();","(function() {\n    'use strict';\n\n    angular.module('panelApp')\n        .factory('productsService', ['$http', '$q', 'apiService', function($http, $q, apiService) {\n\n            var getProducts = function(params) {\n\n                var deferred = $q.defer();\n\n                var requestParams = {\n                    limit: 6,\n                    offset: 0,\n                    ordering: 'title'\n                };\n\n                if (typeof params === 'object') {\n                    if ('limit' in params) {\n                        requestParams.limit = params.limit;\n                    }\n                    if ('offset' in params) {\n                        requestParams.offset = params.offset;\n                    }\n                    if ('ordering' in params) {\n                        requestParams.ordering = params.ordering;\n                    }\n                    if ('title' in params) {\n                        requestParams.title = params.title;\n                    }\n                }\n\n                apiService.get('/products/', requestParams, true).then(\n                    function( response ) {\n                        console.log('getProducts() success', response);\n                        deferred.resolve({\n                            count: response.count,\n                            items: response.results\n                        });\n                    },\n                    function( response ) {\n                        console.log('getProducts() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var getProduct = function(productId) {\n\n                var deferred = $q.defer();\n\n                apiService.get('/products/' + productId + '/', false, true).then(\n                    function( response ) {\n                        console.log('getProduct() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('getProduct() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var searchExternalProducts = function(params) {\n\n                var deferred = $q.defer();\n\n                $http({\n                    url: 'http://search.ulab.com/wrapper/get_data',\n                    method: \"POST\",\n                    data: {\n                        url: \"http://staging.shopide.com/api/v1/products?search=\" + encodeURIComponent( params.search ) + \"&page=\" + params.page + \"&per=\" + params.per,\n                        type: \"GET\"\n                    },\n                    headers: {\n                        Accept: 'application/vnd.ulab.v0+json'\n                    }\n                }).then(\n                    function( response ) {\n                        console.log('searchExternalProducts() success', response);\n                        deferred.resolve( JSON.parse( response.data.data ) );\n                    },\n                    function( response ) {\n                        console.log('searchExternalProducts() failure', response );\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var deleteProduct = function(productId) {\n\n                var deferred = $q.defer();\n\n                apiService.delete('/products/' + productId + '/', false, true).then(\n                    function( response ) {\n                        console.log('deleteProduct() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('deleteProduct() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var updateProduct = function(product) {\n\n                var deferred = $q.defer();\n\n                var data = {\n                    title: product.title,\n                    url: product.url,\n                    price: product.price,\n                    description: product.description\n                };\n\n                if ( data.url.match(/^http[s]?:\\/\\//i) === null ) {\n                    data.url = 'http://' + data.url;\n                }\n\n                apiService.patch('/products/' + product.id + '/', data, true).then(\n                    function( response ) {\n                        console.log('updateProduct() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('updateProduct() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var updateProducts = function(products) {\n\n                var deferred = $q.defer();\n\n                var promisses = [];\n\n                angular.forEach(products, function(product) {\n\n                    var prodDeferred = $q.defer();\n\n                    promisses.push(prodDeferred.promise);\n\n                    updateProduct(product).then(\n                        function( response ) {\n                            prodDeferred.resolve( response );\n                        },\n                        function( response ) {\n                            prodDeferred.reject( response );\n                        }\n                    );\n                });\n\n                $q.all(promisses).then(function() {\n                    deferred.resolve();\n                });\n\n                return deferred.promise;\n            };\n\n            var createProductFromExternal = function( product ) {\n\n              var deferred = $q.defer();\n\n              var data = {\n                  title: product.title,\n                  description: product.description,\n                  price: product.price,\n                  image_url: product.image_url,\n                  url: product.url,\n                  external_id: product.external_id,\n                  product: product.external_id + '.png'\n              };\n\n              if ( data.url.match(/^http[s]?:\\/\\//i) === null ) {\n                  data.url = 'http://' + data.url;\n              }\n\n              apiService.post('/products/', data, true).then(\n                  function( response ) {\n                      console.log('createProductFromExternal() success', response);\n                      deferred.resolve( response );\n                  },\n                  function( response ) {\n                      console.log('createProductFromExternal() failure', response);\n                      deferred.reject( response );\n                  }\n              );\n\n              return deferred.promise;\n            };\n\n            return {\n                getProduct: getProduct,\n                getProducts: getProducts,\n                deleteProduct: deleteProduct,\n                updateProduct: updateProduct,\n                updateProducts: updateProducts,\n                searchExternalProducts: searchExternalProducts,\n                createProductFromExternal: createProductFromExternal\n            };\n        }]);\n})();\n","(function(){\n    'use strict';\n\n    angular.module('panelApp')\n        .factory('applicationsService', [ '$q', 'apiService', 'userService', function( $q, apiService, userService ) {\n\n            var getApps = function( params ) {\n\n                var deferred = $q.defer();\n\n                var requestParams = {\n                    limit: 10,\n                    offset: 0\n                };\n\n                if ( typeof params === 'object' ) {\n                    if ( 'limit' in params ) {\n                        requestParams.limit = params.limit;\n                    }\n                    if ( 'offset' in params ) {\n                        requestParams.offset = params.offset;\n                    }\n                    if ( 'name' in params ) {\n                        requestParams.name = params.name;\n                    }\n                    if ( 'api_key' in params ) {\n                        requestParams.api_key = params.api_key;\n                    }\n                }\n\n                apiService.get( '/applications/', requestParams, true ).then(\n                    function( data ) {\n                        console.log('getApps() success', data);\n                        deferred.resolve({\n                            count: data.count,\n                            items: data.results\n                        });\n                    },\n                    function( response ) {\n                        console.log('getApps() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var deleteApp = function( appId ) {\n\n                var deferred = $q.defer();\n\n                apiService.delete( '/applications/' + appId + '/', false, true ).then(\n                    function( data ) {\n                        console.log('deleteApp() success', data);\n                        deferred.resolve( data );\n                    },\n                    function( response ) {\n                        console.log('deleteApp() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var addApp = function( appName, selectedCategories ) {\n\n                var deferred = $q.defer();\n\n                userService.getUser().then(\n                    function ( user ) {\n\n                        var data = {\n                            name: appName,\n                            publisher: user.id,\n                            app_categories: selectedCategories\n                        };\n\n                        apiService.post( '/applications/', data, true ).then(\n                            function( data ) {\n                                console.log('addApp() success', data);\n                                deferred.resolve( data );\n                            },\n                            function( response ) {\n                                console.log('addApp() failure', response);\n                                deferred.reject( response );\n                            }\n                        );\n                    },\n                    function () {\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var updateApp = function( id, appName, selectedCategories ) {\n\n                var deferred = $q.defer();\n\n                var data = {\n                    name: appName,\n                    app_categories: selectedCategories\n                };\n\n                apiService.patch( '/applications/' + id + '/', data, true ).then(\n                    function( data ) {\n                        console.log('updateApp() success', data);\n                        deferred.resolve( data );\n                    },\n                    function( response ) {\n                        console.log('updateApp() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var getCategories = function( selectedCategories ) {\n\n                var deferred = $q.defer();\n\n                apiService.get( '/campaigns/categories/', null, true ).then(\n                    function( response ) {\n\n                        var categories = [];\n\n                        angular.forEach( response, function( name, id ){\n\n                            id = parseInt( id );\n                            var item = { id: id, name: name, selected: false };\n\n                            if ( typeof selectedCategories !== 'undefined' && selectedCategories.indexOf( id ) !== -1 ) {\n                                item.selected = true;\n                            }\n\n                            categories.push( item );\n                        });\n\n                        deferred.resolve( categories );\n                    },\n                    function( response ) { deferred.reject( response ); }\n                );\n\n                return deferred.promise;\n            };\n\n            return {\n                getApps: getApps,\n                deleteApp: deleteApp,\n                addApp: addApp,\n                updateApp: updateApp,\n                getCategories: getCategories\n            };\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('panelApp')\n        .factory('billingService', [\n            '$q',\n            'apiService',\n            '$timeout',\n            '$http',\n            'apiUrl',\n            'authToken',\n        function(\n            $q,\n            apiService,\n            $timeout,\n            $http,\n            apiUrl,\n            authToken\n        ) {\n\n            var getCards = function() {\n\n                var deferred = $q.defer();\n\n                apiService.get( '/payments/cards/', false, true ).then(\n                    function( response ) {\n                        var cards = response.results;\n                        if ( cards.length > 0 ) {\n                            apiService.get( '/payments/cards/default/', false, true ).then(\n                                function( response ){\n                                    angular.forEach( cards, function( card ){\n                                        card.default = ( card.payment_method_id === response.payment_method_id ) ? true : false;\n                                    });\n                                    deferred.resolve( cards );\n                                },\n                                function( response ){\n                                    angular.forEach( cards, function( card ){\n                                        card.default = false;\n                                    });\n                                    deferred.resolve( cards );\n                                }\n                            );\n                        } else {\n                            deferred.resolve( cards );\n                        }\n                    },\n                    function( response ) {\n                        console.log('getCards() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var addCard = function( data ) {\n\n                var deferred = $q.defer();\n\n                apiService.post( '/payments/cards/', data, true ).then(\n                    function( response ) {\n                        console.log('addCard() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('addCard() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var deleteCard = function( id ) {\n\n                var deferred = $q.defer();\n\n                apiService.delete( '/payments/cards/' + id + '/', false, true ).then(\n                    function( response ) {\n                        console.log('deleteCard() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('deleteCard() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var setMainCard = function( id ) {\n\n                var deferred = $q.defer();\n\n                apiService.post( '/payments/cards/' + id + '/default/', false, true ).then(\n                    function( response ) {\n                        console.log('setMainCard() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('setMainCard() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var getMainCard = function() {\n\n                var deferred = $q.defer();\n\n                apiService.get( '/payments/cards/default/', false, true ).then(\n                    function( response ){\n                        deferred.resolve( response );\n                    },\n                    function( response ){\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var getClientToken = function() {\n\n                var deferred = $q.defer();\n\n                apiService.get( '/payments/cards/client_token/', false, true ).then(\n                    function( response ) {\n                        console.log('getClientToken() success', response);\n                        deferred.resolve( response.client_token );\n                    },\n                    function( response ) {\n                        console.log('getClientToken() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var buyCredits = function( paymentMethodId, credits ) {\n\n                var deferred = $q.defer();\n\n                var data = { credits: credits };\n\n                apiService.post( '/payments/cards/' + paymentMethodId + '/buy_credits/', data, true ).then(\n                    function( response ) {\n                        console.log('buyCredits() success', response);\n                        deferred.resolve( response.client_token );\n                    },\n                    function( response ) {\n                        console.log('buyCredits() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var getTransactions = function( params ) {\n\n                var deferred = $q.defer();\n\n                var requestParams = {\n                    limit: 10,\n                    offset: 0,\n                    ordering: '-id'\n                };\n\n                if ( typeof params === 'object' ) {\n                    if ( 'limit' in params ) {\n                        requestParams.limit = params.limit;\n                    }\n                    if ( 'offset' in params ) {\n                        requestParams.offset = params.offset;\n                    }\n                    if ( 'start_date' in params ) {\n                        requestParams.start_date = params.start_date;\n                    }\n                    if ( 'end_date' in params ) {\n                        requestParams.end_date = params.end_date;\n                    }\n                }\n\n                apiService.get( '/payments/transactions/', requestParams, true ).then(\n                    function( response ) {\n                        console.log('getTransactions() success', response);\n                        deferred.resolve( response );\n                    },\n                    function( response ) {\n                        console.log('getTransactions() failure', response);\n                        deferred.reject( response );\n                    }\n                );\n\n                return deferred.promise;\n            };\n\n            var getInvoicePdf = function( transactionId ) {\n\n                var deferred = $q.defer();\n\n                var request = {\n                    method: 'GET',\n                    responseType: 'blob',\n                    url: apiUrl + '/payments/transactions/' + transactionId + '/invoice/',\n                    headers: {\n                        'Authorization': 'Token ' + authToken.get( true )\n                    }\n                };\n\n                $http( request ).then(\n                    function( response ) {\n                        var blob = new Blob( [ response.data ], { type: 'application/pdf' } );\n                        var link = document.createElement('a');\n                        link.href = window.URL.createObjectURL(blob);\n                        link.download = 'kaching_transaction_' + transactionId + '.pdf';\n                        link.click();\n                        deferred.resolve( response );\n                    },\n                    function( response ) { deferred.reject( response ); }\n                );\n\n                return deferred.promise;\n            };\n\n            return {\n                getCards: getCards,\n                addCard: addCard,\n                deleteCard: deleteCard,\n                setMainCard: setMainCard,\n                getMainCard: getMainCard,\n                getClientToken: getClientToken,\n                buyCredits: buyCredits,\n                getTransactions: getTransactions,\n                getInvoicePdf: getInvoicePdf\n            };\n        }]);\n})();","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .directive(\"siteNav\", function(){\n            return {\n                restrict: 'A',\n                replace: true,\n                templateUrl: kachingAppConfig.mainMenuTmpl\n            };\n        });\n\n})();","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .directive(\"owlCarousel\", function() {\n            return {\n                restrict: 'EA',\n                transclude: false,\n                link: function( scope, element, attrs ) {\n\n                    scope.initCarousel = function() {\n\n                        var defaultOptions = {};\n                        var customOptions = scope.$eval($(element).attr('data-options'));\n\n                        for (var key in customOptions) {\n                            defaultOptions[key] = customOptions[key];\n                        }\n\n                        $(element).owlCarousel(defaultOptions);\n                    };\n                }\n            };\n        });\n\n    angular.module('panelApp')\n        .directive('owlCarouselItem', [function() {\n            return {\n                restrict: 'A',\n                transclude: false,\n                link: function(scope, element) {\n                    // wait for the last item in the ng-repeat then call init\n                    if (scope.$last) {\n                        scope.initCarousel();\n                    }\n                }\n            };\n        }]);\n\n})();","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .directive(\"campaignProduct\", [ 'utils', function( utils ){\n            return {\n                restrict: 'A',\n                scope: {\n                    product: '=campaignProduct',\n                    index: '=productIndex',\n                    showLabels: '=showLabels',\n                    onRemove: '&'\n                },\n                templateUrl: 'panel-module/directives/campaignProduct/campaignProductTmpl.html',\n                controller: ['$scope', function($scope){\n\n                    $scope.urlRegex = utils.urlRegex();\n\n                    $scope.remove = function( index ){\n                        $scope.onRemove({ index: index });\n                    };\n                }]\n            };\n        }]);\n\n})();","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .directive(\"ifmUploaderPreviewImage\", ['$window', '$parse', function( $window, $parse ) {\n            var helper = {\n                support: !!$window.FileReader,\n                isFile: function(item) {\n                    return angular.isObject(item) && item instanceof $window.File;\n                },\n                isImage: function(file) {\n                    var type =  '|' + file.type.slice(file.type.lastIndexOf('/') + 1) + '|';\n                    return '|jpg|png|jpeg|'.indexOf(type) !== -1;\n                }\n            };\n            return {\n                restrict: 'A',\n                link: function( scope, el, attr, ctrl ) {\n\n                    var reader;\n\n                    if (!helper.support) return;\n\n                    scope.$watch( attr.ifmUploaderPreviewImage, function( newValue, oldValue ) {\n                        if ( typeof newValue === 'string' && newValue.length > 0 ) {\n                            var url = $parse(attr.ifmUploaderPreviewImage)(scope);\n                            el.css('background-image', 'url(' + url + ')').addClass('image-selected');\n                        } else {\n\n                            if ( !helper.isFile( newValue ) ) return;\n                            if ( !helper.isImage( newValue ) ) return;\n                            reader = new FileReader();\n                            reader.onload = function (e) {\n                                el.css('background-image', 'url(' + e.target.result + ')').addClass('image-selected');\n                            };\n                            reader.readAsDataURL( newValue );\n                        }\n                    });\n\n                }\n            };\n        }]);\n\n})();\n","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .directive(\"ifmUploaderPreviewVideo\", ['$window', function( $window ) {\n            return {\n                restrict: 'A',\n                link: function( scope, el, attr, ctrl ) {\n\n                    scope.$watch( attr.ifmUploaderPreviewVideo, function( newValue, oldValue ) {\n                        console.log('ifmUploaderPreviewVideo - newValue', newValue);\n                        if ( typeof newValue === 'object' ) {\n                            el.addClass('video-selected');\n                        }\n                    });\n\n                }\n            };\n        }]);\n\n})();","(function(){\n    \"use strict\";\n\n    console.log('ifmMin loaded');\n\n    angular.module('panelApp')\n        .directive(\"ifmMin\", function(){\n            return {\n                restrict: 'A',\n                require: 'ngModel',\n                link: function( scope, el, attr, ctrl ) {\n                    var minVal = parseFloat( attr.ifmMin );\n                    ctrl.$validators.ifmMin = function(modelValue, viewValue) {\n                        if ( ctrl.$isEmpty(modelValue) ) {\n                            return true;\n                        }\n                        var val = parseFloat(viewValue);\n                        if ( isNaN(val) ) {\n                            return false;\n                        }\n                        return val >= minVal;\n                    };\n                }\n            };\n        });\n\n})();\n","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .directive(\"ifmMax\", function(){\n            return {\n                restrict: 'A',\n                require: 'ngModel',\n                link: function( scope, el, attr, ctrl ) {\n                    var maxVal = parseFloat( attr.ifmMax );\n                    ctrl.$validators.ifmMax = function(modelValue, viewValue) {\n                        if ( ctrl.$isEmpty(modelValue) ) {\n                            return true;\n                        }\n                        var val = parseFloat(viewValue);\n                        if ( isNaN(val) ) {\n                            return false;\n                        }\n                        return val <= maxVal;\n                    };\n                }\n            };\n        });\n\n})();\n","(function(){\n    \"use strict\";\n\n    console.log('ifmNumber loaded');\n\n    angular.module('panelApp')\n        .directive(\"ifmNumber\", function(){\n            return {\n                restrict: 'A',\n                require: 'ngModel',\n                link: function( scope, el, attr, ctrl ) {\n                    ctrl.$validators.ifmNumber = function( modelValue, viewValue ) {\n                        if ( ctrl.$isEmpty(modelValue) ) {\n                            return true;\n                        }\n                        return !isNaN(parseFloat( viewValue )) && isFinite(viewValue);\n                    };\n                }\n            };\n        });\n\n})();","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .directive(\"campaignEditDetails\", [\n            '$alert',\n            '$state',\n            '$stateParams',\n            '$filter',\n            'utils',\n            'errorHandler',\n            'campaignsService',\n        function(\n            $alert,\n            $state,\n            $stateParams,\n            $filter,\n            utils,\n            errorHandler,\n            campaignsService\n        ){\n            return {\n                restrict: 'A',\n                scope: {},\n                templateUrl: 'panel-module/directives/campaignEditDetails/campaignEditDetailsTmpl.html',\n                controller: function( $scope ){\n\n                    $scope.fieldHasError = utils.fieldHasError;\n\n                    $scope.view = {\n                        busy: false,\n                        submitted: false\n                    };\n\n                    $scope.data = {\n                        campaignId: $stateParams.campaignId,\n                        campaign: {}\n                    };\n\n                    $scope.daterange = {\n                        dates: {\n                            startDate: null,\n                            endDate:   null\n                        },\n                        min: moment().format('YYYY-MM-DD'),\n                        display: 'Select date range'\n                    };\n\n                    var init = function() {\n\n                        $scope.view.busy = true;\n\n                        campaignsService.getCampaign( $scope.data.campaignId ).then(\n                            function( campaign ){\n\n                                $scope.data.campaign = campaign;\n\n                                if ( typeof campaign.start_date !== 'undefined' && typeof campaign.end_date !== 'undefined' ) {\n                                    $scope.daterange.dates.startDate = moment.utc( campaign.start_date );\n                                    $scope.daterange.dates.endDate = moment.utc( campaign.end_date );\n                                    $scope.daterange.display = $scope.daterange.dates.startDate.format('YYYY-MM-DD') + ' - ' + $scope.daterange.dates.endDate.format('YYYY-MM-DD');\n                                }\n\n                                $scope.view.busy = false;\n                            },\n                            function( response ) {\n                                errorHandler.processApiResponse( response );\n                            }\n                        );\n\n                    };\n\n                    $scope.$watch( function(){ return $scope.daterange.dates; }, function(newValue, oldValue) {\n                        if ( newValue === undefined || newValue.startDate === null || newValue.endDate === null ) {\n                            return;\n                        }\n                        $scope.daterange.display = newValue.startDate.format('YYYY-MM-DD') + ' - ' + newValue.endDate.format('YYYY-MM-DD');\n                    });\n\n                    $scope.showErrors = function() {\n                        return $scope.view.submitted;\n                    };\n\n                    $scope.saveForm = function() {\n\n                        $scope.view.submitted = true;\n\n                        if ( $scope.form1.$valid ) {\n\n                            var data = {\n                                id: $scope.data.campaignId,\n                                name: $scope.data.campaign.name,\n                                start_date: moment( $scope.daterange.dates.startDate ).format('YYYY-MM-DD') + 'T00:00:00.000Z',\n                                end_date: moment( $scope.daterange.dates.endDate ).format('YYYY-MM-DD') + 'T23:59:59.999Z'\n                            };\n\n                            console.log(\"save\",data);\n\n                            campaignsService.saveCampagin( data ).then(\n                                function(){\n                                    $alert({\n                                        title: 'Campaign details have been saved.',\n                                        content: '',\n                                        container: '#alerts-container',\n                                        placement: 'top',\n                                        duration: 3,\n                                        type: 'success',\n                                        show: true\n                                    });\n                                },\n                                function( response ){\n                                    errorHandler.processApiResponse( response );\n                                }\n                            );\n                        }\n                    };\n\n                    $scope.cancelEdit = function() {\n                        $state.go('campaigns');\n                    };\n\n                    init();\n                }\n            };\n        }]);\n\n})();","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .directive(\"campaignEditTargeting\", [\n            '$q',\n            '$alert',\n            '$state',\n            '$stateParams',\n            'campaignsService',\n            'errorHandler',\n            'utils',\n        function(\n            $q,\n            $alert,\n            $state,\n            $stateParams,\n            campaignsService,\n            errorHandler,\n            utils\n        ){\n            return {\n                restrict: 'A',\n                scope: {},\n                templateUrl: 'panel-module/directives/campaignEditTargeting/campaignEditTargetingTmpl.html',\n                controller: function( $scope ){\n\n                    $scope.fieldHasError = utils.fieldHasError;\n\n                    $scope.view = {\n                        busy: false,\n                        showErrors: false,\n                        errors: {},\n                        ageRanges: []\n                    };\n\n                    $scope.data = {\n                        allCategories: true,\n                        allLocations: true,\n                        categories: [],\n                        locations: [],\n                        gender: {\n                            male: true,\n                            female: true\n                        },\n                        os: {\n                            ios: true,\n                            android: true\n                        },\n                        ageRange: undefined\n                    };\n\n                    $scope.campaignId = $stateParams.campaignId;\n\n                    var init = function() {\n\n                        $scope.view.busy = true;\n\n                        campaignsService.getTargeting( $scope.campaignId ).then(\n                            function( response ) {\n                                $scope.data.allCategories  = response.allCategories;\n                                $scope.data.allLocations   = response.allLocations;\n                                $scope.data.categories     = response.categories;\n                                $scope.data.locations      = response.locations;\n                                $scope.data.gender         = response.gender;\n                                $scope.data.os             = response.os;\n                                $scope.data.ageRange       = response.ageRange;\n                                $scope.view.ageRanges      = response.ageRanges;\n                                $scope.view.busy = false;\n                            },\n                            function( response ) {\n                                errorHandler.processApiResponse( response );\n                            }\n                        );\n\n                    };\n\n                    $scope.saveForm = function() {\n\n                        $scope.view.busy = true;\n\n                        campaignsService.saveTargeting( $scope.campaignId, $scope.data ).then(\n                            function( response ) {\n                                $scope.view.showErrors = false;\n                                $scope.view.busy = false;\n                                $alert({\n                                    title: 'Campaign details have been saved.',\n                                    content: '',\n                                    container: '#alerts-container',\n                                    placement: 'top',\n                                    duration: 3,\n                                    type: 'success',\n                                    show: true\n                                });\n                            },\n                            function( response ) {\n                                $scope.view.busy = false;\n                                if ( typeof response === 'object' && ! _.isEmpty( response.validationErrors ) ) {\n                                    $scope.view.showErrors = true;\n                                    $scope.view.errors = response.validationErrors;\n                                } else {\n                                    errorHandler.processApiResponse( response );\n                                }\n                            }\n                        );\n                    };\n\n                    $scope.resetError = function( errorName ) {\n                        if ( typeof $scope.view.errors[errorName] !== 'undefined' ) {\n                            delete $scope.view.errors[errorName];\n                        }\n                    };\n\n                    $scope.cancelEdit = function() {\n                        $state.go('campaigns');\n                    };\n\n                    init();\n                }\n            };\n        }]);\n\n})();","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .directive(\"campaignEditBudgeting\", [\n            '$alert',\n            '$state',\n            '$stateParams',\n            '$timeout',\n            'campaignsService',\n            'errorHandler',\n            'utils',\n        function(\n            $alert,\n            $state,\n            $stateParams,\n            $timeout,\n            campaignsService,\n            errorHandler,\n            utils\n        ){\n            return {\n                restrict: 'A',\n                scope: {},\n                templateUrl: 'panel-module/directives/campaignEditBudgeting/campaignEditBudgetingTmpl.html',\n                controller: function( $scope ){\n\n                    $scope.fieldHasError = utils.fieldHasError;\n\n                    $scope.hasBudget = true;\n\n                    $scope.view = {\n                        busy: false,\n                        showCharts: false,\n                        submitted: false\n                    };\n\n                    $scope.data = {\n                        campaignId: $stateParams.campaignId,\n                        budgetId: undefined,\n                        budgetType: 'ongoing',\n                        bidAmount: undefined,\n                        budgetAmount: undefined\n                    };\n\n                    $scope.estViews = {\n                        daily: { percentage: 0, min: 0, max: 0 },\n                        total: { percentage: 0, min: 0, max: 0 }\n                    };\n\n                    $scope.estDailyViewsChart = {\n                        data: [ $scope.estViews.daily.percentage, 100 - $scope.estViews.daily.percentage ],\n                        labels: ['', ''],\n                        colours: [ '#f9cd3f', '#dae2e5' ],\n                        options: {\n                            animationEasing: 'easeOutQuart',\n                            showTooltips: false,\n                            segmentShowStroke: false,\n                            percentageInnerCutout: 85\n                        }\n                    };\n\n                    $scope.estTotalViewsChart = {\n                        data: [ $scope.estViews.total.percentage, 100 - $scope.estViews.total.percentage ],\n                        labels: ['', ''],\n                        colours: [ '#343b45', '#dae2e5' ],\n                        options: {\n                            animationEasing: 'easeOutQuart',\n                            showTooltips: false,\n                            segmentShowStroke: false,\n                            percentageInnerCutout: 85\n                        }\n                    };\n\n                    var mapBudgetType = function( type ) {\n                        var types = [ 'ongoing', 'fixed', 'daily' ];\n                        if ( typeof type === 'number' ) {\n                            return types[ type - 1 ];\n                        } else if ( typeof type === 'string' ) {\n                            type = types.indexOf( type );\n                            return type + 1;\n                        }\n                    };\n\n                    var init = function() {\n\n                        $scope.view.busy = true;\n\n                        campaignsService.getCampaignBudget( $scope.data.campaignId ).then(\n                            function( response ) {\n                                if ( typeof response === 'undefined' ) {\n                                    $scope.hasBudget = false;\n                                } else {\n                                    $scope.data.budgetId = response.id;\n                                    $scope.data.bidAmount = response.cost_per_view;\n                                    $scope.data.budgetAmount = response.amount;\n                                    $scope.data.budgetType = mapBudgetType( response.type );\n                                }\n                                $scope.view.busy = false;\n                                updateEstimatedViews();\n                            },\n                            function( response ) {\n                                errorHandler.processApiResponse( response );\n                            }\n                        );\n                    };\n\n                    $scope.changedBid = function() {\n                        updateEstimatedViews();\n                    };\n\n                    var updateEstimatedViews = function() {\n                        if ( typeof $scope.data.bidAmount === 'undefined' ) {\n                            $scope.estViews = {\n                                daily: { percentage: 0, min: 0, max: 0 },\n                                total: { percentage: 0, min: 0, max: 0 }\n                            };\n                            updateCharts();\n                            $scope.view.showCharts = true;\n                        } else {\n                            campaignsService.getEstimatedViews( $scope.data.campaignId, $scope.data.bidAmount ).then(\n                                function( response ) {\n                                    $scope.estViews = response;\n                                    updateCharts();\n                                    $scope.view.showCharts = true;\n                                },\n                                function( response ) {\n                                    errorHandler.processApiResponse( response );\n                                }\n                            );\n                        }\n                    };\n\n                    var updateCharts = function() {\n                        $scope.estDailyViewsChart.data = [ $scope.estViews.daily.percentage, 100 - $scope.estViews.daily.percentage ];\n                        $scope.estTotalViewsChart.data = [ $scope.estViews.total.percentage, 100 - $scope.estViews.total.percentage ];\n                    };\n\n                    $scope.showErrors = function() {\n                        return $scope.view.submitted;\n                    };\n\n                    $scope.saveForm = function() {\n\n                        $scope.view.submitted = true;\n\n                        if ( $scope.form1.$valid ) {\n\n                            var data = {\n                                cost_per_view: $scope.data.bidAmount,\n                                amount: $scope.data.budgetAmount,\n                                type: mapBudgetType( $scope.data.budgetType )\n                            };\n\n                            if ( $scope.data.budgetType === 'ongoing' ) {\n                                data.amount = 0;\n                            }\n\n                            campaignsService.saveCampaignBudget( $scope.data.campaignId, data, $scope.hasBudget, $scope.data.budgetId ).then(\n                                function( response ) {\n                                    $alert({\n                                        title: 'Campaign details have been saved.',\n                                        content: '',\n                                        container: '#alerts-container',\n                                        placement: 'top',\n                                        duration: 3,\n                                        type: 'success',\n                                        show: true\n                                    });\n                                },\n                                function( response ) {\n                                    errorHandler.processApiResponse( response );\n                                }\n                            );\n                        }\n                    };\n\n                    $scope.cancelEdit = function() {\n                        $state.go('campaigns');\n                    };\n\n                    init();\n                }\n            };\n        }]);\n\n})();","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .directive(\"campaignEditMedia\", [\n            '$state',\n            '$stateParams',\n            '$alert',\n            '$sce',\n            'apiUrl',\n            'utils',\n            '$modal',\n            'errorHandler',\n            'mediaService',\n            'campaignsService',\n        function(\n            $state,\n            $stateParams,\n            $alert,\n            $sce,\n            apiUrl,\n            utils,\n            $modal,\n            errorHandler,\n            mediaService,\n            campaignsService\n        ){\n            return {\n                restrict: 'A',\n                scope: {},\n                templateUrl: 'panel-module/directives/campaignEditMedia/campaignEditMediaTmpl.html',\n                controller: function( $scope ){\n\n                    $scope.fieldHasError = utils.fieldHasError;\n                    $scope.videogular = { sources: [] };\n                    $scope.videogularApi = null;\n\n                    $scope.view = {\n                        loading: false,\n                        submitted: false,\n                        loadingMedia: false,\n                        mediaLoaded: false,\n                        playerReady: false,\n                        videoSet: false\n                    };\n\n                    $scope.data = {\n                        campaignId: $stateParams.campaignId,\n                        campaign: {},\n                        media: {},\n                        mediaTitle: '',\n                        mediaDesc: ''\n                    };\n\n                    var init = function() {\n\n                        $scope.view.loading = true;\n                        campaignsService.getCampaign( $scope.data.campaignId ).then(function( campaign ){\n                            $scope.data.campaign = campaign;\n                            if ( campaign.media.length > 0 && typeof campaign.media[0] === 'object' ) {\n                                $scope.data.media = campaign.media[0];\n                                $scope.data.mediaTitle = campaign.media[0].media_title;\n                                $scope.data.mediaDesc  = campaign.media[0].media_description;\n                            }\n                            $scope.view.loading = false;\n\n                            if ( hasVideo() ) {\n                                $scope.view.mediaLoaded = true;\n                                if ( $scope.view.playerReady ) {\n                                    $scope.setVideo();\n                                }\n                            }\n                        });\n                    };\n\n                    var hasVideo = function() {\n                        if ( typeof $scope.data.media.video === 'string' ) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    };\n\n                    $scope.hasMedia = function() {\n                        if ( Object.getOwnPropertyNames( $scope.data.media ).length === 0 ) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    };\n\n                    $scope.onPlayerReady = function( API ) {\n                        $scope.view.playerReady = true;\n                        $scope.videogularApi = API;\n                        if ( hasVideo() && !$scope.view.videoSet ) {\n                            $scope.setVideo();\n                        }\n                    };\n\n                    $scope.setVideo = function() {\n                        $scope.videogularApi.stop();\n                        $scope.videogular.sources = [\n                            {src: $sce.trustAsResourceUrl($scope.data.media.video), type: \"video/mp4\"}\n                        ];\n                        $scope.view.videoSet = true;\n                    };\n\n                    $scope.showMediaLibrary = function() {\n                        var options = {\n                            submit: function( selectedMedia ) {\n                                $scope.getMedia( selectedMedia.id );\n                            }\n                        };\n                        $modal({\n                            templateUrl: 'panel-module/components/mediaLibraryModal/modalTmpl.html',\n                            controller: 'mediaLibraryModalCtrl',\n                            animation: 'am-fade-and-scale',\n                            resolve: {\n                                modalOptions: function() {\n                                    return options;\n                                }\n                            }\n                        });\n                    };\n\n                    $scope.showNewMediaDialog = function() {\n                        var options = {\n                            mode: 'campaignEditor',\n                            submit: function( mediaId ) {\n                                console.log(\"mediaId\",mediaId);\n                                $scope.getMedia( mediaId );\n                            }\n                        };\n                        $modal({\n                            templateUrl: 'panel-module/components/newMediaModal/modalTmpl.html',\n                            controller: 'newMediaModalCtrl',\n                            animation: 'am-fade-and-scale',\n                            backdrop: 'static',\n                            resolve: {\n                                modalOptions: function() {\n                                    return options;\n                                }\n                            }\n                        });\n                    };\n\n                    $scope.getMedia = function( mediaId ) {\n                        $scope.view.loadingMedia = true;\n                        $scope.view.mediaLoaded = false;\n                        mediaService.getMediaItem( mediaId ).then(\n                            function( media ) {\n                                $scope.data.media = media;\n                                $scope.setVideo();\n                                $scope.view.loadingMedia = false;\n                                $scope.view.mediaLoaded = true;\n                            },\n                            function() {\n                                $scope.view.loadingMedia = false;\n                            }\n                        );\n                    };\n\n                    $scope.showErrors = function() {\n                        return $scope.view.submitted;\n                    };\n\n                    $scope.saveForm = function() {\n\n                        $scope.view.submitted = true;\n\n                        if ( $scope.form1.$valid ) {\n\n                            var mediaData = {\n                                campaignId: $scope.data.campaignId,\n                                media: $scope.data.media.id,\n                                media_title:  $scope.data.mediaTitle,\n                                media_description:  $scope.data.mediaDesc\n                            };\n\n                            console.log(\"save : mediaData\", mediaData);\n\n                            campaignsService.saveMedia( mediaData ).then(\n                                function() {\n                                    $alert({\n                                        title: 'Campaign details have been saved.',\n                                        content: '',\n                                        container: '#alerts-container',\n                                        placement: 'top',\n                                        duration: 3,\n                                        type: 'success',\n                                        show: true\n                                    });\n                                },\n                                function( response ) {\n                                    errorHandler.processApiResponse( response );\n                                }\n                            );\n\n                        }\n                    };\n\n                    $scope.cancelEdit = function() {\n                        $state.go('campaigns');\n                    };\n\n                    init();\n                }\n            };\n        }]);\n\n})();","(function(){\n    \"use strict\";\n\n    angular.module('panelApp')\n        .directive(\"campaignEditProducts\", [\n            '$state',\n            '$stateParams',\n            '$alert',\n            '$sce',\n            'apiUrl',\n            'utils',\n            '$modal',\n            'errorHandler',\n            'productsService',\n            'campaignsService',\n        function(\n            $state,\n            $stateParams,\n            $alert,\n            $sce,\n            apiUrl,\n            utils,\n            $modal,\n            errorHandler,\n            productsService,\n            campaignsService\n        ){\n            return {\n                restrict: 'A',\n                scope: {},\n                templateUrl: 'panel-module/directives/campaignEditProducts/campaignEditProductsTmpl.html',\n                controller: function( $scope ){\n\n                    $scope.fieldHasError = utils.fieldHasError;\n                    $scope.videogular = { sources: [] };\n                    $scope.videogularApi = null;\n\n                    $scope.view = {\n                        loading: false,\n                        submitted: false,\n                        loadingMedia: false,\n                        mediaLoaded: false,\n                        playerReady: false,\n                        videoSet: false\n                    };\n\n                    $scope.data = {\n                        campaignId: $stateParams.campaignId,\n                        campaign: {},\n                        products: []\n                    };\n\n                    var init = function() {\n\n                        $scope.view.loading = true;\n                        campaignsService.getCampaign( $scope.data.campaignId ).then(function( campaign ){\n                            $scope.data.campaign = campaign;\n                            if ( campaign.products.length > 0 ) {\n                                $scope.data.products = campaign.products;\n                            }\n                            $scope.view.loading = false;\n                        });\n                    };\n\n                    $scope.hasProducts = function() {\n                        return ! _.isEmpty( $scope.data.products );\n                    };\n\n                    $scope.removeProduct = function( index ) {\n                        $scope.data.products.splice(index, 1);\n                        return;\n                    };\n\n                    $scope.showErrors = function() {\n                        return $scope.view.submitted;\n                    };\n\n                    $scope.showProductsLibrary = function() {\n                        var options = {\n                            submit: function( selectedProduct ) {\n                                $scope.data.products.unshift( selectedProduct );\n                            }\n                        };\n                        $modal({\n                            templateUrl: 'panel-module/components/producstLibraryModal/modalTmpl.html',\n                            controller: 'producstLibraryModalCtrl',\n                            animation: 'am-fade-and-scale',\n                            resolve: {\n                                modalOptions: function() {\n                                    return options;\n                                }\n                            }\n                        });\n                    };\n\n                    $scope.showNewProductDialog = function() {\n                        var options = {\n                            mode: 'campaignEditor',\n                            submit: function( newProduct ) {\n                                console.log(\"newProduct\",newProduct);\n                                $scope.data.products.unshift( newProduct );\n                            }\n                        };\n                        $modal({\n                            templateUrl: 'panel-module/components/newProductModal/modalTmpl.html',\n                            controller: 'newProductModalCtrl',\n                            animation: 'am-fade-and-scale',\n                            backdrop: 'static',\n                            resolve: {\n                                modalOptions: function() {\n                                    return options;\n                                }\n                            }\n                        });\n                    };\n\n                    $scope.saveForm = function() {\n\n                        $scope.view.submitted = true;\n\n                        if ( $scope.form1.$valid ) {\n\n                            console.log(\"save : data\", $scope.data.campaignId, $scope.data.products);\n\n                            productsService.updateProducts( $scope.data.products ).then(\n                                function() {\n                                    campaignsService.saveProducts( $scope.data.campaignId, $scope.data.products ).then(\n                                        function( response ) {\n                                            $alert({\n                                                title: 'Campaign details have been saved.',\n                                                content: '',\n                                                container: '#alerts-container',\n                                                placement: 'top',\n                                                duration: 3,\n                                                type: 'success',\n                                                show: true\n                                            });\n                                        },\n                                        function( response ) {\n                                            errorHandler.processApiResponse( response );\n                                        }\n                                    );\n                                },\n                                function( response ) {\n                                    errorHandler.processApiResponse( response );\n                                }\n                            );\n\n                        }\n                    };\n\n                    $scope.cancelEdit = function() {\n                        $state.go('campaigns');\n                    };\n\n                    init();\n                }\n            };\n        }]);\n\n})();","(function(){\n    'use strict';\n\n    angular.module('panelApp')\n        .filter('campaignStatus', function () {\n            return function ( statusCode ) {\n                var statusMap = [\n                    'Incomplete',\n                    'Billing',      // campaign that was created but the payment has to been yet processed\n                    'Prepared',     // campaign created and waiting to go LIVE in their planned lottery\n                    'Live',         // campaign currently available in KaChing\n                    'Completed',\n                    'Stopped'\n                ];\n                return statusMap[ parseInt(statusCode) ];\n            };\n        });\n\n})();\n","(function(){\n    'use strict';\n\n    angular.module('panelApp')\n        .filter('transactionStatus', function () {\n            return function ( statusCode ) {\n                var statusMap = [\n                    'Pending',\n                    'Completed',\n                    'Failed'\n                ];\n                return statusMap[ parseInt(statusCode) - 1 ];\n            };\n        });\n\n})();\n","(function(){\n    'use strict';\n\n    angular.module('panelApp')\n        .filter('transactionType', function () {\n            return function ( code ) {\n                var statusMap = [\n                    'One time pay'\n                ];\n                return statusMap[ parseInt(code) - 1 ];\n            };\n        });\n})();\n","(function(){\n    'use strict';\n\n    angular.module('panelApp')\n        .filter('budgetType', function () {\n            return function ( type ) {\n                var types = [ 'Ongoing', 'Fixed', 'Daily' ];\n                return types[ type - 1 ];\n            };\n        });\n})();\n","(function(){\n    'use strict';\n\n    angular.module('panelApp')\n        .filter('trustUrl', ['$sce', function ($sce) {\n            return function (recordingUrl) {\n                return $sce.trustAsResourceUrl(recordingUrl);\n            };\n        }]);\n})();\n"],"sourceRoot":"/source/"}