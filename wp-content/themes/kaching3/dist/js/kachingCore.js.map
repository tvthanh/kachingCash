{"version":3,"sources":["kachingCore.js","login-controller.js","signup-controller.js","forgot-password-controller.js","utils.js","modalCtrl.js","apiService.js","apiUlabService.js","ulabService.js","authService.js","authToken.js","userService.js","errorHandler.js","loader.js","preventDefault.js","passwordMatch.js","panelTitle.js","header.js","userNavBar.js","resetPassword.js","activateAccount.js","angular-daterangepicker.js","userSettingsCtrl.js","accountDetailsCtrl.js","fundDetailsCtrl.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrljBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"kachingCore.js","sourcesContent":["'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore', ['underscore', 'ngSanitize', 'ngAnimate', 'ngCookies', 'ui.router', 'mgcrea.ngStrap', 'oc.lazyLoad', 'highcharts-ng', 'daterangepicker', 'angularFileUpload', 'ui.bootstrap']);\n\n    angular.module('kachingCore').constant('apiUrl', kachingAppConfig.apiUrl).constant('sessionDays', 30).config(['$stateProvider', '$urlRouterProvider', 'highchartsNGProvider', '$locationProvider', function config($stateProvider, $urlRouterProvider, highchartsNGProvider, $locationProvider) {\n        $stateProvider.state('login', {\n            url: '/login',\n            templateUrl: kachingAppConfig.wpTemplateUri + '/assets/kaching/login/login-layout.html',\n            controller: 'loginCtrl'\n        }).state('activate', {\n            url: '/activate/?uid&token',\n            templateUrl: kachingAppConfig.wpTemplateUri + '/assets/kaching/activate/activate-layout.html'\n        }).state('resetPassword', {\n            url: '/reset-password/?uid&token',\n            templateUrl: kachingAppConfig.wpTemplateUri + '/assets/kaching/reset-password/reset-password-layout.html'\n        });\n    }]).controller('kachingCoreCtrl', ['$scope', '$rootScope', '$ocLazyLoad', '$urlRouter', '$modal', '$window', 'authService', '$state', '$alert', function ($scope, $rootScope, $ocLazyLoad, $urlRouter, $modal, $window, authService, $state, $alert) {\n\n        $rootScope.online = navigator.onLine;\n        $window.addEventListener('offline', function () {\n            $rootScope.$apply(function () {\n                $rootScope.online = false;\n            });\n        }, false);\n\n        $window.addEventListener('online', function () {\n            $rootScope.$apply(function () {\n                $rootScope.online = true;\n            });\n        }, false);\n\n        $scope.$watch('online', function (status) {\n            if (status || status === 'true') {} else {\n                $alert({\n                    title: '',\n                    content: 'Please check your network connection!',\n                    container: '#alerts-container',\n                    placement: 'top-right',\n                    duration: 5,\n                    type: 'danger',\n                    show: true\n                });\n            }\n        });\n\n        $rootScope.kachingAppConfig = kachingAppConfig;\n\n        if (kachingAppConfig.isHomePage === true && authService.isLoggedIn()) {\n            $window.location.href = kachingAppConfig.panelUrl;\n        } else if (kachingAppConfig.isPanelPage === true) {\n            $scope.isPanelPage = true;\n            $ocLazyLoad.load(kachingAppConfig.wpTemplateUri + '/dist/js/panelApp.js').then(function (panelApp) {\n                $urlRouter.sync();\n            });\n        } else {\n            $state.go('login');\n        }\n\n        $scope.showSignupDialog = function () {\n            $modal({\n                templateUrl: kachingAppConfig.wpTemplateUri + '/assets/kaching/login/templates/signup-modal-tmpl.html',\n                controller: 'signupModalCtrl',\n                animation: 'am-fade-and-scale',\n                placement: 'center'\n            });\n        };\n    }]);\n\n    angular.module('kachingCore').directive('enterPress', function () {\n        return function (scope, element, attrs) {\n            element.bind('keydown keypress', function (event) {\n                if (event.which === 13) {\n                    scope.$apply(function () {\n                        scope.$eval(attrs.enterPress);\n                    });\n\n                    event.preventDefault();\n                }\n            });\n        };\n    });\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').controller('loginCtrl', ['$scope', '$alert', '$modal', '$state', '$window', 'authService', 'utils', function ($scope, $alert, $modal, $state, $window, authService, utils) {\n\n        $scope.view = {\n            busy: false,\n            formError: false\n        };\n\n        $scope.loginFormData = {\n            email: '',\n            password: ''\n        };\n\n        $scope.signinFormSubmit = function () {\n\n            $scope.view.busy = true;\n            $scope.view.formError = false;\n\n            authService.login($scope.loginFormData.email, $scope.loginFormData.password).then(function (user) {\n                $scope.view.busy = false;\n                $window.location.href = kachingAppConfig.panelUrl;\n            }, function () {\n                $scope.view.busy = false;\n                $scope.view.formError = true;\n            });\n        };\n\n        $scope.showSignupDialog = function () {\n            $modal({\n                templateUrl: kachingAppConfig.wpTemplateUri + '/assets/kaching/signup/signup-tmpl.html',\n                controller: 'signupModalCtrl',\n                animation: 'am-fade-and-scale',\n                // placement: 'center',\n                backdrop: 'static'\n            });\n        };\n\n        $scope.showForgotPasswordDialog = function () {\n            $modal({\n                templateUrl: templateDirUri + '/assets/kaching/forgot-password/forgot-password-tmpl.html',\n                controller: 'forgotPasswordModalCtrl',\n                animation: 'am-fade-and-scale',\n                // placement: 'center'\n                backdrop: 'static'\n            });\n        };\n    }]);\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').controller('signupModalCtrl', ['$scope', '$rootScope', 'errorHandler', '$modal', 'utils', 'userService', 'FileUploader', function ($scope, $rootScope, errorHandler, $modal, utils, userService, FileUploader) {\n        $scope.view = {\n            sending: false,\n            submitted: false,\n            success: false\n        };\n\n        $scope.data = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            company: '',\n            password: '',\n            avatar: undefined\n        };\n\n        $scope.view.signupSuccess = false;\n\n        $scope.changeTooltipClass = function () {\n            angular.element('.tooltip-inner').addClass('custom-tooltip-inner');\n            angular.element('.tooltip-arrow').addClass('custom-tooltip-arrow');\n        };\n\n        $scope.fieldHasError = utils.fieldHasError;\n        $scope.profileImageUploader = new FileUploader();\n\n        $scope.previewImage = function (event) {\n            var imageFile = event.target.files[0];\n            if (imageFile) {\n                var reader = new FileReader();\n                reader.readAsDataURL(imageFile);\n                reader.addEventListener('load', function () {\n                    angular.element('#profileImage').css('background-image', 'url(' + reader.result + ')');\n                });\n\n                $scope.data.avatar = imageFile;\n            }\n        };\n\n        $scope.showErrors = function () {\n            return $scope.view.submitted;\n        };\n\n        $scope.clearCustomErrors = function () {\n            $scope.form1.email.$setValidity('emailRegistered', true);\n            $scope.form1.email.$setValidity('emailInvalid', true);\n        };\n\n        $scope.usertypeImgSrc = function (type) {\n            var image = '';\n            if (type === 'advertiser') {\n                image = $scope.data.usertype === 1 ? 'ic_advertiser_fill.svg' : 'ic_advertiser.svg';\n            }\n            if (type === 'publisher') {\n                image = $scope.data.usertype === 2 ? 'ic_publisher_fill.svg' : 'ic_publisher.svg';\n            }\n            return kachingAppConfig.wpTemplateUri + '/assets/images/' + image;\n        };\n\n        var hasEmailError = function hasEmailError(response) {\n            var error = _.findWhere(response.data.errorDetails.paramsMistake.mistakenParams, { name: 'email' });\n            if (typeof error !== 'undefined') {\n                return true;\n            } else {\n                return false;\n            }\n        };\n\n        $scope.signupFormSubmit = function () {\n            $scope.view.submitted = true;\n            if ($scope.form1.$valid) {\n                switch ($scope.targetOption) {\n                    case '1':\n                        $scope.data.company_code = $scope.code;\n                        break;\n                    case '2':\n                        $scope.data.company_code = 'demo';\n                        break;\n                    case '3':\n                        $scope.data.company_code = 'temporary';\n                        break;\n                    default:\n\n                }\n                $scope.register();\n            }\n        };\n\n        $scope.register = function () {\n            userService.registerUser($scope.data).then(function (repsonse) {\n                $scope.view.success = true;\n                $scope.view.signupSuccess = true;\n            }, function (response) {\n                $scope.view.signupSuccess = false;\n                $scope.view.success = false;\n                $scope.view.sending = false;\n\n                if (response.status === 400 && hasEmailError(response)) {\n                    $scope.form1.email.$setValidity('emailRegistered', false);\n                    $scope.view.sending = false;\n                } else {\n                    errorHandler.processApiResponse(response);\n                    $scope.$hide();\n                }\n            });\n        };\n\n        $scope.showCodeError = function () {\n            return $scope.data && $scope.targetOption == 1;\n        };\n    }]);\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').controller('forgotPasswordModalCtrl', ['$scope', 'errorHandler', '$modal', 'utils', 'userService', function ($scope, errorHandler, $modal, utils, userService) {\n\n        $scope.fieldHasError = utils.fieldHasError;\n\n        $scope.view = {\n            sending: false,\n            submitted: false,\n            success: false\n        };\n\n        $scope.data = {\n            email: ''\n        };\n\n        $scope.showErrors = function () {\n            return $scope.view.submitted;\n        };\n\n        $scope.formSubmit = function () {\n            $scope.view.submitted = true;\n            if ($scope.form1.$valid) {\n\n                $scope.view.sending = true;\n\n                userService.passwordResetRequest($scope.data.email).then(function (user) {\n                    $scope.view.sending = false;\n                    $scope.view.success = true;\n                }, function (response) {\n                    errorHandler.processApiResponse(response);\n                    $scope.$hide();\n                });\n            }\n        };\n\n        $scope.showLoginDialog = function () {\n            $scope.$hide();\n            $modal({\n                templateUrl: templateDirUri + '/assets/js/kaching-core/components/loginModal/modalTmpl.html',\n                controller: 'loginModalCtrl',\n                animation: 'am-fade-and-scale',\n                placement: 'center'\n            });\n        };\n    }]);\n})();","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').factory('utils', [function () {\n\n        var fieldHasError = function fieldHasError(elScope, formName, fieldName, error) {\n            var field;\n\n            if (elScope.hasOwnProperty(formName) && _typeof(elScope[formName]) === 'object') {\n                field = elScope[formName][fieldName];\n            } else if (elScope.$parent.hasOwnProperty(formName) && _typeof(elScope.$parent[formName]) === 'object') {\n                field = elScope.$parent[formName][fieldName];\n            }\n\n            if (typeof field === 'undefined') {\n                return false;\n            }\n\n            if (typeof error !== 'undefined') {\n                return field.$error[error] ? true : false;\n            } else {\n                return field.$invalid ? true : false;\n            }\n        };\n\n        // Allow only 1 image and 1 video in the upload queue\n        var cleanupUploaderQueue = function cleanupUploaderQueue(uploader) {\n            var videoItems = [],\n                audioItems = [],\n                imageItems = [],\n                wt3AndImageItems = [];\n            angular.forEach(uploader.getNotUploadedItems(), function (item, index) {\n                if (item.alias === 'video') {\n                    videoItems.push({ queueIndex: index });\n                } else if (item.alias === 'audio') {\n                    audioItems.push({ queueIndex: index });\n                } else if (item.alias === 'wt3AndImage') {\n                    wt3AndImageItems.push({ queueIndex: index });\n                } else {\n                    imageItems.push({ queueIndex: index });\n                }\n            });\n            if (videoItems.length > 1) {\n                uploader.removeFromQueue(videoItems[0].queueIndex);\n            }\n            if (audioItems.length > 1) {\n                uploader.removeFromQueue(audioItems[0].queueIndex);\n            }\n            if (imageItems.length > 1) {\n                uploader.removeFromQueue(imageItems[0].queueIndex);\n            }\n            if (wt3AndImageItems.length > 1) {\n                uploader.removeFromQueue(wt3AndImageItems[0].queueIndex);\n            }\n        };\n\n        var addUploaderTypeFilter = function addUploaderTypeFilter(uploader, alias, filter) {\n            var name = Object.keys(filter)[0];\n            var acceptedTypes = filter[name];\n            uploader.filters.push({\n                name: name,\n                fn: function fn(file, uploaderItem) {\n                    if (uploaderItem.alias !== alias) {\n                        return true;\n                    }\n                    if (acceptedTypes.indexOf(file.type) === -1) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }\n            });\n        };\n\n        // URL validation regex based on the Django URL validator used in the backend\n        //   Differences:\n        //     - scheme has been made optional\n        //     - there is no check for the dashes at the end of domain name and tld (due to lack of support for lookbehind in JS)\n        var urlRegex = function urlRegex() {\n\n            var ul = '\\\\u00a1-\\\\uffff'; // unicode letters range (must be a unicode string, not a raw string)\n\n            // IP patterns\n            var ipv4_re = '(?:25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}';\n            var ipv6_re = '([0-9a-f:\\\\.]+)'; // (simple regex, validated later)\n\n            // Host patterns\n            var hostname_re = '[a-z' + ul + '0-9](?:[a-z' + ul + '0-9-]{0,61}[a-z' + ul + '0-9])?';\n\n            // Max length for domain name labels is 63 characters per RFC 1034 sec. 3.1\n            var domain_re = '(?:\\\\.(?!-)[a-z' + ul + '0-9-]{1,63})*';\n\n            // Original was (with lookbehind):\n            // domain_re = r'(?:\\.(?!-)[a-z' + ul + r'0-9-]{1,63}(?<!-))*'\n\n            var tld_re = '';\n            tld_re += '\\\\.'; // dot\n            tld_re += '(?!-)'; // can't start with a dash\n            tld_re += '(?:[a-z' + ul + '-]{2,63}'; // domain label\n            tld_re += '|xn--[a-z0-9]{1,59})'; // or punycode label\n            // tld_re += '(?<!-)';                            // can't end with a dash (lookbehind...)\n            tld_re += '\\\\.?'; // may have a trailing dot\n\n            var host_re = '(' + hostname_re + domain_re + tld_re + '|localhost)';\n\n            var regex = '';\n            regex += '^(?:(?:[a-z0-9\\\\.\\\\-\\\\+]*):\\\\/\\\\/)?'; // scheme. This is one big diffrence from the backend validation - scheme is optional\n            regex += '(?:\\\\S+(?::\\\\S*)?@)?'; // user:pass authentication\n            regex += '(?:' + ipv4_re + '|' + ipv6_re + '|' + host_re + ')';\n            regex += '(?::\\\\d{2,5})?'; // port\n            regex += '(?:[/?#][^\\\\s]*)?'; // resource path\n            regex += '$';\n\n            return new RegExp(regex, 'i');\n        };\n\n        var campaignId = undefined;\n\n        var getCampaignId = function getCampaignId() {\n            return campaignId;\n        };\n\n        var setCampaignId = function setCampaignId(value) {\n            campaignId = value;\n        };\n\n        var viewDetail = false;\n\n        var getViewDetail = function getViewDetail() {\n            return viewDetail;\n        };\n\n        var setViewDetail = function setViewDetail(value) {\n            viewDetail = value;\n        };\n\n        var helper = {\n            isImage: function isImage(url) {\n                var type = '|' + url.slice(url.lastIndexOf('.') + 1) + '|';\n                return '|jpg|png|jpeg|'.indexOf(type) !== -1;\n            },\n            isAudio: function isAudio(url) {\n                var type = '|' + url.slice(url.lastIndexOf('.') + 1) + '|';\n                return '|mp3|'.indexOf(type) !== -1;\n            },\n            isVideo: function isVideo(url) {\n                var type = '|' + url.slice(url.lastIndexOf('.') + 1) + '|';\n                return '|mkv|flv|vob|ogv|ogg|avi|wmv|mpg|m4v|mp4|mov|'.indexOf(type) !== -1;\n            },\n            isWikiTude: function isWikiTude(url) {\n                var type = '|' + url.slice(url.lastIndexOf('.') + 1) + '|';\n                return '|wt3|'.indexOf(type) !== -1;\n            }\n        };\n\n        var getArType = function getArType(url) {\n            if (helper.isImage(url)) {\n                return 'image';\n            }\n            if (helper.isAudio(url)) {\n                return 'audio';\n            }\n            if (helper.isVideo(url)) {\n                return 'video';\n            }\n            if (helper.isWikiTude(url)) {\n                return 'wikitude';\n            }\n            return false;\n        };\n\n        return {\n            fieldHasError: fieldHasError,\n            cleanupUploaderQueue: cleanupUploaderQueue,\n            addUploaderTypeFilter: addUploaderTypeFilter,\n            urlRegex: urlRegex,\n            getCampaignId: getCampaignId,\n            setCampaignId: setCampaignId,\n            getArType: getArType,\n            setViewDetail: setViewDetail,\n            getViewDetail: getViewDetail\n        };\n    }]);\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').controller('resetPasswordModalCtrl', ['$scope', 'errorHandler', '$modal', 'utils', 'userService', function ($scope, errorHandler, $modal, utils, userService) {\n\n        $scope.fieldHasError = utils.fieldHasError;\n\n        $scope.view = {\n            sending: false,\n            submitted: false,\n            success: false\n        };\n\n        $scope.data = {\n            newPassword: '',\n            newPasswordRepeat: '',\n            token: kachingAppConfig.resetPassword.token,\n            uid: kachingAppConfig.resetPassword.uid\n        };\n\n        $scope.showErrors = function () {\n            return $scope.view.submitted;\n        };\n\n        $scope.formSubmit = function () {\n            $scope.view.submitted = true;\n            if ($scope.form1.$valid) {\n\n                $scope.view.sending = true;\n\n                userService.passwordReset($scope.data.newPassword, $scope.data.uid, $scope.data.token).then(function () {\n                    $scope.view.sending = false;\n                    $scope.view.success = true;\n                }, function (response) {\n                    errorHandler.processApiResponse(response);\n                    $scope.$hide();\n                });\n            }\n        };\n\n        $scope.showLoginDialog = function () {\n            $scope.$hide();\n            $modal({\n                templateUrl: templateDirUri + '/assets/js/kaching-core/components/loginModal/modalTmpl.html',\n                // templateUrl: 'kaching-core/components/loginModal/modalTmpl.html',// from master\n                controller: 'loginModalCtrl',\n                animation: 'am-fade-and-scale',\n                placement: 'center'\n            });\n        };\n    }]);\n})();","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').factory('apiService', ['$http', '$cookies', '$q', '$window', 'apiUrl', 'authToken', function ($http, $cookies, $q, $window, apiUrl, authToken) {\n\n        return {\n            get: getRequest,\n            put: putRequest,\n            post: postRequest,\n            patch: patchRequest,\n            delete: deleteRequest,\n            postMultiPart: postMultiPart,\n            patchMultiPart: patchMultiPart\n        };\n\n        function makeRequest(method, path, data, authRequired) {\n\n            var deferred = $q.defer();\n\n            var request = {\n                method: method,\n                url: apiUrl + path\n            };\n\n            if (data) {\n                if (method === 'GET') {\n                    request.params = data;\n                } else {\n                    request.data = data;\n                }\n            }\n\n            if (authRequired) {\n                request.headers = {\n                    'Authorization': 'Token ' + authToken.get(true)\n                };\n            }\n\n            $http(request).then(function (response) {\n                deferred.resolve(response.data);\n            }, function (response) {\n                if (response.status === 403 && request.url.match(/\\/auth\\/logout\\/$/) === null) {\n                    destroyCookies();\n                    $window.location.href = kachingAppConfig.panelUrl + '#expired';\n                }\n                deferred.reject(response);\n            });\n\n            return deferred.promise;\n        }\n\n        function destroyCookies() {\n            $cookies.remove('usertype', {\n                path: '/'\n            });\n            authToken.delete();\n        }\n\n        function getRequest(path, data, authRequired) {\n            data = (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object' ? false : data;\n            authRequired = authRequired === true ? true : false;\n            return makeRequest('GET', path, data, authRequired);\n        }\n\n        function putRequest(path, data, authRequired) {\n            data = (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object' ? false : data;\n            authRequired = authRequired === true ? true : false;\n            return makeRequest('PUT', path, data, authRequired);\n        }\n\n        function postRequest(path, data, authRequired) {\n            data = (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object' ? false : data;\n            authRequired = authRequired === true ? true : false;\n            return makeRequest('POST', path, data, authRequired);\n        }\n\n        function patchRequest(path, data, authRequired) {\n            data = (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object' ? false : data;\n            authRequired = authRequired === true ? true : false;\n            return makeRequest('PATCH', path, data, authRequired);\n        }\n\n        function deleteRequest(path, data, authRequired) {\n            data = (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object' ? false : data;\n            authRequired = authRequired === true ? true : false;\n            return makeRequest('DELETE', path, data, authRequired);\n        }\n\n        function makeMultiPartRequest(method, path, data, authRequired) {\n\n            var deferred = $q.defer();\n\n            var request = {\n                method: method,\n                url: apiUrl + path,\n                transformRequest: angular.identity\n            };\n\n            if (authRequired) {\n                request.headers = {\n                    'Content-Type': undefined,\n                    'Authorization': 'Token ' + authToken.get(true)\n                };\n            } else {\n                request.headers = {\n                    'Content-Type': undefined\n                };\n            }\n\n            var fd = new FormData();\n\n            for (var key in data) {\n                if (data.hasOwnProperty(key)) {\n                    fd.append(key, data[key]);\n                }\n            }\n\n            request.data = fd;\n\n            $http(request).then(function (response) {\n                deferred.resolve(response.data);\n            }, function (response) {\n                if (response.status === 403 && request.url.match(/\\/auth\\/logout\\/$/) === null) {\n                    destroyCookies();\n                    $window.location.href = kachingAppConfig.panelUrl + '#expired';\n                }\n                deferred.reject(response);\n            });\n\n            return deferred.promise;\n        }\n\n        function postMultiPart(path, data, authRequired) {\n            data = (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object' ? false : data;\n            authRequired = authRequired === true ? true : false;\n            return makeMultiPartRequest('POST', path, data, authRequired);\n        }\n\n        function patchMultiPart(path, data, authRequired) {\n            data = (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object' ? false : data;\n            authRequired = authRequired === true ? true : false;\n            return makeMultiPartRequest('PATCH', path, data, authRequired);\n        }\n    }]);\n})();","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').factory('apiUlabService', ['$http', '$cookies', '$q', '$window', 'ulabApiUrl', 'ulabService', function ($http, $cookies, $q, $window, ulabApiUrl, ulabService) {\n\n        return {\n            get: getRequest,\n            put: putRequest,\n            post: postRequest,\n            patch: patchRequest,\n            delete: deleteRequest\n        };\n\n        function makeRequest(method, path, data, authRequired) {\n\n            var deferred = $q.defer();\n\n            var request = {\n                method: method,\n                url: ulabApiUrl + path\n            };\n\n            if (data) {\n                if (method === 'GET') {\n                    request.params = data;\n                } else {\n                    request.data = data;\n                    request.data.email = 'kachingmail@ulab.com';\n                    request.data.password = '12345678';\n                }\n            }\n\n            if (authRequired) {\n                request.headers = {\n                    'Accept': 'application/vnd.ulab.v0+json',\n                    'Authorization': 'Bearer ' + ulabService.getUlabToken()\n                };\n            }\n\n            $http(request).then(function (response) {\n                deferred.resolve(response.data);\n            }, function (response) {\n                if (response.status === 403 && request.url.match(/\\/auth\\/logout\\/$/) === null) {\n                    $window.location.href = kachingAppConfig.panelUrl + '#expired';\n                }\n                deferred.reject(response);\n            });\n\n            return deferred.promise;\n        }\n\n        function getRequest(path, data, authRequired) {\n            data = (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object' ? false : data;\n            authRequired = authRequired === true ? true : false;\n            return makeRequest('GET', path, data, authRequired);\n        }\n\n        function putRequest(path, data, authRequired) {\n            data = (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object' ? false : data;\n            authRequired = authRequired === true ? true : false;\n            return makeRequest('PUT', path, data, authRequired);\n        }\n\n        function postRequest(path, data, authRequired) {\n            data = (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object' ? false : data;\n            authRequired = authRequired === true ? true : false;\n            return makeRequest('POST', path, data, authRequired);\n        }\n\n        function patchRequest(path, data, authRequired) {\n            data = (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object' ? false : data;\n            authRequired = authRequired === true ? true : false;\n            return makeRequest('PATCH', path, data, authRequired);\n        }\n\n        function deleteRequest(path, data, authRequired) {\n            data = (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object' ? false : data;\n            authRequired = authRequired === true ? true : false;\n            return makeRequest('DELETE', path, data, authRequired);\n        }\n    }]);\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').factory('ulabService', ['$http', '$cookies', '$q', function ($http, $cookies, $q) {\n\n        var tokenInfo = null;\n\n        return {\n            getToken: getToken,\n            requestUlabAuthToken: requestUlabAuthToken,\n            saveUlabToken: saveUlabToken,\n            deleteUlabToken: deleteUlabToken,\n            getUlabToken: getUlabToken\n        };\n\n        function getToken(forceNew) {\n            var deferred = $q.defer();\n\n            requestAuthToken().then(function (token) {\n                // saveToken(token, token.expires_in);\n                deferred.resolve(token);\n            }, function (error) {\n                // deleteToken();\n                deferred.reject();\n            });\n\n            return deferred.promise;\n        }\n\n        function requestAuthToken() {\n            var deferred = $q.defer();\n\n            var data = {\n                client_id: 'kaching_2da03ec3',\n                client_secret: '5c853e7535e265cef8ax92Ka',\n                grant_type: 'client_credentials',\n                scope: 'client_access'\n            };\n\n            var request = {\n                method: 'POST',\n                url: 'http://search.ulab.com/oauth2',\n                headers: {\n                    Accept: 'application/vnd.ulab.v0+json'\n                },\n                data: data\n            };\n\n            $http(request).then(function (result) {\n                if (result.data.status_code === 200) {\n                    tokenInfo = {\n                        token_type: result.data.token_type,\n                        expires_in: result.data.expires_in,\n                        access_token: result.data.access_token\n                    };\n                    deferred.resolve(tokenInfo);\n                } else {\n                    deferred.reject();\n                }\n            }).catch(function (res) {\n                deferred.reject();\n            });\n\n            return deferred.promise;\n        }\n\n        function requestUlabAuthToken() {\n            var deferred = $q.defer();\n\n            var data = {\n                client_id: 'kaching_2da03ec3',\n                client_secret: '5c853e7535e265cef8ax92Ka',\n                grant_type: 'client_credentials',\n                scope: 'client_access'\n            };\n\n            var request = {\n                method: 'POST',\n                url: 'http://search.ulab.com/oauth2',\n                headers: {\n                    Accept: 'application/vnd.ulab.v0+json'\n                },\n                data: data\n            };\n\n            $http(request).then(function (result) {\n                if (result.data.status_code === 200) {\n                    var token = {\n                        name: result.data.token_type,\n                        expires: result.data.expires_in,\n                        value: result.data.access_token\n                    };\n                    deferred.resolve(token);\n                } else {\n                    deferred.reject();\n                }\n            }).catch(function (res) {\n                deferred.reject();\n            });\n\n            return deferred.promise;\n        }\n\n        function saveUlabToken(token) {\n            var now = new Date();\n            now.setHours(now.getHours() + token.expires / 3600);\n            var expires = now;\n            $cookies.put(token.name, token.value, {\n                path: '/',\n                expires: expires\n            });\n        }\n\n        function deleteUlabToken() {\n            $cookies.remove('Bearer', {\n                path: '/'\n            });\n        }\n\n        function getUlabToken() {\n            var token = $cookies.get('Bearer');\n            if (token) {\n                return token;\n            } else {\n                return false;\n            }\n        }\n    }]);\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').factory('authService', ['$q', '$cookies', 'utils', 'apiService', 'authToken', 'userService', 'sessionDays', 'ulabService', function ($q, $cookies, utils, apiService, authToken, userService, sessionDays, ulabService) {\n        return {\n            switchUserType: switchUserType,\n            isLoggedIn: isLoggedIn,\n            getUsertype: getUsertype,\n            isAdvertiser: isAdvertiser,\n            isDeveloper: isDeveloper,\n            login: login,\n            logout: logout\n        };\n\n        function switchUserType(type) {\n\n            var expires = new Date();\n            expires.setDate(expires.getDate() + sessionDays);\n\n            if (type === 'advertiser') {\n                if (isAdvertiser()) {\n                    return false;\n                }\n                $cookies.put('usertype', 'advertiser', {\n                    path: '/',\n                    expires: expires\n                });\n                return true;\n            } else if (type === 'developer') {\n                if (isDeveloper()) {\n                    return false;\n                }\n                $cookies.put('usertype', 'developer', {\n                    path: '/',\n                    expires: expires\n                });\n                return true;\n            }\n        }\n\n        function parseUsertype(usertype) {\n            usertype = parseInt(usertype);\n            if (usertype === 1) {\n                return 'advertiser';\n            } else if (usertype === 2) {\n                return 'developer';\n            } else {\n                return false;\n            }\n        }\n\n        function isLoggedIn() {\n            return authToken.get(true) !== false && typeof getUsertype() !== 'undefined' ? true : false;\n        }\n\n        function getUsertype() {\n            return $cookies.get('usertype');\n        }\n\n        function isAdvertiser() {\n            return getUsertype() === 'advertiser';\n        }\n\n        function isDeveloper() {\n            return getUsertype() === 'developer';\n        }\n\n        function requestAuthToken(email, password) {\n\n            var deferred = $q.defer();\n\n            apiService.post('/api-token-auth/', {\n                email: email,\n                password: password\n            }).then(function (response) {\n                deferred.resolve(response.token);\n            }, function (response) {\n                deferred.reject(response);\n            });\n\n            return deferred.promise;\n        }\n\n        function login(email, password) {\n\n            var deferred = $q.defer();\n\n            $cookies.remove('usertype', {\n                path: '/'\n            });\n            authToken.delete();\n            ulabService.deleteUlabToken();\n\n            requestAuthToken(email, password).then(function (token) {\n\n                // var expires = new Date();\n                // expires.setDate(expires.getDate() + sessionDays);\n                var now = new Date();\n                now.setHours(now.getHours() + 2);\n                var expires = now;\n\n                authToken.save(token, expires);\n\n                userService.getUser().then(function (user) {\n                    $cookies.put('usertype', 'advertiser', {\n                        path: '/',\n                        expires: expires\n                    });\n                    deferred.resolve(user);\n                }, function () {\n                    deferred.reject();\n                });\n            }, function () {\n                deferred.reject();\n            });\n\n            ulabService.requestUlabAuthToken().then(function (ulabToken) {\n                ulabService.saveUlabToken(ulabToken);\n            });\n\n            return deferred.promise;\n        }\n\n        function logout() {\n\n            var deferred = $q.defer();\n\n            apiService.post('/auth/logout/', false, true).finally(function () {\n                $cookies.remove('usertype', {\n                    path: '/'\n                });\n                authToken.delete();\n                deferred.resolve();\n            });\n\n            ulabService.deleteUlabToken();\n\n            return deferred.promise;\n        }\n    }]);\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').factory('authToken', ['$cookies', function ($cookies) {\n        var authToken;\n\n        return {\n            save: saveToken,\n            delete: deleteToken,\n            get: getToken\n        };\n\n        function saveToken(token, expires) {\n            $cookies.put('token', token, {\n                path: '/',\n                expires: expires\n            });\n        }\n\n        function deleteToken() {\n            $cookies.remove('token', {\n                path: '/'\n            });\n        }\n\n        function getToken(forceCookieCheck) {\n\n            if (authToken && !forceCookieCheck) {\n                return authToken;\n            }\n\n            var token = $cookies.get('token');\n            if (token) {\n                authToken = token;\n                return authToken;\n            }\n\n            return false;\n        }\n    }]);\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').factory('userService', ['$q', 'apiService', function ($q, apiService) {\n\n        var user;\n\n        return {\n            getUser: getUser,\n            getBalance: getBalance,\n            updateUser: updateUser,\n            changePassword: changePassword,\n            passwordResetRequest: passwordResetRequest,\n            passwordReset: passwordReset,\n            registerUser: registerUser,\n            activateAccount: activateAccount,\n            getCountries: getCountries\n        };\n\n        function getUser() {\n\n            var deferred = $q.defer();\n\n            apiService.get('/users/profile/', false, true).then(function (response) {\n                user = {\n                    id: response.id,\n                    email: response.email,\n                    firstName: response.first_name ? response.first_name : '',\n                    lastName: response.last_name ? response.last_name : '',\n                    company: response.company ? response.company : '',\n                    country: response.country ? response.country.toString() : undefined,\n                    city: response.city ? response.city : '',\n                    address: response.address ? response.address : '',\n                    postalCode: response.postal_code ? response.postal_code : '',\n                    avatar: response.avatar\n                };\n                document.cookie = 'isStaff=' + response.is_staff + ';';\n                deferred.resolve(user);\n            }, function (response) {\n                deferred.reject(response);\n            });\n\n            return deferred.promise;\n        }\n\n        function getBalance() {\n\n            var deferred = $q.defer();\n\n            apiService.get('/auth/me/balance/', false, true).then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                deferred.reject(response);\n            });\n\n            return deferred.promise;\n        }\n\n        function updateUser(user) {\n\n            var deferred = $q.defer();\n            var data = {\n                first_name: user.firstName,\n                last_name: user.lastName,\n                email: user.email,\n                company: user.company,\n                country: user.country,\n                city: user.city,\n                address: user.address,\n                postal_code: user.postalCode,\n                avatar: user.avatar\n            };\n\n            if (data.avatar) {\n                apiService.patchMultiPart('/users/profile/', data, true).then(function (data) {\n                    deferred.resolve(data);\n                }, function (response) {\n                    deferred.reject(response);\n                });\n            } else {\n                apiService.patch('/users/profile/', data, true).then(function (data) {\n                    deferred.resolve(data);\n                }, function (response) {\n                    deferred.reject(response);\n                });\n            }\n            return deferred.promise;\n        }\n\n        function changePassword(currentPassword, newPassword) {\n\n            var deferred = $q.defer();\n\n            var data = {\n                new_password: newPassword,\n                current_password: currentPassword\n            };\n\n            apiService.post('/auth/password/', data, true).then(function (data) {\n                deferred.resolve(data);\n            }, function (response) {\n                deferred.reject(response);\n            });\n\n            return deferred.promise;\n        }\n\n        function passwordResetRequest(email) {\n\n            var deferred = $q.defer();\n\n            var data = { email: email };\n\n            apiService.post('/auth/password/reset/', data, false).then(function (data) {\n                deferred.resolve(data);\n            }, function (response) {\n                deferred.reject(response);\n            });\n\n            return deferred.promise;\n        }\n\n        function passwordReset(password, uid, token) {\n\n            var deferred = $q.defer();\n\n            var data = {\n                uid: uid,\n                token: token,\n                new_password: password\n            };\n\n            apiService.post('/auth/password/reset/confirm/', data, false).then(function (data) {\n                deferred.resolve(data);\n            }, function (response) {\n                deferred.reject(response);\n            });\n\n            return deferred.promise;\n        }\n\n        function registerUser(user) {\n\n            var deferred = $q.defer();\n\n            var data = {\n                first_name: user.firstName,\n                last_name: user.lastName,\n                email: user.email,\n                company: user.company,\n                password: user.password,\n                groups: 1,\n                company_code: user.company_code\n            };\n\n            if (user.avatar) {\n                data.avatar = user.avatar;\n            }\n\n            apiService.postMultiPart('/auth/register/', data, false).then(function (data) {\n                deferred.resolve(data);\n            }, function (response) {\n                deferred.reject(response);\n            });\n\n            return deferred.promise;\n        }\n\n        function activateAccount(uid, token) {\n\n            var deferred = $q.defer();\n\n            var data = {\n                uid: uid,\n                token: token\n            };\n\n            apiService.post('/auth/activate/', data, false).then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                deferred.reject(response);\n            });\n\n            return deferred.promise;\n        }\n\n        function getCountries() {\n\n            var deferred = $q.defer();\n\n            apiService.get('/countries/', null, true).then(function (response) {\n                var countries = [];\n                angular.forEach(response, function (item) {\n                    countries.push({ id: item.id, name: item.short_name });\n                });\n                deferred.resolve(countries);\n            }, function (response) {\n                deferred.reject(response);\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').factory('errorHandler', ['$alert', function ($alert) {\n\n        var processApiResponse = function processApiResponse(response) {\n\n            if (response.status !== 403) {\n\n                $alert({\n                    title: 'ERROR!',\n                    content: 'An error has occured. Please try again later.',\n                    container: '#alerts-container',\n                    placement: 'top',\n                    duration: 3,\n                    type: 'danger',\n                    show: true\n                });\n            }\n        };\n\n        return {\n            processApiResponse: processApiResponse\n        };\n    }]);\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').directive('loader', function () {\n        return {\n            restrict: 'A',\n            templateUrl: templateDirUri + '/assets/js/kaching-core/directives/loader/loaderTmpl.html'\n            // templateUrl: 'kaching-core/directives/loader/loaderTmpl.html'// from master\n        };\n    });\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').directive('preventDefault', function () {\n        return {\n            restrict: 'A',\n            link: function link(scope, element, attrs) {\n                if (attrs.ngClick || attrs.href === '' || attrs.href === '#') {\n                    element.on('click', function (e) {\n                        e.preventDefault();\n                    });\n                }\n            }\n        };\n    });\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').directive('passwordMatch', [function () {\n        return {\n            require: 'ngModel',\n            link: function link(scope, elem, attrs, ctrl) {\n                var firstPassword = '#' + attrs.passwordMatch;\n                elem.add(firstPassword).on('keyup', function () {\n                    scope.$apply(function () {\n                        var v = elem.val() === jQuery(firstPassword).val();\n                        ctrl.$setValidity('pwmatch', v);\n                    });\n                });\n            }\n        };\n    }]);\n})();","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').directive('panelTitle', ['$rootScope', '$timeout', '$state', function ($rootScope, $timeout, $state) {\n        return {\n            link: function link(scope, el, attrs, ctrl) {\n\n                var originalTitle = el.text();\n\n                $rootScope.$on('$stateChangeSuccess', function () {\n                    var stateTitle = '';\n                    if (_typeof($state.$current.data) === 'object' && typeof $state.$current.data.title !== 'undefined') {\n                        stateTitle = $state.$current.data.title + ' – ';\n                    }\n                    $timeout(function () {\n                        el.text(stateTitle + originalTitle);\n                    });\n                });\n            }\n        };\n    }]);\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').directive('kachingHeader', ['$window', 'authService', function ($window, authService) {\n        return {\n            restrict: 'A',\n            controller: function controller($scope) {\n\n                $scope.loggedIn = authService.isLoggedIn();\n\n                $scope.logoClick = function () {\n                    if (authService.isLoggedIn()) {\n                        $window.location.href = kachingAppConfig.homeUrl + 'panel/';\n                    } else {\n                        $window.location.href = kachingAppConfig.homeUrl;\n                    }\n                };\n            }\n        };\n    }]);\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').directive('userNavBar', ['$rootScope', 'userService', 'authService', '$modal', '$window', '$state', function ($rootScope, userService, authService, $modal, $window, $state) {\n        return {\n            restrict: 'A',\n            replace: 'true',\n            scope: {\n                'loggedIn': '=',\n                'isHomepage': '='\n            },\n            templateUrl: templateDirUri + '/assets/js/kaching-core/directives/userNavBar/userNavBarTmpl.html',\n            // templateUrl: 'kaching-core/directives/userNavBar/userNavBarTmpl.html',\n            controller: function controller($scope) {\n\n                $scope.user = {};\n                $scope.username = '';\n                $scope.balance = null;\n\n                $scope.isPanel = kachingAppConfig.isPanelPage;\n\n                $scope.urls = {\n                    account: kachingAppConfig.panelUrl + '#/account',\n                    funds: kachingAppConfig.panelUrl + '#/add-funds',\n                    cards: kachingAppConfig.panelUrl + '#/credit-cards',\n                    searchIconUrl: kachingAppConfig.wpTemplateUri + '/assets/images/search.png',\n                    userIconUrl: kachingAppConfig.wpTemplateUri + '/assets/images/ic_user.png'\n                };\n\n                if ($scope.loggedIn) {\n                    userService.getUser().then(function (user) {\n                        $scope.user = user;\n                        $scope.username = user.email;\n                    }, function () {});\n                    userService.getBalance().then(function (response) {\n                        $scope.balance = response.credits_balance;\n                    });\n                }\n\n                $rootScope.$on('accountBalanceChanged', function () {\n                    userService.getBalance().then(function (response) {\n                        $scope.balance = response.credits_balance;\n                    });\n                });\n\n                $scope.logout = function () {\n                    authService.logout().then(function () {\n                        $window.location.href = kachingAppConfig.homeUrl;\n                    });\n                };\n\n                $scope.isAdvertiser = function () {\n                    return authService.isAdvertiser();\n                };\n\n                $scope.isDeveloper = function () {\n                    return authService.isDeveloper();\n                };\n\n                $scope.switchUserType = function (type) {\n\n                    if (authService.switchUserType(type)) {\n                        if (!$scope.isPanel) {\n                            $window.location.href = kachingAppConfig.panelUrl;\n                        } else {\n                            if (type === 'advertiser') {\n                                $state.transitionTo('dashboard');\n                            } else if (type === 'developer') {\n                                $state.transitionTo('apikeys');\n                            }\n                        }\n                    }\n                };\n\n                $scope.showLoginDialog = function () {\n                    $modal({\n                        templateUrl: templateDirUri + '/assets/js/kaching-core/components/loginModal/modalTmpl.html',\n                        // templateUrl: 'kaching-core/components/loginModal/modalTmpl.html',\n                        controller: 'loginModalCtrl',\n                        animation: 'am-fade-and-scale',\n                        placement: 'center'\n                    });\n                };\n\n                $scope.showSignupDialog = function () {\n                    $modal({\n                        templateUrl: templateDirUri + '/assets/js/kaching-core/components/signupModal/modalTmpl.html',\n                        // templateUrl: 'kaching-core/components/signupModal/modalTmpl.html',\n                        controller: 'signupModalCtrl',\n                        animation: 'am-fade-and-scale',\n                        placement: 'center'\n                    });\n                };\n                $scope.showStartCampaignDialog = function (e) {\n                    e.preventDefault();\n                    $modal({\n                        templateUrl: templateDirUri + '/assets/kaching/campaign/campaign-modal-tmpl.html',\n                        controller: 'startCampaingCtrl',\n                        // controller: 'signupModalCtrl',\n                        animation: 'am-fade-and-scale',\n                        placement: 'center'\n                    });\n                };\n\n                $scope.showUserSettingsPopup = function () {\n\n                    var option = {\n                        templateUrl: kachingAppConfig.wpTemplateUri + '/assets/kaching/userSettings/userSettingsTmpl.html',\n                        controller: 'userSettingsCtrl',\n                        animation: 'am-fade-and-scale',\n                        // placement: 'center',\n                        backdrop: 'static',\n                        title: 'User Settings',\n                        onShow: function onShow() {\n                            angular.element('html').css('overflow', 'hidden');\n                        },\n                        onBeforeHide: function onBeforeHide() {\n                            angular.element('html').css('overflow', 'initial');\n                        },\n                        resolve: {\n                            campaignId: function campaignId() {\n                                return undefined;\n                            }\n                        }\n                    };\n\n                    $modal(option);\n                };\n            }\n        };\n    }]);\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').directive('resetPassword', ['$alert', '$modal', 'utils', 'userService', '$location', '$state', function ($alert, $modal, utils, userService, $location, $state) {\n        return {\n            restrict: 'A',\n            templateUrl: templateDirUri + '/assets/js/kaching-core/directives/resetPassword/resetPasswordTmpl.html',\n            controller: function controller($scope) {\n\n                $scope.fieldHasError = utils.fieldHasError;\n\n                $scope.view = {\n                    urlError: false,\n                    sending: false,\n                    submitted: false,\n                    success: false\n                };\n\n                var kachingQueryParams = {\n                    uid: $location.search().uid,\n                    token: $location.search().token\n                };\n\n                $scope.data = {\n                    newPassword: '',\n                    newPasswordRepeat: '',\n                    token: kachingQueryParams.token,\n                    uid: kachingQueryParams.uid\n                };\n\n                if (typeof kachingQueryParams.uid === 'undefined' || typeof kachingQueryParams.token === 'undefined') {\n                    $scope.view.urlError = true;\n                }\n\n                $scope.showErrors = function () {\n                    return $scope.view.submitted;\n                };\n\n                $scope.formSubmit = function () {\n                    $scope.view.submitted = true;\n                    if ($scope.form1.$valid) {\n\n                        $scope.view.sending = true;\n\n                        userService.passwordReset($scope.data.newPassword, $scope.data.uid, $scope.data.token).then(function () {\n                            $scope.view.sending = false;\n                            $scope.view.success = true;\n                        }, function (response) {\n                            $scope.view.urlError = true;\n                        });\n                    }\n                };\n\n                $scope.showLoginDialog = function () {\n                    // $modal({\n                    //     templateUrl: templateDirUri + '/assets/js/kaching-core/components/loginModal/modalTmpl.html',\n                    //     controller: 'loginModalCtrl',\n                    //     animation: 'am-fade-and-scale',\n                    //     placement: 'center'\n                    // });\n                    $state.go('login');\n                };\n\n                $scope.showForgotPasswordDialog = function () {\n                    // $modal({\n                    //     templateUrl: templateDirUri + '/assets/js/kaching-core/components/forgotPasswordModal/modalTmpl.html',\n                    //     controller: 'forgotPasswordModalCtrl',\n                    //     animation: 'am-fade-and-scale',\n                    //     placement: 'center'\n                    // });\n                    $modal({\n                        templateUrl: templateDirUri + '/assets/kaching/forgot-password/forgot-password-tmpl.html',\n                        controller: 'forgotPasswordModalCtrl',\n                        animation: 'am-fade-and-scale',\n                        // placement: 'center'\n                        backdrop: 'static'\n                    });\n                };\n            }\n        };\n    }]);\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').directive('activateAccount', ['$alert', '$modal', '$window', 'authService', 'userService', 'utils', '$location', function ($alert, $modal, $window, authService, userService, utils, $location) {\n        return {\n            restrict: 'A',\n            templateUrl: templateDirUri + '/assets/js/kaching-core/directives/activateAccount/activateAccountTmpl.html',\n            controller: function controller($scope) {\n\n                $scope.view = {\n                    verificationError: false,\n                    verificationSuccess: false,\n                    verificationProcessing: false,\n                    logginProcessing: false,\n                    formError: false\n                };\n\n                $scope.loginFormData = {\n                    email: '',\n                    password: ''\n                };\n\n                $scope.view.verificationProcessing = true;\n\n                var kachingQueryParams = {\n                    uid: $location.search().uid,\n                    token: $location.search().token\n                };\n\n                authService.logout().then(function () {\n\n                    if (typeof kachingQueryParams.uid !== 'string' || typeof kachingQueryParams.token !== 'string') {\n\n                        $scope.view.verificationProcessing = false;\n                        $scope.view.verificationError = true;\n                    } else {\n\n                        userService.activateAccount(kachingQueryParams.uid, kachingQueryParams.token).then(function () {\n                            $scope.view.verificationProcessing = false;\n                            $scope.view.verificationSuccess = true;\n                        }, function () {\n                            $scope.view.verificationProcessing = false;\n                            $scope.view.verificationError = true;\n                        });\n                    }\n                });\n\n                $scope.signinFormSubmit = function () {\n\n                    $scope.view.logginProcessing = true;\n                    $scope.view.formError = false;\n\n                    authService.login($scope.loginFormData.email, $scope.loginFormData.password).then(function (user) {\n                        $scope.view.logginProcessing = false;\n                        $window.location.href = kachingAppConfig.panelUrl;\n                    }, function () {\n                        $scope.view.logginProcessing = false;\n                        $scope.view.formError = true;\n                    });\n                };\n\n                $scope.showForgotPasswordDialog = function () {\n                    $modal({\n                        templateUrl: templateDirUri + '/assets/kaching/forgot-password/forgot-password-tmpl.html',\n                        controller: 'forgotPasswordModalCtrl',\n                        animation: 'am-fade-and-scale',\n                        // placement: 'center'\n                        backdrop: 'static'\n                    });\n                };\n            }\n        };\n    }]);\n})();","'use strict';\n\n(function () {\n  var picker;\n\n  picker = angular.module('daterangepicker', []);\n\n  picker.constant('dateRangePickerConfig', {\n    clearLabel: 'Clear',\n    locale: {\n      separator: ' - ',\n      format: 'YYYY-MM-DD'\n    }\n  });\n\n  picker.directive('dateRangePicker', ['$compile', '$timeout', '$parse', 'dateRangePickerConfig', function ($compile, $timeout, $parse, dateRangePickerConfig) {\n    return {\n      require: 'ngModel',\n      restrict: 'A',\n      scope: {\n        min: '=',\n        max: '=',\n        model: '=ngModel',\n        opts: '=options',\n        clearable: '='\n      },\n      link: function link($scope, element, attrs, modelCtrl) {\n        var _clear, _init, _initBoundaryField, _mergeOpts, _picker, _setDatePoint, _setEndDate, _setStartDate, _validate, _validateMax, _validateMin, customOpts, el, opts;\n        _mergeOpts = function _mergeOpts() {\n          var extend, localeExtend;\n          localeExtend = angular.extend.apply(angular, Array.prototype.slice.call(arguments).map(function (opt) {\n            return opt != null ? opt.locale : void 0;\n          }).filter(function (opt) {\n            return !!opt;\n          }));\n          extend = angular.extend.apply(angular, arguments);\n          extend.locale = localeExtend;\n          return extend;\n        };\n        el = $(element);\n        customOpts = $scope.opts;\n        opts = _mergeOpts({}, dateRangePickerConfig, customOpts);\n        _picker = null;\n        _clear = function _clear() {\n          _picker.setStartDate();\n          return _picker.setEndDate();\n        };\n        _setDatePoint = function _setDatePoint(setter) {\n          return function (newValue) {\n            if (_picker && newValue) {\n              return setter(moment(newValue));\n            }\n          };\n        };\n        _setStartDate = _setDatePoint(function (m) {\n          if (_picker.endDate < m) {\n            _picker.setEndDate(m);\n          }\n          opts.startDate = m;\n          return _picker.setStartDate(m);\n        });\n        _setEndDate = _setDatePoint(function (m) {\n          if (_picker.startDate > m) {\n            _picker.setStartDate(m);\n          }\n          opts.endDate = m;\n          return _picker.setEndDate(m);\n        });\n        _validate = function _validate(validator) {\n          return function (boundary, actual) {\n            if (boundary && actual) {\n              return validator(moment(boundary), moment(actual));\n            } else {\n              return true;\n            }\n          };\n        };\n        _validateMin = _validate(function (min, start) {\n          return min.isBefore(start) || min.isSame(start, 'day');\n        });\n        _validateMax = _validate(function (max, end) {\n          return max.isAfter(end) || max.isSame(end, 'day');\n        });\n        modelCtrl.$formatters.push(function (objValue) {\n          var f;\n          f = function f(date) {\n            if (!moment.isMoment(date)) {\n              return moment(date).format(opts.locale.format);\n            } else {\n              return date.format(opts.locale.format);\n            }\n          };\n          if (opts.singleDatePicker && objValue) {\n            return f(objValue);\n          } else if (objValue.startDate) {\n            return [f(objValue.startDate), f(objValue.endDate)].join(opts.locale.separator);\n          } else {\n            return '';\n          }\n        });\n        modelCtrl.$render = function () {\n          if (modelCtrl.$modelValue && modelCtrl.$modelValue.startDate) {\n            _setStartDate(modelCtrl.$modelValue.startDate);\n            _setEndDate(modelCtrl.$modelValue.endDate);\n          } else {\n            _clear();\n          }\n          return el.val(modelCtrl.$viewValue);\n        };\n        modelCtrl.$parsers.push(function (val) {\n          var f, objValue, x;\n          f = function f(value) {\n            return moment(value, opts.locale.format);\n          };\n          objValue = {\n            startDate: null,\n            endDate: null\n          };\n          if (angular.isString(val) && val.length > 0) {\n            if (opts.singleDatePicker) {\n              objValue = f(val);\n            } else {\n              x = val.split(opts.locale.separator).map(f);\n              objValue.startDate = x[0];\n              objValue.endDate = x[1];\n            }\n          }\n          return objValue;\n        });\n        modelCtrl.$isEmpty = function (val) {\n          return !(angular.isString(val) && val.length > 0);\n        };\n        _init = function _init() {\n          var eventType, results;\n          el.daterangepicker(angular.extend(opts, {\n            autoUpdateInput: false\n          }), function (start, end) {\n            return $scope.$apply(function () {\n              return $scope.model = opts.singleDatePicker ? start : {\n                startDate: start,\n                endDate: end\n              };\n            });\n          });\n          _picker = el.data('daterangepicker');\n          results = [];\n          for (eventType in opts.eventHandlers) {\n            results.push(el.on(eventType, function (e) {\n              var eventName;\n              eventName = e.type + '.' + e.namespace;\n              return $scope.$evalAsync(opts.eventHandlers[eventName]);\n            }));\n          }\n          return results;\n        };\n        _init();\n        $scope.$watch('model.startDate', function (n) {\n          return _setStartDate(n);\n        });\n        $scope.$watch('model.endDate', function (n) {\n          return _setEndDate(n);\n        });\n        _initBoundaryField = function _initBoundaryField(field, validator, modelField, optName) {\n          if (attrs[field]) {\n            modelCtrl.$validators[field] = function (value) {\n              return value && validator(opts[optName], value[modelField]);\n            };\n            return $scope.$watch(field, function (date) {\n              opts[optName] = date ? moment(date) : false;\n              return _init();\n            });\n          }\n        };\n        _initBoundaryField('min', _validateMin, 'startDate', 'minDate');\n        _initBoundaryField('max', _validateMax, 'endDate', 'maxDate');\n        if (attrs.options) {\n          $scope.$watch('opts', function (newOpts) {\n            opts = _mergeOpts(opts, newOpts);\n            return _init();\n          }, true);\n        }\n        if (attrs.clearable) {\n          $scope.$watch('clearable', function (newClearable) {\n            if (newClearable) {\n              opts = _mergeOpts(opts, {\n                locale: {\n                  cancelLabel: opts.clearLabel\n                }\n              });\n            }\n            _init();\n            if (newClearable) {\n              return el.on('cancel.daterangepicker', function () {\n                return $scope.$apply(function () {\n                  return $scope.model = opts.singleDatePicker ? null : {\n                    startDate: null,\n                    endDate: null\n                  };\n                });\n              });\n            }\n          });\n        }\n        return $scope.$on('$destroy', function () {\n          return _picker != null ? _picker.remove() : void 0;\n        });\n      }\n    };\n  }]);\n}).call(undefined);","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').controller('userSettingsCtrl', ['$scope', '$alert', '$modal', '$q', 'utils', 'errorHandler', 'userService', function ($scope, $alert, $modal, $q, utils, errorHandler, userService) {\n\n        $scope.fieldHasError = utils.fieldHasError;\n\n        $scope.view = {\n            loading: true,\n            sending: false,\n            submitted: false\n        };\n\n        $scope.data = {\n            user: {},\n            countries: []\n        };\n\n        $scope.tab = {\n            ACCOUNT_DETAILS: 'accountDetails',\n            FUND_DETAILS: 'fundDetails'\n        };\n\n        var templateFolder = kachingAppConfig.wpTemplateUri + '/assets/kaching/userSettings/tabs/';\n\n        $scope.userSettingTab = {\n            accountDetails: templateFolder + 'accountDetailsTmpl.html',\n            fundDetails: templateFolder + 'fundDetailsTmpl.html'\n        };\n\n        $scope.updateTab = function (tab) {\n            $scope.activedTab = tab;\n        };\n\n        // $scope.templateUrl = kachingAppConfig.wpTemplateUri + '/assets/js/kaching-core/directives/userNavBar/userNavBarTmpl.html'\n        var init = function init() {\n\n            var deferred1 = $q.defer();\n            var deferred2 = $q.defer();\n\n            var promisses = [deferred1.promise, deferred2.promise];\n\n            $scope.activedTab = $scope.tab.ACCOUNT_DETAILS;\n\n            userService.getUser().then(function (user) {\n                $scope.data.user = user;\n                deferred1.resolve(user);\n            }, function (response) {\n                deferred1.reject(response);\n            });\n\n            userService.getCountries().then(function (countries) {\n                $scope.data.countries = countries;\n                deferred2.resolve(countries);\n            }, function (response) {\n                deferred2.reject(response);\n            });\n\n            $q.all(promisses).then(function () {\n                $scope.view.loading = false;\n            }, function (response) {\n                errorHandler.processApiResponse(response);\n            });\n        };\n\n        $scope.showErrors = function () {\n            return $scope.view.submitted;\n        };\n\n        $scope.showPasswordChangeDialog = function () {\n            $modal({\n                // templateUrl: 'panel-module/components/passwordChangeModal/modalTmpl.html',\n                templateUrl: templateDirUri + '/assets/kaching/panel-module/components/passwordChangeModal/modalTmpl.html',\n                controller: 'passwordChangeModalCtrl',\n                animation: 'am-fade-and-scale',\n                placement: 'center',\n                backdrop: 'static'\n            });\n        };\n\n        $scope.saveProfile = function () {\n            $scope.view.submitted = true;\n            if ($scope.form1.$valid) {\n                $scope.view.sending = true;\n                userService.updateUser($scope.data.user).then(function () {\n                    $scope.view.sending = false;\n                    $alert({\n                        title: 'Account settings saved.',\n                        content: '',\n                        container: '#alerts-container',\n                        placement: 'top',\n                        duration: 3,\n                        type: 'success',\n                        show: true\n                    });\n                }, function (response) {\n                    errorHandler.processApiResponse(response);\n                });\n            }\n        };\n\n        init();\n    }]);\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').controller('accountDetailsCtrl', ['$scope', '$rootScope', 'errorHandler', '$modal', 'utils', 'userService', 'FileUploader', function ($scope, $rootScope, errorHandler, $modal, utils, userService, FileUploader) {\n\n        // Show / hide edit card form\n        $scope.toggleCardForm = function () {\n            $scope.isVisibleCardForm = !$scope.isVisibleCardForm;\n        };\n\n        $scope.profileImageUploader = new FileUploader();\n\n        $scope.previewImage = function (event) {\n            var imageFile = event.target.files[0];\n            var reader = new FileReader();\n            reader.readAsDataURL(imageFile);\n            reader.addEventListener('load', function () {\n                angular.element('#profileImage').css('background-image', 'url(' + reader.result + ')');\n            });\n        };\n\n        var init = function init() {\n            $scope.isVisibleCardForm = true;\n            $scope.notification = {\n                emailSetting: true,\n                fundSetting: true,\n                maintanenceSetting: false\n            };\n        };\n\n        init();\n    }]);\n})();","'use strict';\n\n(function () {\n    'use strict';\n\n    angular.module('kachingCore').controller('fundDetailsCtrl', ['$scope', function ($scope) {\n\n        var dataFundDetails = [{\n            title: 'Coca Cola',\n            view: '354',\n            conversion: '10.5',\n            numPayout: '25,000',\n            totalFund: '1,000,000'\n        }, {\n            title: 'Nike',\n            view: '296',\n            conversion: '25',\n            numPayout: '100,000',\n            totalFund: '550,000'\n        }, {\n            title: 'Starbucks',\n            view: '64',\n            conversion: '45',\n            numPayout: '80,000',\n            totalFund: '230,000'\n        }, {\n            title: 'Apple',\n            view: '784',\n            conversion: '87',\n            numPayout: '1,350,000',\n            totalFund: '2,300,000'\n        }, {\n            title: 'Vans',\n            view: '59',\n            conversion: '12',\n            numPayout: '8,000',\n            totalFund: '150,000'\n        }, {\n            title: 'Samsung',\n            view: '873',\n            conversion: '77',\n            numPayout: '900,000',\n            totalFund: '2,300,000'\n        }, {\n            title: 'Camper',\n            view: '109',\n            conversion: '43',\n            numPayout: '81,000',\n            totalFund: '350,000'\n        }, {\n            title: 'Sony',\n            view: '45',\n            conversion: '52',\n            numPayout: '700,000',\n            totalFund: '1,500,000'\n        }];\n\n        $scope.dataFundDetails = dataFundDetails;\n    }]);\n})();"],"sourceRoot":"/source/"}